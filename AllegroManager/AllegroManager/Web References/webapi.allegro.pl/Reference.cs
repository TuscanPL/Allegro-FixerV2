// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace AllegroManager.webapi.allegro.pl {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AllegroWebApiBinding", Namespace="urn:AllegroWebApi")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemVariantAttributeStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemVariantStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ActionDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NewPostBuyFormSellerStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(StructSellFailed))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(StructSellAgain))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BlackListResStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SysStatusType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MyFeedbackListStruct2))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MyContactList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemBilling))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MyAccountStruct2))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WaitFeedbackStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(StateInfoStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteJournalDealsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteJournal))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ShopsTagTypeStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ShipmentPriceTypeStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ShipmentPaymentInfoStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellerShipmentDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ShipmentDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingReasonStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingInfoStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellFormType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RelatedItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RefundListType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FilterValueType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FiltersListType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RefundsDealsListType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FilterOptionsType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyItemInfoStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormShipmentTrackingStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormItemDealsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormSellersStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormForBuyersDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPostBuyDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemPostBuyDataStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PaymentMethodStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BillingDataType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WonItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoldItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingStatsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingAveragePerMonthStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingReasonSumStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingDetailStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingAverageStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PayoutRefundToStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PayoutRefundFromStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PayoutPaymentsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPayoutStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPaymentRefundsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PaymentItemsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PaymentSellersStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPaymentStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NotWonItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NotSoldItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserIncomingPaymentRefundsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PaymentDetailsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserIncomingPaymentStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FutureItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemPriceStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BidItemStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AddressInfoStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProductParametersStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProductParametersGroupStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PostageStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AttribStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemCatList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemInfoStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemImageList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemImagesStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemGetImage))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemTemplateListStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FavouritesSellersStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FavouritesCategoriesStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DealsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CountryInfoType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CatInfoType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CategoryData))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BlackListStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BidListStruct2))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FinishFailureStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FinishItemsStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackResultStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackManyStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingEstimationStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemSurchargeStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TagNameStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(VariantQuantityStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(VariantStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FieldsValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserBlackListAddResultStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserBlackListStruct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PackageInfoStruct))]
    public partial class AllegroWebApiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback doAddDescToItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doAddPackageInfoToPostBuyFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback doAddToBlackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback doBidItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCancelBidItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCancelTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback doChangeItemFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doChangePriceItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback doChangeQuantityItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCheckItemDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCheckNewAuctionExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCreateItemTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback doFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback doFeedbackManyOperationCompleted;
        
        private System.Threading.SendOrPostCallback doFinishItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback doFinishItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetAdminUserLicenceDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetBidItem2OperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetBlackListUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetCategoryPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetCatsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetCatsDataCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetCatsDataLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetDealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetFavouriteCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetFavouriteSellersOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetFilledPostBuyFormsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetItemFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetItemTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetItemsImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetItemsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMessageToBuyerOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyBidItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyCurrentShipmentPriceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyFutureItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyIncomingPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyIncomingPaymentsRefundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyNotSoldItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyNotWonItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyPaymentsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyPaymentsRefundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyPayoutsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyPayoutsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMySellItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMySellRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMySoldItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetMyWonItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetPaymentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetPaymentMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetPostBuyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetPostBuyFormsDataForBuyersOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetPostBuyFormsDataForSellersOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetPostBuyItemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetRefundsDealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetRefundsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetRelatedItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellFormAttribsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellFormFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellFormFieldsExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellFormFieldsExtLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellFormFieldsForCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellFormFieldsLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSellRatingReasonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSessionHandleForWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetShipmentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetShipmentDataForRelatedItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetShipmentPriceTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetShopsTagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSiteJournalOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSiteJournalDealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSiteJournalDealsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSiteJournalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetStatesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetSystemTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetTransactionsIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetUserLicenceDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetUserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetWaitingFeedbacksOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetWaitingFeedbacksCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback doLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback doLoginEncOperationCompleted;
        
        private System.Threading.SendOrPostCallback doLoginWithAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyAccount2OperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyAccountItemsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyBillingItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyFeedback2OperationCompleted;
        
        private System.Threading.SendOrPostCallback doMyFeedback2LimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback doNewAuctionExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback doQueryAllSysStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback doQuerySysStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRemoveFromBlackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRemoveItemTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRequestCancelBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRequestPayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRequestSurchargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSellSomeAgainOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSellSomeAgainInShopOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSendEmailToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSendPostBuyFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSetShipmentPriceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSetUserLicenceDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback doShowItemInfoExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback doShowUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback doVerifyItemOperationCompleted;
        
        /// CodeRemarks
        public AllegroWebApiService() {
            this.Url = "https://webapi.allegro.pl/uploader.php";
        }
        
        public AllegroWebApiService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event doAddDescToItemsCompletedEventHandler doAddDescToItemsCompleted;
        
        /// CodeRemarks
        public event doAddPackageInfoToPostBuyFormCompletedEventHandler doAddPackageInfoToPostBuyFormCompleted;
        
        /// CodeRemarks
        public event doAddToBlackListCompletedEventHandler doAddToBlackListCompleted;
        
        /// CodeRemarks
        public event doBidItemCompletedEventHandler doBidItemCompleted;
        
        /// CodeRemarks
        public event doCancelBidItemCompletedEventHandler doCancelBidItemCompleted;
        
        /// CodeRemarks
        public event doCancelTransactionCompletedEventHandler doCancelTransactionCompleted;
        
        /// CodeRemarks
        public event doChangeItemFieldsCompletedEventHandler doChangeItemFieldsCompleted;
        
        /// CodeRemarks
        public event doChangePriceItemCompletedEventHandler doChangePriceItemCompleted;
        
        /// CodeRemarks
        public event doChangeQuantityItemCompletedEventHandler doChangeQuantityItemCompleted;
        
        /// CodeRemarks
        public event doCheckItemDescriptionCompletedEventHandler doCheckItemDescriptionCompleted;
        
        /// CodeRemarks
        public event doCheckNewAuctionExtCompletedEventHandler doCheckNewAuctionExtCompleted;
        
        /// CodeRemarks
        public event doCreateItemTemplateCompletedEventHandler doCreateItemTemplateCompleted;
        
        /// CodeRemarks
        public event doFeedbackCompletedEventHandler doFeedbackCompleted;
        
        /// CodeRemarks
        public event doFeedbackManyCompletedEventHandler doFeedbackManyCompleted;
        
        /// CodeRemarks
        public event doFinishItemCompletedEventHandler doFinishItemCompleted;
        
        /// CodeRemarks
        public event doFinishItemsCompletedEventHandler doFinishItemsCompleted;
        
        /// CodeRemarks
        public event doGetAdminUserLicenceDateCompletedEventHandler doGetAdminUserLicenceDateCompleted;
        
        /// CodeRemarks
        public event doGetBidItem2CompletedEventHandler doGetBidItem2Completed;
        
        /// CodeRemarks
        public event doGetBlackListUsersCompletedEventHandler doGetBlackListUsersCompleted;
        
        /// CodeRemarks
        public event doGetCategoryPathCompletedEventHandler doGetCategoryPathCompleted;
        
        /// CodeRemarks
        public event doGetCatsDataCompletedEventHandler doGetCatsDataCompleted;
        
        /// CodeRemarks
        public event doGetCatsDataCountCompletedEventHandler doGetCatsDataCountCompleted;
        
        /// CodeRemarks
        public event doGetCatsDataLimitCompletedEventHandler doGetCatsDataLimitCompleted;
        
        /// CodeRemarks
        public event doGetCountriesCompletedEventHandler doGetCountriesCompleted;
        
        /// CodeRemarks
        public event doGetDealsCompletedEventHandler doGetDealsCompleted;
        
        /// CodeRemarks
        public event doGetFavouriteCategoriesCompletedEventHandler doGetFavouriteCategoriesCompleted;
        
        /// CodeRemarks
        public event doGetFavouriteSellersCompletedEventHandler doGetFavouriteSellersCompleted;
        
        /// CodeRemarks
        public event doGetFeedbackCompletedEventHandler doGetFeedbackCompleted;
        
        /// CodeRemarks
        public event doGetFilledPostBuyFormsCompletedEventHandler doGetFilledPostBuyFormsCompleted;
        
        /// CodeRemarks
        public event doGetItemFieldsCompletedEventHandler doGetItemFieldsCompleted;
        
        /// CodeRemarks
        public event doGetItemTemplatesCompletedEventHandler doGetItemTemplatesCompleted;
        
        /// CodeRemarks
        public event doGetItemsImagesCompletedEventHandler doGetItemsImagesCompleted;
        
        /// CodeRemarks
        public event doGetItemsInfoCompletedEventHandler doGetItemsInfoCompleted;
        
        /// CodeRemarks
        public event doGetMessageToBuyerCompletedEventHandler doGetMessageToBuyerCompleted;
        
        /// CodeRemarks
        public event doGetMyAddressesCompletedEventHandler doGetMyAddressesCompleted;
        
        /// CodeRemarks
        public event doGetMyBidItemsCompletedEventHandler doGetMyBidItemsCompleted;
        
        /// CodeRemarks
        public event doGetMyCurrentShipmentPriceTypeCompletedEventHandler doGetMyCurrentShipmentPriceTypeCompleted;
        
        /// CodeRemarks
        public event doGetMyDataCompletedEventHandler doGetMyDataCompleted;
        
        /// CodeRemarks
        public event doGetMyFutureItemsCompletedEventHandler doGetMyFutureItemsCompleted;
        
        /// CodeRemarks
        public event doGetMyIncomingPaymentsCompletedEventHandler doGetMyIncomingPaymentsCompleted;
        
        /// CodeRemarks
        public event doGetMyIncomingPaymentsRefundsCompletedEventHandler doGetMyIncomingPaymentsRefundsCompleted;
        
        /// CodeRemarks
        public event doGetMyNotSoldItemsCompletedEventHandler doGetMyNotSoldItemsCompleted;
        
        /// CodeRemarks
        public event doGetMyNotWonItemsCompletedEventHandler doGetMyNotWonItemsCompleted;
        
        /// CodeRemarks
        public event doGetMyPaymentsCompletedEventHandler doGetMyPaymentsCompleted;
        
        /// CodeRemarks
        public event doGetMyPaymentsInfoCompletedEventHandler doGetMyPaymentsInfoCompleted;
        
        /// CodeRemarks
        public event doGetMyPaymentsRefundsCompletedEventHandler doGetMyPaymentsRefundsCompleted;
        
        /// CodeRemarks
        public event doGetMyPayoutsCompletedEventHandler doGetMyPayoutsCompleted;
        
        /// CodeRemarks
        public event doGetMyPayoutsDetailsCompletedEventHandler doGetMyPayoutsDetailsCompleted;
        
        /// CodeRemarks
        public event doGetMySellItemsCompletedEventHandler doGetMySellItemsCompleted;
        
        /// CodeRemarks
        public event doGetMySellRatingCompletedEventHandler doGetMySellRatingCompleted;
        
        /// CodeRemarks
        public event doGetMySoldItemsCompletedEventHandler doGetMySoldItemsCompleted;
        
        /// CodeRemarks
        public event doGetMyWonItemsCompletedEventHandler doGetMyWonItemsCompleted;
        
        /// CodeRemarks
        public event doGetPaymentDataCompletedEventHandler doGetPaymentDataCompleted;
        
        /// CodeRemarks
        public event doGetPaymentMethodsCompletedEventHandler doGetPaymentMethodsCompleted;
        
        /// CodeRemarks
        public event doGetPostBuyDataCompletedEventHandler doGetPostBuyDataCompleted;
        
        /// CodeRemarks
        public event doGetPostBuyFormsDataForBuyersCompletedEventHandler doGetPostBuyFormsDataForBuyersCompleted;
        
        /// CodeRemarks
        public event doGetPostBuyFormsDataForSellersCompletedEventHandler doGetPostBuyFormsDataForSellersCompleted;
        
        /// CodeRemarks
        public event doGetPostBuyItemInfoCompletedEventHandler doGetPostBuyItemInfoCompleted;
        
        /// CodeRemarks
        public event doGetRefundsDealsCompletedEventHandler doGetRefundsDealsCompleted;
        
        /// CodeRemarks
        public event doGetRefundsListCompletedEventHandler doGetRefundsListCompleted;
        
        /// CodeRemarks
        public event doGetRelatedItemsCompletedEventHandler doGetRelatedItemsCompleted;
        
        /// CodeRemarks
        public event doGetSellFormAttribsCompletedEventHandler doGetSellFormAttribsCompleted;
        
        /// CodeRemarks
        public event doGetSellFormFieldsCompletedEventHandler doGetSellFormFieldsCompleted;
        
        /// CodeRemarks
        public event doGetSellFormFieldsExtCompletedEventHandler doGetSellFormFieldsExtCompleted;
        
        /// CodeRemarks
        public event doGetSellFormFieldsExtLimitCompletedEventHandler doGetSellFormFieldsExtLimitCompleted;
        
        /// CodeRemarks
        public event doGetSellFormFieldsForCategoryCompletedEventHandler doGetSellFormFieldsForCategoryCompleted;
        
        /// CodeRemarks
        public event doGetSellFormFieldsLimitCompletedEventHandler doGetSellFormFieldsLimitCompleted;
        
        /// CodeRemarks
        public event doGetSellRatingReasonsCompletedEventHandler doGetSellRatingReasonsCompleted;
        
        /// CodeRemarks
        public event doGetSessionHandleForWidgetCompletedEventHandler doGetSessionHandleForWidgetCompleted;
        
        /// CodeRemarks
        public event doGetShipmentDataCompletedEventHandler doGetShipmentDataCompleted;
        
        /// CodeRemarks
        public event doGetShipmentDataForRelatedItemsCompletedEventHandler doGetShipmentDataForRelatedItemsCompleted;
        
        /// CodeRemarks
        public event doGetShipmentPriceTypesCompletedEventHandler doGetShipmentPriceTypesCompleted;
        
        /// CodeRemarks
        public event doGetShopsTagsCompletedEventHandler doGetShopsTagsCompleted;
        
        /// CodeRemarks
        public event doGetSiteJournalCompletedEventHandler doGetSiteJournalCompleted;
        
        /// CodeRemarks
        public event doGetSiteJournalDealsCompletedEventHandler doGetSiteJournalDealsCompleted;
        
        /// CodeRemarks
        public event doGetSiteJournalDealsInfoCompletedEventHandler doGetSiteJournalDealsInfoCompleted;
        
        /// CodeRemarks
        public event doGetSiteJournalInfoCompletedEventHandler doGetSiteJournalInfoCompleted;
        
        /// CodeRemarks
        public event doGetStatesInfoCompletedEventHandler doGetStatesInfoCompleted;
        
        /// CodeRemarks
        public event doGetSystemTimeCompletedEventHandler doGetSystemTimeCompleted;
        
        /// CodeRemarks
        public event doGetTransactionsIDsCompletedEventHandler doGetTransactionsIDsCompleted;
        
        /// CodeRemarks
        public event doGetUserIDCompletedEventHandler doGetUserIDCompleted;
        
        /// CodeRemarks
        public event doGetUserLicenceDateCompletedEventHandler doGetUserLicenceDateCompleted;
        
        /// CodeRemarks
        public event doGetUserLoginCompletedEventHandler doGetUserLoginCompleted;
        
        /// CodeRemarks
        public event doGetWaitingFeedbacksCompletedEventHandler doGetWaitingFeedbacksCompleted;
        
        /// CodeRemarks
        public event doGetWaitingFeedbacksCountCompletedEventHandler doGetWaitingFeedbacksCountCompleted;
        
        /// CodeRemarks
        public event doLoginCompletedEventHandler doLoginCompleted;
        
        /// CodeRemarks
        public event doLoginEncCompletedEventHandler doLoginEncCompleted;
        
        /// CodeRemarks
        public event doLoginWithAccessTokenCompletedEventHandler doLoginWithAccessTokenCompleted;
        
        /// CodeRemarks
        public event doMyAccount2CompletedEventHandler doMyAccount2Completed;
        
        /// CodeRemarks
        public event doMyAccountItemsCountCompletedEventHandler doMyAccountItemsCountCompleted;
        
        /// CodeRemarks
        public event doMyBillingCompletedEventHandler doMyBillingCompleted;
        
        /// CodeRemarks
        public event doMyBillingItemCompletedEventHandler doMyBillingItemCompleted;
        
        /// CodeRemarks
        public event doMyContactCompletedEventHandler doMyContactCompleted;
        
        /// CodeRemarks
        public event doMyFeedback2CompletedEventHandler doMyFeedback2Completed;
        
        /// CodeRemarks
        public event doMyFeedback2LimitCompletedEventHandler doMyFeedback2LimitCompleted;
        
        /// CodeRemarks
        public event doNewAuctionExtCompletedEventHandler doNewAuctionExtCompleted;
        
        /// CodeRemarks
        public event doQueryAllSysStatusCompletedEventHandler doQueryAllSysStatusCompleted;
        
        /// CodeRemarks
        public event doQuerySysStatusCompletedEventHandler doQuerySysStatusCompleted;
        
        /// CodeRemarks
        public event doRemoveFromBlackListCompletedEventHandler doRemoveFromBlackListCompleted;
        
        /// CodeRemarks
        public event doRemoveItemTemplatesCompletedEventHandler doRemoveItemTemplatesCompleted;
        
        /// CodeRemarks
        public event doRequestCancelBidCompletedEventHandler doRequestCancelBidCompleted;
        
        /// CodeRemarks
        public event doRequestPayoutCompletedEventHandler doRequestPayoutCompleted;
        
        /// CodeRemarks
        public event doRequestSurchargeCompletedEventHandler doRequestSurchargeCompleted;
        
        /// CodeRemarks
        public event doSellSomeAgainCompletedEventHandler doSellSomeAgainCompleted;
        
        /// CodeRemarks
        public event doSellSomeAgainInShopCompletedEventHandler doSellSomeAgainInShopCompleted;
        
        /// CodeRemarks
        public event doSendEmailToUserCompletedEventHandler doSendEmailToUserCompleted;
        
        /// CodeRemarks
        public event doSendPostBuyFormCompletedEventHandler doSendPostBuyFormCompleted;
        
        /// CodeRemarks
        public event doSetShipmentPriceTypeCompletedEventHandler doSetShipmentPriceTypeCompleted;
        
        /// CodeRemarks
        public event doSetUserLicenceDateCompletedEventHandler doSetUserLicenceDateCompleted;
        
        /// CodeRemarks
        public event doShowItemInfoExtCompletedEventHandler doShowItemInfoExtCompleted;
        
        /// CodeRemarks
        public event doShowUserCompletedEventHandler doShowUserCompleted;
        
        /// CodeRemarks
        public event doVerifyItemCompletedEventHandler doVerifyItemCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doadddesctoitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("array-items-add-id")]
        public long[] doAddDescToItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("it-description")] string itdescription, [System.Xml.Serialization.SoapElementAttribute("array-items-desc-to-long")] out long[] arrayitemsdesctolong, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound) {
            object[] results = this.Invoke("doAddDescToItems", new object[] {
                        sessionhandle,
                        itemsidarray,
                        itdescription});
            arrayitemsdesctolong = ((long[])(results[1]));
            arrayitemsnotfound = ((long[])(results[2]));
            return ((long[])(results[0]));
        }
        
        /// CodeRemarks
        public void doAddDescToItemsAsync(string sessionhandle, long[] itemsidarray, string itdescription) {
            this.doAddDescToItemsAsync(sessionhandle, itemsidarray, itdescription, null);
        }
        
        /// CodeRemarks
        public void doAddDescToItemsAsync(string sessionhandle, long[] itemsidarray, string itdescription, object userState) {
            if ((this.doAddDescToItemsOperationCompleted == null)) {
                this.doAddDescToItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddDescToItemsOperationCompleted);
            }
            this.InvokeAsync("doAddDescToItems", new object[] {
                        sessionhandle,
                        itemsidarray,
                        itdescription}, this.doAddDescToItemsOperationCompleted, userState);
        }
        
        private void OndoAddDescToItemsOperationCompleted(object arg) {
            if ((this.doAddDescToItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAddDescToItemsCompleted(this, new doAddDescToItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doaddpackageinfotopostbuyform", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("post-buy-form-package-info")]
        public PostBuyFormPackageInfoStruct doAddPackageInfoToPostBuyForm([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("transaction-id")] long transactionid, [System.Xml.Serialization.SoapElementAttribute("package-info")] PackageInfoStruct[] packageinfo) {
            object[] results = this.Invoke("doAddPackageInfoToPostBuyForm", new object[] {
                        sessionid,
                        transactionid,
                        packageinfo});
            return ((PostBuyFormPackageInfoStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doAddPackageInfoToPostBuyFormAsync(string sessionid, long transactionid, PackageInfoStruct[] packageinfo) {
            this.doAddPackageInfoToPostBuyFormAsync(sessionid, transactionid, packageinfo, null);
        }
        
        /// CodeRemarks
        public void doAddPackageInfoToPostBuyFormAsync(string sessionid, long transactionid, PackageInfoStruct[] packageinfo, object userState) {
            if ((this.doAddPackageInfoToPostBuyFormOperationCompleted == null)) {
                this.doAddPackageInfoToPostBuyFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddPackageInfoToPostBuyFormOperationCompleted);
            }
            this.InvokeAsync("doAddPackageInfoToPostBuyForm", new object[] {
                        sessionid,
                        transactionid,
                        packageinfo}, this.doAddPackageInfoToPostBuyFormOperationCompleted, userState);
        }
        
        private void OndoAddPackageInfoToPostBuyFormOperationCompleted(object arg) {
            if ((this.doAddPackageInfoToPostBuyFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAddPackageInfoToPostBuyFormCompleted(this, new doAddPackageInfoToPostBuyFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doaddtoblacklist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("user-black-list-results-arr")]
        public UserBlackListAddResultStruct[] doAddToBlackList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("users-black-list-array")] UserBlackListStruct[] usersblacklistarray) {
            object[] results = this.Invoke("doAddToBlackList", new object[] {
                        sessionhandle,
                        usersblacklistarray});
            return ((UserBlackListAddResultStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doAddToBlackListAsync(string sessionhandle, UserBlackListStruct[] usersblacklistarray) {
            this.doAddToBlackListAsync(sessionhandle, usersblacklistarray, null);
        }
        
        /// CodeRemarks
        public void doAddToBlackListAsync(string sessionhandle, UserBlackListStruct[] usersblacklistarray, object userState) {
            if ((this.doAddToBlackListOperationCompleted == null)) {
                this.doAddToBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddToBlackListOperationCompleted);
            }
            this.InvokeAsync("doAddToBlackList", new object[] {
                        sessionhandle,
                        usersblacklistarray}, this.doAddToBlackListOperationCompleted, userState);
        }
        
        private void OndoAddToBlackListOperationCompleted(object arg) {
            if ((this.doAddToBlackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAddToBlackListCompleted(this, new doAddToBlackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dobiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("bid-price")]
        public string doBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("bid-it-id")] long biditid, [System.Xml.Serialization.SoapElementAttribute("bid-user-price")] float biduserprice, [System.Xml.Serialization.SoapElementAttribute("bid-quantity")] long bidquantity, [System.Xml.Serialization.SoapElementAttribute("bid-buy-now")] long bidbuynow, [System.Xml.Serialization.SoapElementAttribute("pharmacy-recipient-data")] PharmacyRecipientDataStruct pharmacyrecipientdata, [System.Xml.Serialization.SoapElementAttribute("variant-id")] string variantid) {
            object[] results = this.Invoke("doBidItem", new object[] {
                        sessionhandle,
                        biditid,
                        biduserprice,
                        bidquantity,
                        bidbuynow,
                        pharmacyrecipientdata,
                        variantid});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doBidItemAsync(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow, PharmacyRecipientDataStruct pharmacyrecipientdata, string variantid) {
            this.doBidItemAsync(sessionhandle, biditid, biduserprice, bidquantity, bidbuynow, pharmacyrecipientdata, variantid, null);
        }
        
        /// CodeRemarks
        public void doBidItemAsync(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow, PharmacyRecipientDataStruct pharmacyrecipientdata, string variantid, object userState) {
            if ((this.doBidItemOperationCompleted == null)) {
                this.doBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoBidItemOperationCompleted);
            }
            this.InvokeAsync("doBidItem", new object[] {
                        sessionhandle,
                        biditid,
                        biduserprice,
                        bidquantity,
                        bidbuynow,
                        pharmacyrecipientdata,
                        variantid}, this.doBidItemOperationCompleted, userState);
        }
        
        private void OndoBidItemOperationCompleted(object arg) {
            if ((this.doBidItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doBidItemCompleted(this, new doBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#docancelbiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancel-bid-value")]
        public int doCancelBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("cancel-item-id")] long cancelitemid, [System.Xml.Serialization.SoapElementAttribute("cancel-bids-array")] int[] cancelbidsarray, [System.Xml.Serialization.SoapElementAttribute("cancel-bids-reason")] string cancelbidsreason, [System.Xml.Serialization.SoapElementAttribute("cancel-add-to-black-list")] long canceladdtoblacklist, [System.Xml.Serialization.SoapElementAttribute("cancelled-bids")] out int[] cancelledbids, [System.Xml.Serialization.SoapElementAttribute("not-cancelled-bids")] out int[] notcancelledbids) {
            object[] results = this.Invoke("doCancelBidItem", new object[] {
                        sessionhandle,
                        cancelitemid,
                        cancelbidsarray,
                        cancelbidsreason,
                        canceladdtoblacklist});
            cancelledbids = ((int[])(results[1]));
            notcancelledbids = ((int[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doCancelBidItemAsync(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist) {
            this.doCancelBidItemAsync(sessionhandle, cancelitemid, cancelbidsarray, cancelbidsreason, canceladdtoblacklist, null);
        }
        
        /// CodeRemarks
        public void doCancelBidItemAsync(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist, object userState) {
            if ((this.doCancelBidItemOperationCompleted == null)) {
                this.doCancelBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCancelBidItemOperationCompleted);
            }
            this.InvokeAsync("doCancelBidItem", new object[] {
                        sessionhandle,
                        cancelitemid,
                        cancelbidsarray,
                        cancelbidsreason,
                        canceladdtoblacklist}, this.doCancelBidItemOperationCompleted, userState);
        }
        
        private void OndoCancelBidItemOperationCompleted(object arg) {
            if ((this.doCancelBidItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCancelBidItemCompleted(this, new doCancelBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#docanceltransaction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancellation-result")]
        public int doCancelTransaction([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("transaction-id")] long transactionid) {
            object[] results = this.Invoke("doCancelTransaction", new object[] {
                        sessionid,
                        transactionid});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doCancelTransactionAsync(string sessionid, long transactionid) {
            this.doCancelTransactionAsync(sessionid, transactionid, null);
        }
        
        /// CodeRemarks
        public void doCancelTransactionAsync(string sessionid, long transactionid, object userState) {
            if ((this.doCancelTransactionOperationCompleted == null)) {
                this.doCancelTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCancelTransactionOperationCompleted);
            }
            this.InvokeAsync("doCancelTransaction", new object[] {
                        sessionid,
                        transactionid}, this.doCancelTransactionOperationCompleted, userState);
        }
        
        private void OndoCancelTransactionOperationCompleted(object arg) {
            if ((this.doCancelTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCancelTransactionCompleted(this, new doCancelTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dochangeitemfields", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("changed-item")]
        public ChangedItemStruct doChangeItemFields([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("fields-to-modify")] FieldsValue[] fieldstomodify, [System.Xml.Serialization.SoapElementAttribute("fields-to-remove")] int[] fieldstoremove, [System.Xml.Serialization.SoapElementAttribute("preview-only")] int previewonly, VariantStruct[] variants, TagNameStruct[] tags) {
            object[] results = this.Invoke("doChangeItemFields", new object[] {
                        sessionid,
                        itemid,
                        fieldstomodify,
                        fieldstoremove,
                        previewonly,
                        variants,
                        tags});
            return ((ChangedItemStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doChangeItemFieldsAsync(string sessionid, long itemid, FieldsValue[] fieldstomodify, int[] fieldstoremove, int previewonly, VariantStruct[] variants, TagNameStruct[] tags) {
            this.doChangeItemFieldsAsync(sessionid, itemid, fieldstomodify, fieldstoremove, previewonly, variants, tags, null);
        }
        
        /// CodeRemarks
        public void doChangeItemFieldsAsync(string sessionid, long itemid, FieldsValue[] fieldstomodify, int[] fieldstoremove, int previewonly, VariantStruct[] variants, TagNameStruct[] tags, object userState) {
            if ((this.doChangeItemFieldsOperationCompleted == null)) {
                this.doChangeItemFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoChangeItemFieldsOperationCompleted);
            }
            this.InvokeAsync("doChangeItemFields", new object[] {
                        sessionid,
                        itemid,
                        fieldstomodify,
                        fieldstoremove,
                        previewonly,
                        variants,
                        tags}, this.doChangeItemFieldsOperationCompleted, userState);
        }
        
        private void OndoChangeItemFieldsOperationCompleted(object arg) {
            if ((this.doChangeItemFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doChangeItemFieldsCompleted(this, new doChangeItemFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dochangepriceitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
        public string doChangePriceItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] ref long itemid, [System.Xml.Serialization.SoapElementAttribute("new-starting-price")] float newstartingprice, [System.Xml.Serialization.SoapElementAttribute("new-reserve-price")] float newreserveprice, [System.Xml.Serialization.SoapElementAttribute("new-buy-now-price")] float newbuynowprice) {
            object[] results = this.Invoke("doChangePriceItem", new object[] {
                        sessionhandle,
                        itemid,
                        newstartingprice,
                        newreserveprice,
                        newbuynowprice});
            itemid = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doChangePriceItemAsync(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice) {
            this.doChangePriceItemAsync(sessionhandle, itemid, newstartingprice, newreserveprice, newbuynowprice, null);
        }
        
        /// CodeRemarks
        public void doChangePriceItemAsync(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice, object userState) {
            if ((this.doChangePriceItemOperationCompleted == null)) {
                this.doChangePriceItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoChangePriceItemOperationCompleted);
            }
            this.InvokeAsync("doChangePriceItem", new object[] {
                        sessionhandle,
                        itemid,
                        newstartingprice,
                        newreserveprice,
                        newbuynowprice}, this.doChangePriceItemOperationCompleted, userState);
        }
        
        private void OndoChangePriceItemOperationCompleted(object arg) {
            if ((this.doChangePriceItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doChangePriceItemCompleted(this, new doChangePriceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dochangequantityitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
        public string doChangeQuantityItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] ref long itemid, [System.Xml.Serialization.SoapElementAttribute("new-item-quantity")] int newitemquantity, [System.Xml.Serialization.SoapElementAttribute("item-quantity-left")] out int itemquantityleft, [System.Xml.Serialization.SoapElementAttribute("item-quantity-sold")] out int itemquantitysold) {
            object[] results = this.Invoke("doChangeQuantityItem", new object[] {
                        sessionhandle,
                        itemid,
                        newitemquantity});
            itemid = ((long)(results[1]));
            itemquantityleft = ((int)(results[2]));
            itemquantitysold = ((int)(results[3]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doChangeQuantityItemAsync(string sessionhandle, long itemid, int newitemquantity) {
            this.doChangeQuantityItemAsync(sessionhandle, itemid, newitemquantity, null);
        }
        
        /// CodeRemarks
        public void doChangeQuantityItemAsync(string sessionhandle, long itemid, int newitemquantity, object userState) {
            if ((this.doChangeQuantityItemOperationCompleted == null)) {
                this.doChangeQuantityItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoChangeQuantityItemOperationCompleted);
            }
            this.InvokeAsync("doChangeQuantityItem", new object[] {
                        sessionhandle,
                        itemid,
                        newitemquantity}, this.doChangeQuantityItemOperationCompleted, userState);
        }
        
        private void OndoChangeQuantityItemOperationCompleted(object arg) {
            if ((this.doChangeQuantityItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doChangeQuantityItemCompleted(this, new doChangeQuantityItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#docheckitemdescription", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-description")]
        public ItemDescriptionStruct doCheckItemDescription([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("description-content")] string descriptioncontent) {
            object[] results = this.Invoke("doCheckItemDescription", new object[] {
                        sessionid,
                        descriptioncontent});
            return ((ItemDescriptionStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doCheckItemDescriptionAsync(string sessionid, string descriptioncontent) {
            this.doCheckItemDescriptionAsync(sessionid, descriptioncontent, null);
        }
        
        /// CodeRemarks
        public void doCheckItemDescriptionAsync(string sessionid, string descriptioncontent, object userState) {
            if ((this.doCheckItemDescriptionOperationCompleted == null)) {
                this.doCheckItemDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckItemDescriptionOperationCompleted);
            }
            this.InvokeAsync("doCheckItemDescription", new object[] {
                        sessionid,
                        descriptioncontent}, this.doCheckItemDescriptionOperationCompleted, userState);
        }
        
        private void OndoCheckItemDescriptionOperationCompleted(object arg) {
            if ((this.doCheckItemDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCheckItemDescriptionCompleted(this, new doCheckItemDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dochecknewauctionext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-price")]
        public string doCheckNewAuctionExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, VariantStruct[] variants, TagNameStruct[] tags, [System.Xml.Serialization.SoapElementAttribute("item-price-desc")] out string itempricedesc, [System.Xml.Serialization.SoapElementAttribute("item-is-allegro-standard")] out int itemisallegrostandard) {
            object[] results = this.Invoke("doCheckNewAuctionExt", new object[] {
                        sessionhandle,
                        fields,
                        variants,
                        tags});
            itempricedesc = ((string)(results[1]));
            itemisallegrostandard = ((int)(results[2]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doCheckNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, VariantStruct[] variants, TagNameStruct[] tags) {
            this.doCheckNewAuctionExtAsync(sessionhandle, fields, variants, tags, null);
        }
        
        /// CodeRemarks
        public void doCheckNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, VariantStruct[] variants, TagNameStruct[] tags, object userState) {
            if ((this.doCheckNewAuctionExtOperationCompleted == null)) {
                this.doCheckNewAuctionExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckNewAuctionExtOperationCompleted);
            }
            this.InvokeAsync("doCheckNewAuctionExt", new object[] {
                        sessionhandle,
                        fields,
                        variants,
                        tags}, this.doCheckNewAuctionExtOperationCompleted, userState);
        }
        
        private void OndoCheckNewAuctionExtOperationCompleted(object arg) {
            if ((this.doCheckNewAuctionExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCheckNewAuctionExtCompleted(this, new doCheckNewAuctionExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#docreateitemtemplate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("created-item-template")]
        public CreatedItemTemplateStruct doCreateItemTemplate([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-template-name")] string itemtemplatename, [System.Xml.Serialization.SoapElementAttribute("item-template-fields")] FieldsValue[] itemtemplatefields) {
            object[] results = this.Invoke("doCreateItemTemplate", new object[] {
                        sessionid,
                        itemtemplatename,
                        itemtemplatefields});
            return ((CreatedItemTemplateStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doCreateItemTemplateAsync(string sessionid, string itemtemplatename, FieldsValue[] itemtemplatefields) {
            this.doCreateItemTemplateAsync(sessionid, itemtemplatename, itemtemplatefields, null);
        }
        
        /// CodeRemarks
        public void doCreateItemTemplateAsync(string sessionid, string itemtemplatename, FieldsValue[] itemtemplatefields, object userState) {
            if ((this.doCreateItemTemplateOperationCompleted == null)) {
                this.doCreateItemTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCreateItemTemplateOperationCompleted);
            }
            this.InvokeAsync("doCreateItemTemplate", new object[] {
                        sessionid,
                        itemtemplatename,
                        itemtemplatefields}, this.doCreateItemTemplateOperationCompleted, userState);
        }
        
        private void OndoCreateItemTemplateOperationCompleted(object arg) {
            if ((this.doCreateItemTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCreateItemTemplateCompleted(this, new doCreateItemTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dofeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("feedback-id")]
        public int doFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("fe-item-id")] long feitemid, [System.Xml.Serialization.SoapElementAttribute("fe-use-comment-template")] int feusecommenttemplate, [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")] int fetouserid, [System.Xml.Serialization.SoapElementAttribute("fe-comment")] string fecomment, [System.Xml.Serialization.SoapElementAttribute("fe-comment-type")] string fecommenttype, [System.Xml.Serialization.SoapElementAttribute("fe-op")] int feop, [System.Xml.Serialization.SoapElementAttribute("fe-rating")] SellRatingEstimationStruct[] ferating) {
            object[] results = this.Invoke("doFeedback", new object[] {
                        sessionhandle,
                        feitemid,
                        feusecommenttemplate,
                        fetouserid,
                        fecomment,
                        fecommenttype,
                        feop,
                        ferating});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doFeedbackAsync(string sessionhandle, long feitemid, int feusecommenttemplate, int fetouserid, string fecomment, string fecommenttype, int feop, SellRatingEstimationStruct[] ferating) {
            this.doFeedbackAsync(sessionhandle, feitemid, feusecommenttemplate, fetouserid, fecomment, fecommenttype, feop, ferating, null);
        }
        
        /// CodeRemarks
        public void doFeedbackAsync(string sessionhandle, long feitemid, int feusecommenttemplate, int fetouserid, string fecomment, string fecommenttype, int feop, SellRatingEstimationStruct[] ferating, object userState) {
            if ((this.doFeedbackOperationCompleted == null)) {
                this.doFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFeedbackOperationCompleted);
            }
            this.InvokeAsync("doFeedback", new object[] {
                        sessionhandle,
                        feitemid,
                        feusecommenttemplate,
                        fetouserid,
                        fecomment,
                        fecommenttype,
                        feop,
                        ferating}, this.doFeedbackOperationCompleted, userState);
        }
        
        private void OndoFeedbackOperationCompleted(object arg) {
            if ((this.doFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doFeedbackCompleted(this, new doFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dofeedbackmany", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("fe-results")]
        public FeedbackResultStruct[] doFeedbackMany([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedbacks-list")] FeedbackManyStruct[] feedbackslist) {
            object[] results = this.Invoke("doFeedbackMany", new object[] {
                        sessionhandle,
                        feedbackslist});
            return ((FeedbackResultStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doFeedbackManyAsync(string sessionhandle, FeedbackManyStruct[] feedbackslist) {
            this.doFeedbackManyAsync(sessionhandle, feedbackslist, null);
        }
        
        /// CodeRemarks
        public void doFeedbackManyAsync(string sessionhandle, FeedbackManyStruct[] feedbackslist, object userState) {
            if ((this.doFeedbackManyOperationCompleted == null)) {
                this.doFeedbackManyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFeedbackManyOperationCompleted);
            }
            this.InvokeAsync("doFeedbackMany", new object[] {
                        sessionhandle,
                        feedbackslist}, this.doFeedbackManyOperationCompleted, userState);
        }
        
        private void OndoFeedbackManyOperationCompleted(object arg) {
            if ((this.doFeedbackManyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doFeedbackManyCompleted(this, new doFeedbackManyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dofinishitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("finish-value")]
        public int doFinishItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("finish-item-id")] long finishitemid, [System.Xml.Serialization.SoapElementAttribute("finish-cancel-all-bids")] int finishcancelallbids, [System.Xml.Serialization.SoapElementAttribute("finish-cancel-reason")] string finishcancelreason) {
            object[] results = this.Invoke("doFinishItem", new object[] {
                        sessionhandle,
                        finishitemid,
                        finishcancelallbids,
                        finishcancelreason});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doFinishItemAsync(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason) {
            this.doFinishItemAsync(sessionhandle, finishitemid, finishcancelallbids, finishcancelreason, null);
        }
        
        /// CodeRemarks
        public void doFinishItemAsync(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason, object userState) {
            if ((this.doFinishItemOperationCompleted == null)) {
                this.doFinishItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFinishItemOperationCompleted);
            }
            this.InvokeAsync("doFinishItem", new object[] {
                        sessionhandle,
                        finishitemid,
                        finishcancelallbids,
                        finishcancelreason}, this.doFinishItemOperationCompleted, userState);
        }
        
        private void OndoFinishItemOperationCompleted(object arg) {
            if ((this.doFinishItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doFinishItemCompleted(this, new doFinishItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dofinishitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("finish-items-succeed")]
        public long[] doFinishItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("finish-items-list")] FinishItemsStruct[] finishitemslist, [System.Xml.Serialization.SoapElementAttribute("finish-items-failed")] out FinishFailureStruct[] finishitemsfailed) {
            object[] results = this.Invoke("doFinishItems", new object[] {
                        sessionhandle,
                        finishitemslist});
            finishitemsfailed = ((FinishFailureStruct[])(results[1]));
            return ((long[])(results[0]));
        }
        
        /// CodeRemarks
        public void doFinishItemsAsync(string sessionhandle, FinishItemsStruct[] finishitemslist) {
            this.doFinishItemsAsync(sessionhandle, finishitemslist, null);
        }
        
        /// CodeRemarks
        public void doFinishItemsAsync(string sessionhandle, FinishItemsStruct[] finishitemslist, object userState) {
            if ((this.doFinishItemsOperationCompleted == null)) {
                this.doFinishItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFinishItemsOperationCompleted);
            }
            this.InvokeAsync("doFinishItems", new object[] {
                        sessionhandle,
                        finishitemslist}, this.doFinishItemsOperationCompleted, userState);
        }
        
        private void OndoFinishItemsOperationCompleted(object arg) {
            if ((this.doFinishItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doFinishItemsCompleted(this, new doFinishItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetadminuserlicencedate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("get-date-value")]
        public float doGetAdminUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("admin-session-handle")] string adminsessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-lic-login")] string userliclogin) {
            object[] results = this.Invoke("doGetAdminUserLicenceDate", new object[] {
                        adminsessionhandle,
                        userliclogin});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetAdminUserLicenceDateAsync(string adminsessionhandle, string userliclogin) {
            this.doGetAdminUserLicenceDateAsync(adminsessionhandle, userliclogin, null);
        }
        
        /// CodeRemarks
        public void doGetAdminUserLicenceDateAsync(string adminsessionhandle, string userliclogin, object userState) {
            if ((this.doGetAdminUserLicenceDateOperationCompleted == null)) {
                this.doGetAdminUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetAdminUserLicenceDateOperationCompleted);
            }
            this.InvokeAsync("doGetAdminUserLicenceDate", new object[] {
                        adminsessionhandle,
                        userliclogin}, this.doGetAdminUserLicenceDateOperationCompleted, userState);
        }
        
        private void OndoGetAdminUserLicenceDateOperationCompleted(object arg) {
            if ((this.doGetAdminUserLicenceDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetAdminUserLicenceDateCompleted(this, new doGetAdminUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetbiditem2", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("biditem-list")]
        public BidListStruct2[] doGetBidItem2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid) {
            object[] results = this.Invoke("doGetBidItem2", new object[] {
                        sessionhandle,
                        itemid});
            return ((BidListStruct2[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetBidItem2Async(string sessionhandle, long itemid) {
            this.doGetBidItem2Async(sessionhandle, itemid, null);
        }
        
        /// CodeRemarks
        public void doGetBidItem2Async(string sessionhandle, long itemid, object userState) {
            if ((this.doGetBidItem2OperationCompleted == null)) {
                this.doGetBidItem2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBidItem2OperationCompleted);
            }
            this.InvokeAsync("doGetBidItem2", new object[] {
                        sessionhandle,
                        itemid}, this.doGetBidItem2OperationCompleted, userState);
        }
        
        private void OndoGetBidItem2OperationCompleted(object arg) {
            if ((this.doGetBidItem2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetBidItem2Completed(this, new doGetBidItem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetblacklistusers", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("black-list-users")]
        public BlackListStruct[] doGetBlackListUsers([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
            object[] results = this.Invoke("doGetBlackListUsers", new object[] {
                        sessionhandle});
            return ((BlackListStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetBlackListUsersAsync(string sessionhandle) {
            this.doGetBlackListUsersAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetBlackListUsersAsync(string sessionhandle, object userState) {
            if ((this.doGetBlackListUsersOperationCompleted == null)) {
                this.doGetBlackListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBlackListUsersOperationCompleted);
            }
            this.InvokeAsync("doGetBlackListUsers", new object[] {
                        sessionhandle}, this.doGetBlackListUsersOperationCompleted, userState);
        }
        
        private void OndoGetBlackListUsersOperationCompleted(object arg) {
            if ((this.doGetBlackListUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetBlackListUsersCompleted(this, new doGetBlackListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetcategorypath", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("category-path")]
        public CategoryData[] doGetCategoryPath([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid) {
            object[] results = this.Invoke("doGetCategoryPath", new object[] {
                        sessionid,
                        categoryid});
            return ((CategoryData[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetCategoryPathAsync(string sessionid, int categoryid) {
            this.doGetCategoryPathAsync(sessionid, categoryid, null);
        }
        
        /// CodeRemarks
        public void doGetCategoryPathAsync(string sessionid, int categoryid, object userState) {
            if ((this.doGetCategoryPathOperationCompleted == null)) {
                this.doGetCategoryPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCategoryPathOperationCompleted);
            }
            this.InvokeAsync("doGetCategoryPath", new object[] {
                        sessionid,
                        categoryid}, this.doGetCategoryPathOperationCompleted, userState);
        }
        
        private void OndoGetCategoryPathOperationCompleted(object arg) {
            if ((this.doGetCategoryPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetCategoryPathCompleted(this, new doGetCategoryPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetcatsdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("cats-list")]
        public CatInfoType[] doGetCatsData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
            object[] results = this.Invoke("doGetCatsData", new object[] {
                        countryid,
                        localversion,
                        webapikey});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            return ((CatInfoType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetCatsDataAsync(int countryid, long localversion, string webapikey) {
            this.doGetCatsDataAsync(countryid, localversion, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetCatsDataAsync(int countryid, long localversion, string webapikey, object userState) {
            if ((this.doGetCatsDataOperationCompleted == null)) {
                this.doGetCatsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataOperationCompleted);
            }
            this.InvokeAsync("doGetCatsData", new object[] {
                        countryid,
                        localversion,
                        webapikey}, this.doGetCatsDataOperationCompleted, userState);
        }
        
        private void OndoGetCatsDataOperationCompleted(object arg) {
            if ((this.doGetCatsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetCatsDataCompleted(this, new doGetCatsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetcatsdatacount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("cats-count")]
        public int doGetCatsDataCount([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
            object[] results = this.Invoke("doGetCatsDataCount", new object[] {
                        countryid,
                        localversion,
                        webapikey});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetCatsDataCountAsync(int countryid, long localversion, string webapikey) {
            this.doGetCatsDataCountAsync(countryid, localversion, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetCatsDataCountAsync(int countryid, long localversion, string webapikey, object userState) {
            if ((this.doGetCatsDataCountOperationCompleted == null)) {
                this.doGetCatsDataCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataCountOperationCompleted);
            }
            this.InvokeAsync("doGetCatsDataCount", new object[] {
                        countryid,
                        localversion,
                        webapikey}, this.doGetCatsDataCountOperationCompleted, userState);
        }
        
        private void OndoGetCatsDataCountOperationCompleted(object arg) {
            if ((this.doGetCatsDataCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetCatsDataCountCompleted(this, new doGetCatsDataCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetcatsdatalimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("cats-list")]
        public CatInfoType[] doGetCatsDataLimit([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
            object[] results = this.Invoke("doGetCatsDataLimit", new object[] {
                        countryid,
                        localversion,
                        webapikey,
                        offset,
                        packageelement});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            return ((CatInfoType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetCatsDataLimitAsync(int countryid, long localversion, string webapikey, int offset, int packageelement) {
            this.doGetCatsDataLimitAsync(countryid, localversion, webapikey, offset, packageelement, null);
        }
        
        /// CodeRemarks
        public void doGetCatsDataLimitAsync(int countryid, long localversion, string webapikey, int offset, int packageelement, object userState) {
            if ((this.doGetCatsDataLimitOperationCompleted == null)) {
                this.doGetCatsDataLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataLimitOperationCompleted);
            }
            this.InvokeAsync("doGetCatsDataLimit", new object[] {
                        countryid,
                        localversion,
                        webapikey,
                        offset,
                        packageelement}, this.doGetCatsDataLimitOperationCompleted, userState);
        }
        
        private void OndoGetCatsDataLimitOperationCompleted(object arg) {
            if ((this.doGetCatsDataLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetCatsDataLimitCompleted(this, new doGetCatsDataLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetcountries", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("country-array")]
        public CountryInfoType[] doGetCountries([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetCountries", new object[] {
                        countrycode,
                        webapikey});
            return ((CountryInfoType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetCountriesAsync(int countrycode, string webapikey) {
            this.doGetCountriesAsync(countrycode, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetCountriesAsync(int countrycode, string webapikey, object userState) {
            if ((this.doGetCountriesOperationCompleted == null)) {
                this.doGetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCountriesOperationCompleted);
            }
            this.InvokeAsync("doGetCountries", new object[] {
                        countrycode,
                        webapikey}, this.doGetCountriesOperationCompleted, userState);
        }
        
        private void OndoGetCountriesOperationCompleted(object arg) {
            if ((this.doGetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetCountriesCompleted(this, new doGetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetdeals", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("deals-list")]
        public DealsStruct[] doGetDeals([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("buyer-id")] int buyerid) {
            object[] results = this.Invoke("doGetDeals", new object[] {
                        sessionhandle,
                        itemid,
                        buyerid});
            return ((DealsStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetDealsAsync(string sessionhandle, long itemid, int buyerid) {
            this.doGetDealsAsync(sessionhandle, itemid, buyerid, null);
        }
        
        /// CodeRemarks
        public void doGetDealsAsync(string sessionhandle, long itemid, int buyerid, object userState) {
            if ((this.doGetDealsOperationCompleted == null)) {
                this.doGetDealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetDealsOperationCompleted);
            }
            this.InvokeAsync("doGetDeals", new object[] {
                        sessionhandle,
                        itemid,
                        buyerid}, this.doGetDealsOperationCompleted, userState);
        }
        
        private void OndoGetDealsOperationCompleted(object arg) {
            if ((this.doGetDealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetDealsCompleted(this, new doGetDealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfavouritecategories", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("s-favourite-categories-list")]
        public FavouritesCategoriesStruct[] doGetFavouriteCategories([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
            object[] results = this.Invoke("doGetFavouriteCategories", new object[] {
                        sessionhandle});
            return ((FavouritesCategoriesStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetFavouriteCategoriesAsync(string sessionhandle) {
            this.doGetFavouriteCategoriesAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetFavouriteCategoriesAsync(string sessionhandle, object userState) {
            if ((this.doGetFavouriteCategoriesOperationCompleted == null)) {
                this.doGetFavouriteCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFavouriteCategoriesOperationCompleted);
            }
            this.InvokeAsync("doGetFavouriteCategories", new object[] {
                        sessionhandle}, this.doGetFavouriteCategoriesOperationCompleted, userState);
        }
        
        private void OndoGetFavouriteCategoriesOperationCompleted(object arg) {
            if ((this.doGetFavouriteCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetFavouriteCategoriesCompleted(this, new doGetFavouriteCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfavouritesellers", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("s-favourite-sellers-list")]
        public FavouritesSellersStruct[] doGetFavouriteSellers([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
            object[] results = this.Invoke("doGetFavouriteSellers", new object[] {
                        sessionhandle});
            return ((FavouritesSellersStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetFavouriteSellersAsync(string sessionhandle) {
            this.doGetFavouriteSellersAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetFavouriteSellersAsync(string sessionhandle, object userState) {
            if ((this.doGetFavouriteSellersOperationCompleted == null)) {
                this.doGetFavouriteSellersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFavouriteSellersOperationCompleted);
            }
            this.InvokeAsync("doGetFavouriteSellers", new object[] {
                        sessionhandle}, this.doGetFavouriteSellersOperationCompleted, userState);
        }
        
        private void OndoGetFavouriteSellersOperationCompleted(object arg) {
            if ((this.doGetFavouriteSellersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetFavouriteSellersCompleted(this, new doGetFavouriteSellersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("feedback-list")]
        public FeedbackList[] doGetFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-from")] int feedbackfrom, [System.Xml.Serialization.SoapElementAttribute("feedback-to")] int feedbackto, [System.Xml.Serialization.SoapElementAttribute("feedback-offset")] int feedbackoffset, [System.Xml.Serialization.SoapElementAttribute("feedback-kind-list")] string feedbackkindlist, [System.Xml.Serialization.SoapElementAttribute("feedback-count")] out int feedbackcount) {
            object[] results = this.Invoke("doGetFeedback", new object[] {
                        sessionhandle,
                        feedbackfrom,
                        feedbackto,
                        feedbackoffset,
                        feedbackkindlist});
            feedbackcount = ((int)(results[1]));
            return ((FeedbackList[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetFeedbackAsync(string sessionhandle, int feedbackfrom, int feedbackto, int feedbackoffset, string feedbackkindlist) {
            this.doGetFeedbackAsync(sessionhandle, feedbackfrom, feedbackto, feedbackoffset, feedbackkindlist, null);
        }
        
        /// CodeRemarks
        public void doGetFeedbackAsync(string sessionhandle, int feedbackfrom, int feedbackto, int feedbackoffset, string feedbackkindlist, object userState) {
            if ((this.doGetFeedbackOperationCompleted == null)) {
                this.doGetFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFeedbackOperationCompleted);
            }
            this.InvokeAsync("doGetFeedback", new object[] {
                        sessionhandle,
                        feedbackfrom,
                        feedbackto,
                        feedbackoffset,
                        feedbackkindlist}, this.doGetFeedbackOperationCompleted, userState);
        }
        
        private void OndoGetFeedbackOperationCompleted(object arg) {
            if ((this.doGetFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetFeedbackCompleted(this, new doGetFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfilledpostbuyforms", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("filled-post-buy-forms")]
        public FilledPostBuyFormsStruct doGetFilledPostBuyForms([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("payment-type")] int paymenttype, [System.Xml.Serialization.SoapElementAttribute("user-role")] int userrole, [System.Xml.Serialization.SoapElementAttribute("filling-time-from")] long fillingtimefrom, [System.Xml.Serialization.SoapElementAttribute("filling-time-to")] long fillingtimeto) {
            object[] results = this.Invoke("doGetFilledPostBuyForms", new object[] {
                        sessionid,
                        paymenttype,
                        userrole,
                        fillingtimefrom,
                        fillingtimeto});
            return ((FilledPostBuyFormsStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetFilledPostBuyFormsAsync(string sessionid, int paymenttype, int userrole, long fillingtimefrom, long fillingtimeto) {
            this.doGetFilledPostBuyFormsAsync(sessionid, paymenttype, userrole, fillingtimefrom, fillingtimeto, null);
        }
        
        /// CodeRemarks
        public void doGetFilledPostBuyFormsAsync(string sessionid, int paymenttype, int userrole, long fillingtimefrom, long fillingtimeto, object userState) {
            if ((this.doGetFilledPostBuyFormsOperationCompleted == null)) {
                this.doGetFilledPostBuyFormsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFilledPostBuyFormsOperationCompleted);
            }
            this.InvokeAsync("doGetFilledPostBuyForms", new object[] {
                        sessionid,
                        paymenttype,
                        userrole,
                        fillingtimefrom,
                        fillingtimeto}, this.doGetFilledPostBuyFormsOperationCompleted, userState);
        }
        
        private void OndoGetFilledPostBuyFormsOperationCompleted(object arg) {
            if ((this.doGetFilledPostBuyFormsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetFilledPostBuyFormsCompleted(this, new doGetFilledPostBuyFormsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetitemfields", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-fields")]
        public FieldsValue[] doGetItemFields([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid) {
            object[] results = this.Invoke("doGetItemFields", new object[] {
                        sessionid,
                        itemid});
            return ((FieldsValue[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetItemFieldsAsync(string sessionid, long itemid) {
            this.doGetItemFieldsAsync(sessionid, itemid, null);
        }
        
        /// CodeRemarks
        public void doGetItemFieldsAsync(string sessionid, long itemid, object userState) {
            if ((this.doGetItemFieldsOperationCompleted == null)) {
                this.doGetItemFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemFieldsOperationCompleted);
            }
            this.InvokeAsync("doGetItemFields", new object[] {
                        sessionid,
                        itemid}, this.doGetItemFieldsOperationCompleted, userState);
        }
        
        private void OndoGetItemFieldsOperationCompleted(object arg) {
            if ((this.doGetItemFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetItemFieldsCompleted(this, new doGetItemFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetitemtemplates", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-templates")]
        public ItemTemplatesStruct doGetItemTemplates([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-template-ids")] int[] itemtemplateids) {
            object[] results = this.Invoke("doGetItemTemplates", new object[] {
                        sessionid,
                        itemtemplateids});
            return ((ItemTemplatesStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetItemTemplatesAsync(string sessionid, int[] itemtemplateids) {
            this.doGetItemTemplatesAsync(sessionid, itemtemplateids, null);
        }
        
        /// CodeRemarks
        public void doGetItemTemplatesAsync(string sessionid, int[] itemtemplateids, object userState) {
            if ((this.doGetItemTemplatesOperationCompleted == null)) {
                this.doGetItemTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemTemplatesOperationCompleted);
            }
            this.InvokeAsync("doGetItemTemplates", new object[] {
                        sessionid,
                        itemtemplateids}, this.doGetItemTemplatesOperationCompleted, userState);
        }
        
        private void OndoGetItemTemplatesOperationCompleted(object arg) {
            if ((this.doGetItemTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetItemTemplatesCompleted(this, new doGetItemTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetitemsimages", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("get_items_images_result")]
        public ItemImagesStruct[] doGetItemsImages([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-array")] ItemGetImage[] itemsarray, [System.Xml.Serialization.SoapElementAttribute("image-type")] int imagetype) {
            object[] results = this.Invoke("doGetItemsImages", new object[] {
                        sessionhandle,
                        itemsarray,
                        imagetype});
            return ((ItemImagesStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetItemsImagesAsync(string sessionhandle, ItemGetImage[] itemsarray, int imagetype) {
            this.doGetItemsImagesAsync(sessionhandle, itemsarray, imagetype, null);
        }
        
        /// CodeRemarks
        public void doGetItemsImagesAsync(string sessionhandle, ItemGetImage[] itemsarray, int imagetype, object userState) {
            if ((this.doGetItemsImagesOperationCompleted == null)) {
                this.doGetItemsImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemsImagesOperationCompleted);
            }
            this.InvokeAsync("doGetItemsImages", new object[] {
                        sessionhandle,
                        itemsarray,
                        imagetype}, this.doGetItemsImagesOperationCompleted, userState);
        }
        
        private void OndoGetItemsImagesOperationCompleted(object arg) {
            if ((this.doGetItemsImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetItemsImagesCompleted(this, new doGetItemsImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetitemsinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("array-item-list-info")]
        public ItemInfoStruct[] doGetItemsInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("get-attribs")] int getattribs, [System.Xml.Serialization.SoapElementAttribute("get-postage-options")] int getpostageoptions, [System.Xml.Serialization.SoapElementAttribute("get-company-info")] int getcompanyinfo, [System.Xml.Serialization.SoapElementAttribute("get-product-info")] int getproductinfo, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound, [System.Xml.Serialization.SoapElementAttribute("array-items-admin-killed")] out long[] arrayitemsadminkilled) {
            object[] results = this.Invoke("doGetItemsInfo", new object[] {
                        sessionhandle,
                        itemsidarray,
                        getdesc,
                        getimageurl,
                        getattribs,
                        getpostageoptions,
                        getcompanyinfo,
                        getproductinfo});
            arrayitemsnotfound = ((long[])(results[1]));
            arrayitemsadminkilled = ((long[])(results[2]));
            return ((ItemInfoStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetItemsInfoAsync(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, int getproductinfo) {
            this.doGetItemsInfoAsync(sessionhandle, itemsidarray, getdesc, getimageurl, getattribs, getpostageoptions, getcompanyinfo, getproductinfo, null);
        }
        
        /// CodeRemarks
        public void doGetItemsInfoAsync(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, int getproductinfo, object userState) {
            if ((this.doGetItemsInfoOperationCompleted == null)) {
                this.doGetItemsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemsInfoOperationCompleted);
            }
            this.InvokeAsync("doGetItemsInfo", new object[] {
                        sessionhandle,
                        itemsidarray,
                        getdesc,
                        getimageurl,
                        getattribs,
                        getpostageoptions,
                        getcompanyinfo,
                        getproductinfo}, this.doGetItemsInfoOperationCompleted, userState);
        }
        
        private void OndoGetItemsInfoOperationCompleted(object arg) {
            if ((this.doGetItemsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetItemsInfoCompleted(this, new doGetItemsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmessagetobuyer", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("message-to-buyer")]
        public MessageToBuyerStruct doGetMessageToBuyer([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid) {
            object[] results = this.Invoke("doGetMessageToBuyer", new object[] {
                        sessionid,
                        itemid});
            return ((MessageToBuyerStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMessageToBuyerAsync(string sessionid, long itemid) {
            this.doGetMessageToBuyerAsync(sessionid, itemid, null);
        }
        
        /// CodeRemarks
        public void doGetMessageToBuyerAsync(string sessionid, long itemid, object userState) {
            if ((this.doGetMessageToBuyerOperationCompleted == null)) {
                this.doGetMessageToBuyerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMessageToBuyerOperationCompleted);
            }
            this.InvokeAsync("doGetMessageToBuyer", new object[] {
                        sessionid,
                        itemid}, this.doGetMessageToBuyerOperationCompleted, userState);
        }
        
        private void OndoGetMessageToBuyerOperationCompleted(object arg) {
            if ((this.doGetMessageToBuyerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMessageToBuyerCompleted(this, new doGetMessageToBuyerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmyaddresses", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("addresses-info")]
        public AddressInfoStruct[] doGetMyAddresses([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid) {
            object[] results = this.Invoke("doGetMyAddresses", new object[] {
                        sessionid});
            return ((AddressInfoStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyAddressesAsync(string sessionid) {
            this.doGetMyAddressesAsync(sessionid, null);
        }
        
        /// CodeRemarks
        public void doGetMyAddressesAsync(string sessionid, object userState) {
            if ((this.doGetMyAddressesOperationCompleted == null)) {
                this.doGetMyAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyAddressesOperationCompleted);
            }
            this.InvokeAsync("doGetMyAddresses", new object[] {
                        sessionid}, this.doGetMyAddressesOperationCompleted, userState);
        }
        
        private void OndoGetMyAddressesOperationCompleted(object arg) {
            if ((this.doGetMyAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyAddressesCompleted(this, new doGetMyAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmybiditems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("bid-items-counter")]
        public int doGetMyBidItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("search-value")] string searchvalue, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("bid-items-list")] out BidItemStruct[] biditemslist) {
            object[] results = this.Invoke("doGetMyBidItems", new object[] {
                        sessionid,
                        sortoptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            biditemslist = ((BidItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyBidItemsAsync(string sessionid, SortOptionsStruct sortoptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMyBidItemsAsync(sessionid, sortoptions, searchvalue, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMyBidItemsAsync(string sessionid, SortOptionsStruct sortoptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMyBidItemsOperationCompleted == null)) {
                this.doGetMyBidItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyBidItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMyBidItems", new object[] {
                        sessionid,
                        sortoptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMyBidItemsOperationCompleted, userState);
        }
        
        private void OndoGetMyBidItemsOperationCompleted(object arg) {
            if ((this.doGetMyBidItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyBidItemsCompleted(this, new doGetMyBidItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmycurrentshipmentpricetype", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipment-price-type-id")]
        public int doGetMyCurrentShipmentPriceType([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid) {
            object[] results = this.Invoke("doGetMyCurrentShipmentPriceType", new object[] {
                        sessionid});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyCurrentShipmentPriceTypeAsync(string sessionid) {
            this.doGetMyCurrentShipmentPriceTypeAsync(sessionid, null);
        }
        
        /// CodeRemarks
        public void doGetMyCurrentShipmentPriceTypeAsync(string sessionid, object userState) {
            if ((this.doGetMyCurrentShipmentPriceTypeOperationCompleted == null)) {
                this.doGetMyCurrentShipmentPriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyCurrentShipmentPriceTypeOperationCompleted);
            }
            this.InvokeAsync("doGetMyCurrentShipmentPriceType", new object[] {
                        sessionid}, this.doGetMyCurrentShipmentPriceTypeOperationCompleted, userState);
        }
        
        private void OndoGetMyCurrentShipmentPriceTypeOperationCompleted(object arg) {
            if ((this.doGetMyCurrentShipmentPriceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyCurrentShipmentPriceTypeCompleted(this, new doGetMyCurrentShipmentPriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmydata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("user-data")]
        public UserDataStruct doGetMyData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("invoice-data")] out InvoiceDataStruct invoicedata, [System.Xml.Serialization.SoapElementAttribute("company-extra-data")] out CompanyExtraDataStruct companyextradata, [System.Xml.Serialization.SoapElementAttribute("company-second-address")] out CompanySecondAddressStruct companysecondaddress, [System.Xml.Serialization.SoapElementAttribute("pharmacy-data")] out PharmacyDataStruct pharmacydata, [System.Xml.Serialization.SoapElementAttribute("alcohol-data")] out AlcoholDataStruct alcoholdata, [System.Xml.Serialization.SoapElementAttribute("related-persons")] out RelatedPersonsStruct relatedpersons) {
            object[] results = this.Invoke("doGetMyData", new object[] {
                        sessionhandle});
            invoicedata = ((InvoiceDataStruct)(results[1]));
            companyextradata = ((CompanyExtraDataStruct)(results[2]));
            companysecondaddress = ((CompanySecondAddressStruct)(results[3]));
            pharmacydata = ((PharmacyDataStruct)(results[4]));
            alcoholdata = ((AlcoholDataStruct)(results[5]));
            relatedpersons = ((RelatedPersonsStruct)(results[6]));
            return ((UserDataStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyDataAsync(string sessionhandle) {
            this.doGetMyDataAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetMyDataAsync(string sessionhandle, object userState) {
            if ((this.doGetMyDataOperationCompleted == null)) {
                this.doGetMyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyDataOperationCompleted);
            }
            this.InvokeAsync("doGetMyData", new object[] {
                        sessionhandle}, this.doGetMyDataOperationCompleted, userState);
        }
        
        private void OndoGetMyDataOperationCompleted(object arg) {
            if ((this.doGetMyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyDataCompleted(this, new doGetMyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmyfutureitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("future-items-counter")]
        public int doGetMyFutureItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("filter-options")] FutureFilterOptionsStruct filteroptions, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("future-items-list")] out FutureItemStruct[] futureitemslist) {
            object[] results = this.Invoke("doGetMyFutureItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            futureitemslist = ((FutureItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyFutureItemsAsync(string sessionid, SortOptionsStruct sortoptions, FutureFilterOptionsStruct filteroptions, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMyFutureItemsAsync(sessionid, sortoptions, filteroptions, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMyFutureItemsAsync(string sessionid, SortOptionsStruct sortoptions, FutureFilterOptionsStruct filteroptions, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMyFutureItemsOperationCompleted == null)) {
                this.doGetMyFutureItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyFutureItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMyFutureItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMyFutureItemsOperationCompleted, userState);
        }
        
        private void OndoGetMyFutureItemsOperationCompleted(object arg) {
            if ((this.doGetMyFutureItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyFutureItemsCompleted(this, new doGetMyFutureItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmyincomingpayments", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-income")]
        public UserIncomingPaymentStruct[] doGetMyIncomingPayments([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("buyer-id")] int buyerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("trans-recv-date-from")] long transrecvdatefrom, [System.Xml.Serialization.SoapElementAttribute("trans-recv-date-to")] long transrecvdateto, [System.Xml.Serialization.SoapElementAttribute("trans-page-limit")] int transpagelimit, [System.Xml.Serialization.SoapElementAttribute("trans-offset")] int transoffset, [System.Xml.Serialization.SoapElementAttribute("stricted-search")] int strictedsearch) {
            object[] results = this.Invoke("doGetMyIncomingPayments", new object[] {
                        sessionhandle,
                        buyerid,
                        itemid,
                        transrecvdatefrom,
                        transrecvdateto,
                        transpagelimit,
                        transoffset,
                        strictedsearch});
            return ((UserIncomingPaymentStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyIncomingPaymentsAsync(string sessionhandle, int buyerid, long itemid, long transrecvdatefrom, long transrecvdateto, int transpagelimit, int transoffset, int strictedsearch) {
            this.doGetMyIncomingPaymentsAsync(sessionhandle, buyerid, itemid, transrecvdatefrom, transrecvdateto, transpagelimit, transoffset, strictedsearch, null);
        }
        
        /// CodeRemarks
        public void doGetMyIncomingPaymentsAsync(string sessionhandle, int buyerid, long itemid, long transrecvdatefrom, long transrecvdateto, int transpagelimit, int transoffset, int strictedsearch, object userState) {
            if ((this.doGetMyIncomingPaymentsOperationCompleted == null)) {
                this.doGetMyIncomingPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyIncomingPaymentsOperationCompleted);
            }
            this.InvokeAsync("doGetMyIncomingPayments", new object[] {
                        sessionhandle,
                        buyerid,
                        itemid,
                        transrecvdatefrom,
                        transrecvdateto,
                        transpagelimit,
                        transoffset,
                        strictedsearch}, this.doGetMyIncomingPaymentsOperationCompleted, userState);
        }
        
        private void OndoGetMyIncomingPaymentsOperationCompleted(object arg) {
            if ((this.doGetMyIncomingPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyIncomingPaymentsCompleted(this, new doGetMyIncomingPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmyincomingpaymentsrefunds", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-income-refunds")]
        public UserIncomingPaymentRefundsStruct[] doGetMyIncomingPaymentsRefunds([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("buyer-id")] int buyerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, int limit, int offset) {
            object[] results = this.Invoke("doGetMyIncomingPaymentsRefunds", new object[] {
                        sessionhandle,
                        buyerid,
                        itemid,
                        limit,
                        offset});
            return ((UserIncomingPaymentRefundsStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyIncomingPaymentsRefundsAsync(string sessionhandle, int buyerid, long itemid, int limit, int offset) {
            this.doGetMyIncomingPaymentsRefundsAsync(sessionhandle, buyerid, itemid, limit, offset, null);
        }
        
        /// CodeRemarks
        public void doGetMyIncomingPaymentsRefundsAsync(string sessionhandle, int buyerid, long itemid, int limit, int offset, object userState) {
            if ((this.doGetMyIncomingPaymentsRefundsOperationCompleted == null)) {
                this.doGetMyIncomingPaymentsRefundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyIncomingPaymentsRefundsOperationCompleted);
            }
            this.InvokeAsync("doGetMyIncomingPaymentsRefunds", new object[] {
                        sessionhandle,
                        buyerid,
                        itemid,
                        limit,
                        offset}, this.doGetMyIncomingPaymentsRefundsOperationCompleted, userState);
        }
        
        private void OndoGetMyIncomingPaymentsRefundsOperationCompleted(object arg) {
            if ((this.doGetMyIncomingPaymentsRefundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyIncomingPaymentsRefundsCompleted(this, new doGetMyIncomingPaymentsRefundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmynotsolditems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("not-sold-items-counter")]
        public int doGetMyNotSoldItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("filter-options")] NotSoldFilterOptionsStruct filteroptions, [System.Xml.Serialization.SoapElementAttribute("search-value")] string searchvalue, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("not-sold-items-list")] out NotSoldItemStruct[] notsolditemslist) {
            object[] results = this.Invoke("doGetMyNotSoldItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            notsolditemslist = ((NotSoldItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyNotSoldItemsAsync(string sessionid, SortOptionsStruct sortoptions, NotSoldFilterOptionsStruct filteroptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMyNotSoldItemsAsync(sessionid, sortoptions, filteroptions, searchvalue, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMyNotSoldItemsAsync(string sessionid, SortOptionsStruct sortoptions, NotSoldFilterOptionsStruct filteroptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMyNotSoldItemsOperationCompleted == null)) {
                this.doGetMyNotSoldItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyNotSoldItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMyNotSoldItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMyNotSoldItemsOperationCompleted, userState);
        }
        
        private void OndoGetMyNotSoldItemsOperationCompleted(object arg) {
            if ((this.doGetMyNotSoldItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyNotSoldItemsCompleted(this, new doGetMyNotSoldItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmynotwonitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("not-won-items-counter")]
        public int doGetMyNotWonItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("search-value")] string searchvalue, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("not-won-items-list")] out NotWonItemStruct[] notwonitemslist) {
            object[] results = this.Invoke("doGetMyNotWonItems", new object[] {
                        sessionid,
                        sortoptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            notwonitemslist = ((NotWonItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyNotWonItemsAsync(string sessionid, SortOptionsStruct sortoptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMyNotWonItemsAsync(sessionid, sortoptions, searchvalue, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMyNotWonItemsAsync(string sessionid, SortOptionsStruct sortoptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMyNotWonItemsOperationCompleted == null)) {
                this.doGetMyNotWonItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyNotWonItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMyNotWonItems", new object[] {
                        sessionid,
                        sortoptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMyNotWonItemsOperationCompleted, userState);
        }
        
        private void OndoGetMyNotWonItemsOperationCompleted(object arg) {
            if ((this.doGetMyNotWonItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyNotWonItemsCompleted(this, new doGetMyNotWonItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmypayments", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-payment")]
        public UserPaymentStruct[] doGetMyPayments([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("seller-id")] int sellerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("payment-time-from")] long paymenttimefrom, [System.Xml.Serialization.SoapElementAttribute("payment-time-to")] long paymenttimeto, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("stricted-search")] int strictedsearch) {
            object[] results = this.Invoke("doGetMyPayments", new object[] {
                        sessionid,
                        sellerid,
                        itemid,
                        paymenttimefrom,
                        paymenttimeto,
                        pagesize,
                        pagenumber,
                        strictedsearch});
            return ((UserPaymentStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyPaymentsAsync(string sessionid, int sellerid, long itemid, long paymenttimefrom, long paymenttimeto, int pagesize, int pagenumber, int strictedsearch) {
            this.doGetMyPaymentsAsync(sessionid, sellerid, itemid, paymenttimefrom, paymenttimeto, pagesize, pagenumber, strictedsearch, null);
        }
        
        /// CodeRemarks
        public void doGetMyPaymentsAsync(string sessionid, int sellerid, long itemid, long paymenttimefrom, long paymenttimeto, int pagesize, int pagenumber, int strictedsearch, object userState) {
            if ((this.doGetMyPaymentsOperationCompleted == null)) {
                this.doGetMyPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPaymentsOperationCompleted);
            }
            this.InvokeAsync("doGetMyPayments", new object[] {
                        sessionid,
                        sellerid,
                        itemid,
                        paymenttimefrom,
                        paymenttimeto,
                        pagesize,
                        pagenumber,
                        strictedsearch}, this.doGetMyPaymentsOperationCompleted, userState);
        }
        
        private void OndoGetMyPaymentsOperationCompleted(object arg) {
            if ((this.doGetMyPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyPaymentsCompleted(this, new doGetMyPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmypaymentsinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("payments-info")]
        public PaymentsInfoStruct doGetMyPaymentsInfo([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid) {
            object[] results = this.Invoke("doGetMyPaymentsInfo", new object[] {
                        sessionid});
            return ((PaymentsInfoStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyPaymentsInfoAsync(string sessionid) {
            this.doGetMyPaymentsInfoAsync(sessionid, null);
        }
        
        /// CodeRemarks
        public void doGetMyPaymentsInfoAsync(string sessionid, object userState) {
            if ((this.doGetMyPaymentsInfoOperationCompleted == null)) {
                this.doGetMyPaymentsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPaymentsInfoOperationCompleted);
            }
            this.InvokeAsync("doGetMyPaymentsInfo", new object[] {
                        sessionid}, this.doGetMyPaymentsInfoOperationCompleted, userState);
        }
        
        private void OndoGetMyPaymentsInfoOperationCompleted(object arg) {
            if ((this.doGetMyPaymentsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyPaymentsInfoCompleted(this, new doGetMyPaymentsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmypaymentsrefunds", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-payment-refunds")]
        public UserPaymentRefundsStruct[] doGetMyPaymentsRefunds([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("seller-id")] int sellerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, int limit, int offset) {
            object[] results = this.Invoke("doGetMyPaymentsRefunds", new object[] {
                        sessionhandle,
                        sellerid,
                        itemid,
                        limit,
                        offset});
            return ((UserPaymentRefundsStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyPaymentsRefundsAsync(string sessionhandle, int sellerid, long itemid, int limit, int offset) {
            this.doGetMyPaymentsRefundsAsync(sessionhandle, sellerid, itemid, limit, offset, null);
        }
        
        /// CodeRemarks
        public void doGetMyPaymentsRefundsAsync(string sessionhandle, int sellerid, long itemid, int limit, int offset, object userState) {
            if ((this.doGetMyPaymentsRefundsOperationCompleted == null)) {
                this.doGetMyPaymentsRefundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPaymentsRefundsOperationCompleted);
            }
            this.InvokeAsync("doGetMyPaymentsRefunds", new object[] {
                        sessionhandle,
                        sellerid,
                        itemid,
                        limit,
                        offset}, this.doGetMyPaymentsRefundsOperationCompleted, userState);
        }
        
        private void OndoGetMyPaymentsRefundsOperationCompleted(object arg) {
            if ((this.doGetMyPaymentsRefundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyPaymentsRefundsCompleted(this, new doGetMyPaymentsRefundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmypayouts", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-payout")]
        public UserPayoutStruct[] doGetMyPayouts([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("trans-create-date-from")] long transcreatedatefrom, [System.Xml.Serialization.SoapElementAttribute("trans-create-date-to")] long transcreatedateto, [System.Xml.Serialization.SoapElementAttribute("trans-page-limit")] int transpagelimit, [System.Xml.Serialization.SoapElementAttribute("trans-offset")] int transoffset) {
            object[] results = this.Invoke("doGetMyPayouts", new object[] {
                        sessionhandle,
                        transcreatedatefrom,
                        transcreatedateto,
                        transpagelimit,
                        transoffset});
            return ((UserPayoutStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyPayoutsAsync(string sessionhandle, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset) {
            this.doGetMyPayoutsAsync(sessionhandle, transcreatedatefrom, transcreatedateto, transpagelimit, transoffset, null);
        }
        
        /// CodeRemarks
        public void doGetMyPayoutsAsync(string sessionhandle, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset, object userState) {
            if ((this.doGetMyPayoutsOperationCompleted == null)) {
                this.doGetMyPayoutsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPayoutsOperationCompleted);
            }
            this.InvokeAsync("doGetMyPayouts", new object[] {
                        sessionhandle,
                        transcreatedatefrom,
                        transcreatedateto,
                        transpagelimit,
                        transoffset}, this.doGetMyPayoutsOperationCompleted, userState);
        }
        
        private void OndoGetMyPayoutsOperationCompleted(object arg) {
            if ((this.doGetMyPayoutsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyPayoutsCompleted(this, new doGetMyPayoutsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmypayoutsdetails", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("payments-count")]
        public int doGetMyPayoutsDetails([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("payout-id")] int payoutid, int limit, int offset, out PayoutPaymentsStruct[] payments, [System.Xml.Serialization.SoapElementAttribute("refunds-from-count")] out int refundsfromcount, [System.Xml.Serialization.SoapElementAttribute("refund-from")] out PayoutRefundFromStruct[] refundfrom, [System.Xml.Serialization.SoapElementAttribute("refunds-to-count")] out int refundstocount, [System.Xml.Serialization.SoapElementAttribute("refund-to")] out PayoutRefundToStruct[] refundto) {
            object[] results = this.Invoke("doGetMyPayoutsDetails", new object[] {
                        sessionid,
                        payoutid,
                        limit,
                        offset});
            payments = ((PayoutPaymentsStruct[])(results[1]));
            refundsfromcount = ((int)(results[2]));
            refundfrom = ((PayoutRefundFromStruct[])(results[3]));
            refundstocount = ((int)(results[4]));
            refundto = ((PayoutRefundToStruct[])(results[5]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyPayoutsDetailsAsync(string sessionid, int payoutid, int limit, int offset) {
            this.doGetMyPayoutsDetailsAsync(sessionid, payoutid, limit, offset, null);
        }
        
        /// CodeRemarks
        public void doGetMyPayoutsDetailsAsync(string sessionid, int payoutid, int limit, int offset, object userState) {
            if ((this.doGetMyPayoutsDetailsOperationCompleted == null)) {
                this.doGetMyPayoutsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPayoutsDetailsOperationCompleted);
            }
            this.InvokeAsync("doGetMyPayoutsDetails", new object[] {
                        sessionid,
                        payoutid,
                        limit,
                        offset}, this.doGetMyPayoutsDetailsOperationCompleted, userState);
        }
        
        private void OndoGetMyPayoutsDetailsOperationCompleted(object arg) {
            if ((this.doGetMyPayoutsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyPayoutsDetailsCompleted(this, new doGetMyPayoutsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmysellitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-items-counter")]
        public int doGetMySellItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("filter-options")] SellFilterOptionsStruct filteroptions, [System.Xml.Serialization.SoapElementAttribute("search-value")] string searchvalue, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("sell-items-list")] out SellItemStruct[] sellitemslist) {
            object[] results = this.Invoke("doGetMySellItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            sellitemslist = ((SellItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMySellItemsAsync(string sessionid, SortOptionsStruct sortoptions, SellFilterOptionsStruct filteroptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMySellItemsAsync(sessionid, sortoptions, filteroptions, searchvalue, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMySellItemsAsync(string sessionid, SortOptionsStruct sortoptions, SellFilterOptionsStruct filteroptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMySellItemsOperationCompleted == null)) {
                this.doGetMySellItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMySellItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMySellItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMySellItemsOperationCompleted, userState);
        }
        
        private void OndoGetMySellItemsOperationCompleted(object arg) {
            if ((this.doGetMySellItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMySellItemsCompleted(this, new doGetMySellItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmysellrating", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-rating-total-count")]
        public int doGetMySellRating([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-rating-average")] out SellRatingAverageStruct[] sellratingaverage, [System.Xml.Serialization.SoapElementAttribute("sell-rating-details")] out SellRatingDetailStruct[] sellratingdetails, [System.Xml.Serialization.SoapElementAttribute("sell-rating-stats-per-month")] out SellRatingAveragePerMonthStruct[] sellratingstatspermonth) {
            object[] results = this.Invoke("doGetMySellRating", new object[] {
                        sessionhandle});
            sellratingaverage = ((SellRatingAverageStruct[])(results[1]));
            sellratingdetails = ((SellRatingDetailStruct[])(results[2]));
            sellratingstatspermonth = ((SellRatingAveragePerMonthStruct[])(results[3]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMySellRatingAsync(string sessionhandle) {
            this.doGetMySellRatingAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetMySellRatingAsync(string sessionhandle, object userState) {
            if ((this.doGetMySellRatingOperationCompleted == null)) {
                this.doGetMySellRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMySellRatingOperationCompleted);
            }
            this.InvokeAsync("doGetMySellRating", new object[] {
                        sessionhandle}, this.doGetMySellRatingOperationCompleted, userState);
        }
        
        private void OndoGetMySellRatingOperationCompleted(object arg) {
            if ((this.doGetMySellRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMySellRatingCompleted(this, new doGetMySellRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmysolditems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sold-items-counter")]
        public int doGetMySoldItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("filter-options")] SoldFilterOptionsStruct filteroptions, [System.Xml.Serialization.SoapElementAttribute("search-value")] string searchvalue, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("sold-items-list")] out SoldItemStruct[] solditemslist) {
            object[] results = this.Invoke("doGetMySoldItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            solditemslist = ((SoldItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMySoldItemsAsync(string sessionid, SortOptionsStruct sortoptions, SoldFilterOptionsStruct filteroptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMySoldItemsAsync(sessionid, sortoptions, filteroptions, searchvalue, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMySoldItemsAsync(string sessionid, SortOptionsStruct sortoptions, SoldFilterOptionsStruct filteroptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMySoldItemsOperationCompleted == null)) {
                this.doGetMySoldItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMySoldItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMySoldItems", new object[] {
                        sessionid,
                        sortoptions,
                        filteroptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMySoldItemsOperationCompleted, userState);
        }
        
        private void OndoGetMySoldItemsOperationCompleted(object arg) {
            if ((this.doGetMySoldItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMySoldItemsCompleted(this, new doGetMySoldItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetmywonitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("won-items-counter")]
        public int doGetMyWonItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("sort-options")] SortOptionsStruct sortoptions, [System.Xml.Serialization.SoapElementAttribute("search-value")] string searchvalue, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids, [System.Xml.Serialization.SoapElementAttribute("page-size")] int pagesize, [System.Xml.Serialization.SoapElementAttribute("page-number")] int pagenumber, [System.Xml.Serialization.SoapElementAttribute("won-items-list")] out WonItemStruct[] wonitemslist) {
            object[] results = this.Invoke("doGetMyWonItems", new object[] {
                        sessionid,
                        sortoptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber});
            wonitemslist = ((WonItemStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetMyWonItemsAsync(string sessionid, SortOptionsStruct sortoptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber) {
            this.doGetMyWonItemsAsync(sessionid, sortoptions, searchvalue, categoryid, itemids, pagesize, pagenumber, null);
        }
        
        /// CodeRemarks
        public void doGetMyWonItemsAsync(string sessionid, SortOptionsStruct sortoptions, string searchvalue, int categoryid, long[] itemids, int pagesize, int pagenumber, object userState) {
            if ((this.doGetMyWonItemsOperationCompleted == null)) {
                this.doGetMyWonItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyWonItemsOperationCompleted);
            }
            this.InvokeAsync("doGetMyWonItems", new object[] {
                        sessionid,
                        sortoptions,
                        searchvalue,
                        categoryid,
                        itemids,
                        pagesize,
                        pagenumber}, this.doGetMyWonItemsOperationCompleted, userState);
        }
        
        private void OndoGetMyWonItemsOperationCompleted(object arg) {
            if ((this.doGetMyWonItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetMyWonItemsCompleted(this, new doGetMyWonItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetpaymentdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("payment-list")]
        public BillingDataType[] doGetPaymentData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetPaymentData", new object[] {
                        countryid,
                        webapikey});
            return ((BillingDataType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetPaymentDataAsync(int countryid, string webapikey) {
            this.doGetPaymentDataAsync(countryid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetPaymentDataAsync(int countryid, string webapikey, object userState) {
            if ((this.doGetPaymentDataOperationCompleted == null)) {
                this.doGetPaymentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPaymentDataOperationCompleted);
            }
            this.InvokeAsync("doGetPaymentData", new object[] {
                        countryid,
                        webapikey}, this.doGetPaymentDataOperationCompleted, userState);
        }
        
        private void OndoGetPaymentDataOperationCompleted(object arg) {
            if ((this.doGetPaymentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetPaymentDataCompleted(this, new doGetPaymentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetpaymentmethods", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("payment-methods")]
        public PaymentMethodStruct[] doGetPaymentMethods([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids) {
            object[] results = this.Invoke("doGetPaymentMethods", new object[] {
                        sessionid,
                        itemids});
            return ((PaymentMethodStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetPaymentMethodsAsync(string sessionid, long[] itemids) {
            this.doGetPaymentMethodsAsync(sessionid, itemids, null);
        }
        
        /// CodeRemarks
        public void doGetPaymentMethodsAsync(string sessionid, long[] itemids, object userState) {
            if ((this.doGetPaymentMethodsOperationCompleted == null)) {
                this.doGetPaymentMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPaymentMethodsOperationCompleted);
            }
            this.InvokeAsync("doGetPaymentMethods", new object[] {
                        sessionid,
                        itemids}, this.doGetPaymentMethodsOperationCompleted, userState);
        }
        
        private void OndoGetPaymentMethodsOperationCompleted(object arg) {
            if ((this.doGetPaymentMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetPaymentMethodsCompleted(this, new doGetPaymentMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetpostbuydata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("items-post-buy-data")]
        public ItemPostBuyDataStruct[] doGetPostBuyData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-array")] long[] itemsarray, [System.Xml.Serialization.SoapElementAttribute("buyer-filter-array")] long[] buyerfilterarray) {
            object[] results = this.Invoke("doGetPostBuyData", new object[] {
                        sessionhandle,
                        itemsarray,
                        buyerfilterarray});
            return ((ItemPostBuyDataStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetPostBuyDataAsync(string sessionhandle, long[] itemsarray, long[] buyerfilterarray) {
            this.doGetPostBuyDataAsync(sessionhandle, itemsarray, buyerfilterarray, null);
        }
        
        /// CodeRemarks
        public void doGetPostBuyDataAsync(string sessionhandle, long[] itemsarray, long[] buyerfilterarray, object userState) {
            if ((this.doGetPostBuyDataOperationCompleted == null)) {
                this.doGetPostBuyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyDataOperationCompleted);
            }
            this.InvokeAsync("doGetPostBuyData", new object[] {
                        sessionhandle,
                        itemsarray,
                        buyerfilterarray}, this.doGetPostBuyDataOperationCompleted, userState);
        }
        
        private void OndoGetPostBuyDataOperationCompleted(object arg) {
            if ((this.doGetPostBuyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetPostBuyDataCompleted(this, new doGetPostBuyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetpostbuyformsdataforbuyers", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("post-buy-form-data-for-buyers")]
        public PostBuyFormForBuyersDataStruct[] doGetPostBuyFormsDataForBuyers([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("transactions-ids-array")] long[] transactionsidsarray) {
            object[] results = this.Invoke("doGetPostBuyFormsDataForBuyers", new object[] {
                        sessionid,
                        transactionsidsarray});
            return ((PostBuyFormForBuyersDataStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetPostBuyFormsDataForBuyersAsync(string sessionid, long[] transactionsidsarray) {
            this.doGetPostBuyFormsDataForBuyersAsync(sessionid, transactionsidsarray, null);
        }
        
        /// CodeRemarks
        public void doGetPostBuyFormsDataForBuyersAsync(string sessionid, long[] transactionsidsarray, object userState) {
            if ((this.doGetPostBuyFormsDataForBuyersOperationCompleted == null)) {
                this.doGetPostBuyFormsDataForBuyersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyFormsDataForBuyersOperationCompleted);
            }
            this.InvokeAsync("doGetPostBuyFormsDataForBuyers", new object[] {
                        sessionid,
                        transactionsidsarray}, this.doGetPostBuyFormsDataForBuyersOperationCompleted, userState);
        }
        
        private void OndoGetPostBuyFormsDataForBuyersOperationCompleted(object arg) {
            if ((this.doGetPostBuyFormsDataForBuyersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetPostBuyFormsDataForBuyersCompleted(this, new doGetPostBuyFormsDataForBuyersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetpostbuyformsdataforsellers", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("post-buy-form-data")]
        public PostBuyFormDataStruct[] doGetPostBuyFormsDataForSellers([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("transactions-ids-array")] long[] transactionsidsarray) {
            object[] results = this.Invoke("doGetPostBuyFormsDataForSellers", new object[] {
                        sessionid,
                        transactionsidsarray});
            return ((PostBuyFormDataStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetPostBuyFormsDataForSellersAsync(string sessionid, long[] transactionsidsarray) {
            this.doGetPostBuyFormsDataForSellersAsync(sessionid, transactionsidsarray, null);
        }
        
        /// CodeRemarks
        public void doGetPostBuyFormsDataForSellersAsync(string sessionid, long[] transactionsidsarray, object userState) {
            if ((this.doGetPostBuyFormsDataForSellersOperationCompleted == null)) {
                this.doGetPostBuyFormsDataForSellersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyFormsDataForSellersOperationCompleted);
            }
            this.InvokeAsync("doGetPostBuyFormsDataForSellers", new object[] {
                        sessionid,
                        transactionsidsarray}, this.doGetPostBuyFormsDataForSellersOperationCompleted, userState);
        }
        
        private void OndoGetPostBuyFormsDataForSellersOperationCompleted(object arg) {
            if ((this.doGetPostBuyFormsDataForSellersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetPostBuyFormsDataForSellersCompleted(this, new doGetPostBuyFormsDataForSellersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetpostbuyiteminfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-post-buy-form-info")]
        public PostBuyItemInfoStruct[] doGetPostBuyItemInfo([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids) {
            object[] results = this.Invoke("doGetPostBuyItemInfo", new object[] {
                        sessionid,
                        itemids});
            return ((PostBuyItemInfoStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetPostBuyItemInfoAsync(string sessionid, long[] itemids) {
            this.doGetPostBuyItemInfoAsync(sessionid, itemids, null);
        }
        
        /// CodeRemarks
        public void doGetPostBuyItemInfoAsync(string sessionid, long[] itemids, object userState) {
            if ((this.doGetPostBuyItemInfoOperationCompleted == null)) {
                this.doGetPostBuyItemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyItemInfoOperationCompleted);
            }
            this.InvokeAsync("doGetPostBuyItemInfo", new object[] {
                        sessionid,
                        itemids}, this.doGetPostBuyItemInfoOperationCompleted, userState);
        }
        
        private void OndoGetPostBuyItemInfoOperationCompleted(object arg) {
            if ((this.doGetPostBuyItemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetPostBuyItemInfoCompleted(this, new doGetPostBuyItemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetrefundsdeals", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("deals-count")]
        public int doGetRefundsDeals([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("filter-options")] FilterOptionsType[] filteroptions, [System.Xml.Serialization.SoapElementAttribute("sort-order")] string sortorder, [System.Xml.Serialization.SoapElementAttribute("result-size")] int resultsize, [System.Xml.Serialization.SoapElementAttribute("result-offset")] int resultoffset, [System.Xml.Serialization.SoapElementAttribute("deals-list")] out RefundsDealsListType[] dealslist, [System.Xml.Serialization.SoapElementAttribute("filters-list")] out FiltersListType[] filterslist) {
            object[] results = this.Invoke("doGetRefundsDeals", new object[] {
                        sessionid,
                        filteroptions,
                        sortorder,
                        resultsize,
                        resultoffset});
            dealslist = ((RefundsDealsListType[])(results[1]));
            filterslist = ((FiltersListType[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetRefundsDealsAsync(string sessionid, FilterOptionsType[] filteroptions, string sortorder, int resultsize, int resultoffset) {
            this.doGetRefundsDealsAsync(sessionid, filteroptions, sortorder, resultsize, resultoffset, null);
        }
        
        /// CodeRemarks
        public void doGetRefundsDealsAsync(string sessionid, FilterOptionsType[] filteroptions, string sortorder, int resultsize, int resultoffset, object userState) {
            if ((this.doGetRefundsDealsOperationCompleted == null)) {
                this.doGetRefundsDealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetRefundsDealsOperationCompleted);
            }
            this.InvokeAsync("doGetRefundsDeals", new object[] {
                        sessionid,
                        filteroptions,
                        sortorder,
                        resultsize,
                        resultoffset}, this.doGetRefundsDealsOperationCompleted, userState);
        }
        
        private void OndoGetRefundsDealsOperationCompleted(object arg) {
            if ((this.doGetRefundsDealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetRefundsDealsCompleted(this, new doGetRefundsDealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetrefundslist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("refunds-count")]
        public int doGetRefundsList([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("filter-options")] FilterOptionsType[] filteroptions, [System.Xml.Serialization.SoapElementAttribute("result-size")] int resultsize, [System.Xml.Serialization.SoapElementAttribute("result-offset")] int resultoffset, [System.Xml.Serialization.SoapElementAttribute("refunds-list")] out RefundListType[] refundslist, [System.Xml.Serialization.SoapElementAttribute("filters-list")] out FiltersListType[] filterslist) {
            object[] results = this.Invoke("doGetRefundsList", new object[] {
                        sessionid,
                        filteroptions,
                        resultsize,
                        resultoffset});
            refundslist = ((RefundListType[])(results[1]));
            filterslist = ((FiltersListType[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetRefundsListAsync(string sessionid, FilterOptionsType[] filteroptions, int resultsize, int resultoffset) {
            this.doGetRefundsListAsync(sessionid, filteroptions, resultsize, resultoffset, null);
        }
        
        /// CodeRemarks
        public void doGetRefundsListAsync(string sessionid, FilterOptionsType[] filteroptions, int resultsize, int resultoffset, object userState) {
            if ((this.doGetRefundsListOperationCompleted == null)) {
                this.doGetRefundsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetRefundsListOperationCompleted);
            }
            this.InvokeAsync("doGetRefundsList", new object[] {
                        sessionid,
                        filteroptions,
                        resultsize,
                        resultoffset}, this.doGetRefundsListOperationCompleted, userState);
        }
        
        private void OndoGetRefundsListOperationCompleted(object arg) {
            if ((this.doGetRefundsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetRefundsListCompleted(this, new doGetRefundsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetrelateditems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("related-items")]
        public RelatedItemsStruct doGetRelatedItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids) {
            object[] results = this.Invoke("doGetRelatedItems", new object[] {
                        sessionid,
                        itemids});
            return ((RelatedItemsStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetRelatedItemsAsync(string sessionid, long[] itemids) {
            this.doGetRelatedItemsAsync(sessionid, itemids, null);
        }
        
        /// CodeRemarks
        public void doGetRelatedItemsAsync(string sessionid, long[] itemids, object userState) {
            if ((this.doGetRelatedItemsOperationCompleted == null)) {
                this.doGetRelatedItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetRelatedItemsOperationCompleted);
            }
            this.InvokeAsync("doGetRelatedItems", new object[] {
                        sessionid,
                        itemids}, this.doGetRelatedItemsOperationCompleted, userState);
        }
        
        private void OndoGetRelatedItemsOperationCompleted(object arg) {
            if ((this.doGetRelatedItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetRelatedItemsCompleted(this, new doGetRelatedItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellformattribs", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
        public SellFormType[] doGetSellFormAttribs([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("cat-id")] int catid, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
            object[] results = this.Invoke("doGetSellFormAttribs", new object[] {
                        countryid,
                        webapikey,
                        localversion,
                        catid});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            return ((SellFormType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellFormAttribsAsync(int countryid, string webapikey, long localversion, int catid) {
            this.doGetSellFormAttribsAsync(countryid, webapikey, localversion, catid, null);
        }
        
        /// CodeRemarks
        public void doGetSellFormAttribsAsync(int countryid, string webapikey, long localversion, int catid, object userState) {
            if ((this.doGetSellFormAttribsOperationCompleted == null)) {
                this.doGetSellFormAttribsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormAttribsOperationCompleted);
            }
            this.InvokeAsync("doGetSellFormAttribs", new object[] {
                        countryid,
                        webapikey,
                        localversion,
                        catid}, this.doGetSellFormAttribsOperationCompleted, userState);
        }
        
        private void OndoGetSellFormAttribsOperationCompleted(object arg) {
            if ((this.doGetSellFormAttribsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellFormAttribsCompleted(this, new doGetSellFormAttribsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellformfields", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
        public SellFormType[] doGetSellFormFields([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
            object[] results = this.Invoke("doGetSellFormFields", new object[] {
                        countrycode,
                        localversion,
                        webapikey});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            return ((SellFormType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsAsync(int countrycode, long localversion, string webapikey) {
            this.doGetSellFormFieldsAsync(countrycode, localversion, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsAsync(int countrycode, long localversion, string webapikey, object userState) {
            if ((this.doGetSellFormFieldsOperationCompleted == null)) {
                this.doGetSellFormFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsOperationCompleted);
            }
            this.InvokeAsync("doGetSellFormFields", new object[] {
                        countrycode,
                        localversion,
                        webapikey}, this.doGetSellFormFieldsOperationCompleted, userState);
        }
        
        private void OndoGetSellFormFieldsOperationCompleted(object arg) {
            if ((this.doGetSellFormFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellFormFieldsCompleted(this, new doGetSellFormFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellformfieldsext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
        public SellFormType[] doGetSellFormFieldsExt([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
            object[] results = this.Invoke("doGetSellFormFieldsExt", new object[] {
                        countrycode,
                        localversion,
                        webapikey});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            return ((SellFormType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsExtAsync(int countrycode, long localversion, string webapikey) {
            this.doGetSellFormFieldsExtAsync(countrycode, localversion, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsExtAsync(int countrycode, long localversion, string webapikey, object userState) {
            if ((this.doGetSellFormFieldsExtOperationCompleted == null)) {
                this.doGetSellFormFieldsExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsExtOperationCompleted);
            }
            this.InvokeAsync("doGetSellFormFieldsExt", new object[] {
                        countrycode,
                        localversion,
                        webapikey}, this.doGetSellFormFieldsExtOperationCompleted, userState);
        }
        
        private void OndoGetSellFormFieldsExtOperationCompleted(object arg) {
            if ((this.doGetSellFormFieldsExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellFormFieldsExtCompleted(this, new doGetSellFormFieldsExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellformfieldsextlimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
        public SellFormType[] doGetSellFormFieldsExtLimit([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr, [System.Xml.Serialization.SoapElementAttribute("form-fields-count")] out int formfieldscount) {
            object[] results = this.Invoke("doGetSellFormFieldsExtLimit", new object[] {
                        countrycode,
                        localversion,
                        webapikey,
                        offset,
                        packageelement});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            formfieldscount = ((int)(results[3]));
            return ((SellFormType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsExtLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement) {
            this.doGetSellFormFieldsExtLimitAsync(countrycode, localversion, webapikey, offset, packageelement, null);
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsExtLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement, object userState) {
            if ((this.doGetSellFormFieldsExtLimitOperationCompleted == null)) {
                this.doGetSellFormFieldsExtLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsExtLimitOperationCompleted);
            }
            this.InvokeAsync("doGetSellFormFieldsExtLimit", new object[] {
                        countrycode,
                        localversion,
                        webapikey,
                        offset,
                        packageelement}, this.doGetSellFormFieldsExtLimitOperationCompleted, userState);
        }
        
        private void OndoGetSellFormFieldsExtLimitOperationCompleted(object arg) {
            if ((this.doGetSellFormFieldsExtLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellFormFieldsExtLimitCompleted(this, new doGetSellFormFieldsExtLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellformfieldsforcategory", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields-for-category")]
        public SellFormFieldsForCategoryStruct doGetSellFormFieldsForCategory([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("category-id")] int categoryid) {
            object[] results = this.Invoke("doGetSellFormFieldsForCategory", new object[] {
                        webapikey,
                        countryid,
                        categoryid});
            return ((SellFormFieldsForCategoryStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsForCategoryAsync(string webapikey, int countryid, int categoryid) {
            this.doGetSellFormFieldsForCategoryAsync(webapikey, countryid, categoryid, null);
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsForCategoryAsync(string webapikey, int countryid, int categoryid, object userState) {
            if ((this.doGetSellFormFieldsForCategoryOperationCompleted == null)) {
                this.doGetSellFormFieldsForCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsForCategoryOperationCompleted);
            }
            this.InvokeAsync("doGetSellFormFieldsForCategory", new object[] {
                        webapikey,
                        countryid,
                        categoryid}, this.doGetSellFormFieldsForCategoryOperationCompleted, userState);
        }
        
        private void OndoGetSellFormFieldsForCategoryOperationCompleted(object arg) {
            if ((this.doGetSellFormFieldsForCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellFormFieldsForCategoryCompleted(this, new doGetSellFormFieldsForCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellformfieldslimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
        public SellFormType[] doGetSellFormFieldsLimit([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr, [System.Xml.Serialization.SoapElementAttribute("form-fields-count")] out int formfieldscount) {
            object[] results = this.Invoke("doGetSellFormFieldsLimit", new object[] {
                        countrycode,
                        localversion,
                        webapikey,
                        offset,
                        packageelement});
            verkey = ((long)(results[1]));
            verstr = ((string)(results[2]));
            formfieldscount = ((int)(results[3]));
            return ((SellFormType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement) {
            this.doGetSellFormFieldsLimitAsync(countrycode, localversion, webapikey, offset, packageelement, null);
        }
        
        /// CodeRemarks
        public void doGetSellFormFieldsLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement, object userState) {
            if ((this.doGetSellFormFieldsLimitOperationCompleted == null)) {
                this.doGetSellFormFieldsLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsLimitOperationCompleted);
            }
            this.InvokeAsync("doGetSellFormFieldsLimit", new object[] {
                        countrycode,
                        localversion,
                        webapikey,
                        offset,
                        packageelement}, this.doGetSellFormFieldsLimitOperationCompleted, userState);
        }
        
        private void OndoGetSellFormFieldsLimitOperationCompleted(object arg) {
            if ((this.doGetSellFormFieldsLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellFormFieldsLimitCompleted(this, new doGetSellFormFieldsLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsellratingreasons", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sell-rating-info")]
        public SellRatingInfoStruct[] doGetSellRatingReasons([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode) {
            object[] results = this.Invoke("doGetSellRatingReasons", new object[] {
                        webapikey,
                        countrycode});
            return ((SellRatingInfoStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSellRatingReasonsAsync(string webapikey, int countrycode) {
            this.doGetSellRatingReasonsAsync(webapikey, countrycode, null);
        }
        
        /// CodeRemarks
        public void doGetSellRatingReasonsAsync(string webapikey, int countrycode, object userState) {
            if ((this.doGetSellRatingReasonsOperationCompleted == null)) {
                this.doGetSellRatingReasonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellRatingReasonsOperationCompleted);
            }
            this.InvokeAsync("doGetSellRatingReasons", new object[] {
                        webapikey,
                        countrycode}, this.doGetSellRatingReasonsOperationCompleted, userState);
        }
        
        private void OndoGetSellRatingReasonsOperationCompleted(object arg) {
            if ((this.doGetSellRatingReasonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSellRatingReasonsCompleted(this, new doGetSellRatingReasonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsessionhandleforwidget", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("session-handle")]
        public string doGetSessionHandleForWidget([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
            object[] results = this.Invoke("doGetSessionHandleForWidget", new object[] {
                        webapikey,
                        countrycode});
            servertime = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSessionHandleForWidgetAsync(string webapikey, int countrycode) {
            this.doGetSessionHandleForWidgetAsync(webapikey, countrycode, null);
        }
        
        /// CodeRemarks
        public void doGetSessionHandleForWidgetAsync(string webapikey, int countrycode, object userState) {
            if ((this.doGetSessionHandleForWidgetOperationCompleted == null)) {
                this.doGetSessionHandleForWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSessionHandleForWidgetOperationCompleted);
            }
            this.InvokeAsync("doGetSessionHandleForWidget", new object[] {
                        webapikey,
                        countrycode}, this.doGetSessionHandleForWidgetOperationCompleted, userState);
        }
        
        private void OndoGetSessionHandleForWidgetOperationCompleted(object arg) {
            if ((this.doGetSessionHandleForWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSessionHandleForWidgetCompleted(this, new doGetSessionHandleForWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetshipmentdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipment-data-list")]
        public ShipmentDataStruct[] doGetShipmentData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] out long localversion) {
            object[] results = this.Invoke("doGetShipmentData", new object[] {
                        countryid,
                        webapikey});
            localversion = ((long)(results[1]));
            return ((ShipmentDataStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetShipmentDataAsync(int countryid, string webapikey) {
            this.doGetShipmentDataAsync(countryid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetShipmentDataAsync(int countryid, string webapikey, object userState) {
            if ((this.doGetShipmentDataOperationCompleted == null)) {
                this.doGetShipmentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShipmentDataOperationCompleted);
            }
            this.InvokeAsync("doGetShipmentData", new object[] {
                        countryid,
                        webapikey}, this.doGetShipmentDataOperationCompleted, userState);
        }
        
        private void OndoGetShipmentDataOperationCompleted(object arg) {
            if ((this.doGetShipmentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetShipmentDataCompleted(this, new doGetShipmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetshipmentdataforrelateditems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("related-items-shipment-data")]
        public RelatedItemsShipmentDataStruct doGetShipmentDataForRelatedItems([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-ids")] long[] itemids) {
            object[] results = this.Invoke("doGetShipmentDataForRelatedItems", new object[] {
                        sessionid,
                        itemids});
            return ((RelatedItemsShipmentDataStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetShipmentDataForRelatedItemsAsync(string sessionid, long[] itemids) {
            this.doGetShipmentDataForRelatedItemsAsync(sessionid, itemids, null);
        }
        
        /// CodeRemarks
        public void doGetShipmentDataForRelatedItemsAsync(string sessionid, long[] itemids, object userState) {
            if ((this.doGetShipmentDataForRelatedItemsOperationCompleted == null)) {
                this.doGetShipmentDataForRelatedItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShipmentDataForRelatedItemsOperationCompleted);
            }
            this.InvokeAsync("doGetShipmentDataForRelatedItems", new object[] {
                        sessionid,
                        itemids}, this.doGetShipmentDataForRelatedItemsOperationCompleted, userState);
        }
        
        private void OndoGetShipmentDataForRelatedItemsOperationCompleted(object arg) {
            if ((this.doGetShipmentDataForRelatedItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetShipmentDataForRelatedItemsCompleted(this, new doGetShipmentDataForRelatedItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetshipmentpricetypes", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipment-price-types")]
        public ShipmentPriceTypeStruct[] doGetShipmentPriceTypes([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetShipmentPriceTypes", new object[] {
                        countryid,
                        webapikey});
            return ((ShipmentPriceTypeStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetShipmentPriceTypesAsync(int countryid, string webapikey) {
            this.doGetShipmentPriceTypesAsync(countryid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetShipmentPriceTypesAsync(int countryid, string webapikey, object userState) {
            if ((this.doGetShipmentPriceTypesOperationCompleted == null)) {
                this.doGetShipmentPriceTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShipmentPriceTypesOperationCompleted);
            }
            this.InvokeAsync("doGetShipmentPriceTypes", new object[] {
                        countryid,
                        webapikey}, this.doGetShipmentPriceTypesOperationCompleted, userState);
        }
        
        private void OndoGetShipmentPriceTypesOperationCompleted(object arg) {
            if ((this.doGetShipmentPriceTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetShipmentPriceTypesCompleted(this, new doGetShipmentPriceTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetshopstags", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("shops-tags-count")]
        public int doGetShopsTags([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("shops-tags")] out ShopsTagTypeStruct[] shopstags) {
            object[] results = this.Invoke("doGetShopsTags", new object[] {
                        sessionid});
            shopstags = ((ShopsTagTypeStruct[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetShopsTagsAsync(string sessionid) {
            this.doGetShopsTagsAsync(sessionid, null);
        }
        
        /// CodeRemarks
        public void doGetShopsTagsAsync(string sessionid, object userState) {
            if ((this.doGetShopsTagsOperationCompleted == null)) {
                this.doGetShopsTagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShopsTagsOperationCompleted);
            }
            this.InvokeAsync("doGetShopsTags", new object[] {
                        sessionid}, this.doGetShopsTagsOperationCompleted, userState);
        }
        
        private void OndoGetShopsTagsOperationCompleted(object arg) {
            if ((this.doGetShopsTagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetShopsTagsCompleted(this, new doGetShopsTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsitejournal", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("site-journal-array")]
        public SiteJournal[] doGetSiteJournal([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("starting-point")] long startingpoint, [System.Xml.Serialization.SoapElementAttribute("info-type")] int infotype) {
            object[] results = this.Invoke("doGetSiteJournal", new object[] {
                        sessionhandle,
                        startingpoint,
                        infotype});
            return ((SiteJournal[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSiteJournalAsync(string sessionhandle, long startingpoint, int infotype) {
            this.doGetSiteJournalAsync(sessionhandle, startingpoint, infotype, null);
        }
        
        /// CodeRemarks
        public void doGetSiteJournalAsync(string sessionhandle, long startingpoint, int infotype, object userState) {
            if ((this.doGetSiteJournalOperationCompleted == null)) {
                this.doGetSiteJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalOperationCompleted);
            }
            this.InvokeAsync("doGetSiteJournal", new object[] {
                        sessionhandle,
                        startingpoint,
                        infotype}, this.doGetSiteJournalOperationCompleted, userState);
        }
        
        private void OndoGetSiteJournalOperationCompleted(object arg) {
            if ((this.doGetSiteJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSiteJournalCompleted(this, new doGetSiteJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsitejournaldeals", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("site-journal-deals")]
        public SiteJournalDealsStruct[] doGetSiteJournalDeals([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("journal-start")] long journalstart) {
            object[] results = this.Invoke("doGetSiteJournalDeals", new object[] {
                        sessionid,
                        journalstart});
            return ((SiteJournalDealsStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSiteJournalDealsAsync(string sessionid, long journalstart) {
            this.doGetSiteJournalDealsAsync(sessionid, journalstart, null);
        }
        
        /// CodeRemarks
        public void doGetSiteJournalDealsAsync(string sessionid, long journalstart, object userState) {
            if ((this.doGetSiteJournalDealsOperationCompleted == null)) {
                this.doGetSiteJournalDealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalDealsOperationCompleted);
            }
            this.InvokeAsync("doGetSiteJournalDeals", new object[] {
                        sessionid,
                        journalstart}, this.doGetSiteJournalDealsOperationCompleted, userState);
        }
        
        private void OndoGetSiteJournalDealsOperationCompleted(object arg) {
            if ((this.doGetSiteJournalDealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSiteJournalDealsCompleted(this, new doGetSiteJournalDealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsitejournaldealsinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("site-journal-deals-info")]
        public SiteJournalDealsInfoStruct doGetSiteJournalDealsInfo([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("journal-start")] long journalstart) {
            object[] results = this.Invoke("doGetSiteJournalDealsInfo", new object[] {
                        sessionid,
                        journalstart});
            return ((SiteJournalDealsInfoStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSiteJournalDealsInfoAsync(string sessionid, long journalstart) {
            this.doGetSiteJournalDealsInfoAsync(sessionid, journalstart, null);
        }
        
        /// CodeRemarks
        public void doGetSiteJournalDealsInfoAsync(string sessionid, long journalstart, object userState) {
            if ((this.doGetSiteJournalDealsInfoOperationCompleted == null)) {
                this.doGetSiteJournalDealsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalDealsInfoOperationCompleted);
            }
            this.InvokeAsync("doGetSiteJournalDealsInfo", new object[] {
                        sessionid,
                        journalstart}, this.doGetSiteJournalDealsInfoOperationCompleted, userState);
        }
        
        private void OndoGetSiteJournalDealsInfoOperationCompleted(object arg) {
            if ((this.doGetSiteJournalDealsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSiteJournalDealsInfoCompleted(this, new doGetSiteJournalDealsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsitejournalinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("site-journal-info")]
        public SiteJournalInfo doGetSiteJournalInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("starting-point")] long startingpoint, [System.Xml.Serialization.SoapElementAttribute("info-type")] int infotype) {
            object[] results = this.Invoke("doGetSiteJournalInfo", new object[] {
                        sessionhandle,
                        startingpoint,
                        infotype});
            return ((SiteJournalInfo)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSiteJournalInfoAsync(string sessionhandle, long startingpoint, int infotype) {
            this.doGetSiteJournalInfoAsync(sessionhandle, startingpoint, infotype, null);
        }
        
        /// CodeRemarks
        public void doGetSiteJournalInfoAsync(string sessionhandle, long startingpoint, int infotype, object userState) {
            if ((this.doGetSiteJournalInfoOperationCompleted == null)) {
                this.doGetSiteJournalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalInfoOperationCompleted);
            }
            this.InvokeAsync("doGetSiteJournalInfo", new object[] {
                        sessionhandle,
                        startingpoint,
                        infotype}, this.doGetSiteJournalInfoOperationCompleted, userState);
        }
        
        private void OndoGetSiteJournalInfoOperationCompleted(object arg) {
            if ((this.doGetSiteJournalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSiteJournalInfoCompleted(this, new doGetSiteJournalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetstatesinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("states-info-array")]
        public StateInfoStruct[] doGetStatesInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetStatesInfo", new object[] {
                        countrycode,
                        webapikey});
            return ((StateInfoStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetStatesInfoAsync(int countrycode, string webapikey) {
            this.doGetStatesInfoAsync(countrycode, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetStatesInfoAsync(int countrycode, string webapikey, object userState) {
            if ((this.doGetStatesInfoOperationCompleted == null)) {
                this.doGetStatesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetStatesInfoOperationCompleted);
            }
            this.InvokeAsync("doGetStatesInfo", new object[] {
                        countrycode,
                        webapikey}, this.doGetStatesInfoOperationCompleted, userState);
        }
        
        private void OndoGetStatesInfoOperationCompleted(object arg) {
            if ((this.doGetStatesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetStatesInfoCompleted(this, new doGetStatesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsystemtime", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("server-time")]
        public long doGetSystemTime([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetSystemTime", new object[] {
                        countryid,
                        webapikey});
            return ((long)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetSystemTimeAsync(int countryid, string webapikey) {
            this.doGetSystemTimeAsync(countryid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetSystemTimeAsync(int countryid, string webapikey, object userState) {
            if ((this.doGetSystemTimeOperationCompleted == null)) {
                this.doGetSystemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSystemTimeOperationCompleted);
            }
            this.InvokeAsync("doGetSystemTime", new object[] {
                        countryid,
                        webapikey}, this.doGetSystemTimeOperationCompleted, userState);
        }
        
        private void OndoGetSystemTimeOperationCompleted(object arg) {
            if ((this.doGetSystemTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetSystemTimeCompleted(this, new doGetSystemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogettransactionsids", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("transactions-ids-array")]
        public long[] doGetTransactionsIDs([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("user-role")] string userrole, [System.Xml.Serialization.SoapElementAttribute("shipment-id-array")] long[] shipmentidarray) {
            object[] results = this.Invoke("doGetTransactionsIDs", new object[] {
                        sessionhandle,
                        itemsidarray,
                        userrole,
                        shipmentidarray});
            return ((long[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetTransactionsIDsAsync(string sessionhandle, long[] itemsidarray, string userrole, long[] shipmentidarray) {
            this.doGetTransactionsIDsAsync(sessionhandle, itemsidarray, userrole, shipmentidarray, null);
        }
        
        /// CodeRemarks
        public void doGetTransactionsIDsAsync(string sessionhandle, long[] itemsidarray, string userrole, long[] shipmentidarray, object userState) {
            if ((this.doGetTransactionsIDsOperationCompleted == null)) {
                this.doGetTransactionsIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetTransactionsIDsOperationCompleted);
            }
            this.InvokeAsync("doGetTransactionsIDs", new object[] {
                        sessionhandle,
                        itemsidarray,
                        userrole,
                        shipmentidarray}, this.doGetTransactionsIDsOperationCompleted, userState);
        }
        
        private void OndoGetTransactionsIDsOperationCompleted(object arg) {
            if ((this.doGetTransactionsIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetTransactionsIDsCompleted(this, new doGetTransactionsIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetuserid", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("user-id")]
        public int doGetUserID([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-email")] string useremail, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetUserID", new object[] {
                        countryid,
                        userlogin,
                        useremail,
                        webapikey});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetUserIDAsync(int countryid, string userlogin, string useremail, string webapikey) {
            this.doGetUserIDAsync(countryid, userlogin, useremail, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetUserIDAsync(int countryid, string userlogin, string useremail, string webapikey, object userState) {
            if ((this.doGetUserIDOperationCompleted == null)) {
                this.doGetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserIDOperationCompleted);
            }
            this.InvokeAsync("doGetUserID", new object[] {
                        countryid,
                        userlogin,
                        useremail,
                        webapikey}, this.doGetUserIDOperationCompleted, userState);
        }
        
        private void OndoGetUserIDOperationCompleted(object arg) {
            if ((this.doGetUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetUserIDCompleted(this, new doGetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetuserlicencedate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("get-date-value")]
        public float doGetUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
            object[] results = this.Invoke("doGetUserLicenceDate", new object[] {
                        sessionhandle});
            return ((float)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetUserLicenceDateAsync(string sessionhandle) {
            this.doGetUserLicenceDateAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetUserLicenceDateAsync(string sessionhandle, object userState) {
            if ((this.doGetUserLicenceDateOperationCompleted == null)) {
                this.doGetUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserLicenceDateOperationCompleted);
            }
            this.InvokeAsync("doGetUserLicenceDate", new object[] {
                        sessionhandle}, this.doGetUserLicenceDateOperationCompleted, userState);
        }
        
        private void OndoGetUserLicenceDateOperationCompleted(object arg) {
            if ((this.doGetUserLicenceDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetUserLicenceDateCompleted(this, new doGetUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetuserlogin", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("user-login")]
        public string doGetUserLogin([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-id")] int userid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doGetUserLogin", new object[] {
                        countryid,
                        userid,
                        webapikey});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetUserLoginAsync(int countryid, int userid, string webapikey) {
            this.doGetUserLoginAsync(countryid, userid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doGetUserLoginAsync(int countryid, int userid, string webapikey, object userState) {
            if ((this.doGetUserLoginOperationCompleted == null)) {
                this.doGetUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserLoginOperationCompleted);
            }
            this.InvokeAsync("doGetUserLogin", new object[] {
                        countryid,
                        userid,
                        webapikey}, this.doGetUserLoginOperationCompleted, userState);
        }
        
        private void OndoGetUserLoginOperationCompleted(object arg) {
            if ((this.doGetUserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetUserLoginCompleted(this, new doGetUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetwaitingfeedbacks", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("fe-wait-list")]
        public WaitFeedbackStruct[] doGetWaitingFeedbacks([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, int offset, [System.Xml.Serialization.SoapElementAttribute("package-size")] int packagesize) {
            object[] results = this.Invoke("doGetWaitingFeedbacks", new object[] {
                        sessionhandle,
                        offset,
                        packagesize});
            return ((WaitFeedbackStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doGetWaitingFeedbacksAsync(string sessionhandle, int offset, int packagesize) {
            this.doGetWaitingFeedbacksAsync(sessionhandle, offset, packagesize, null);
        }
        
        /// CodeRemarks
        public void doGetWaitingFeedbacksAsync(string sessionhandle, int offset, int packagesize, object userState) {
            if ((this.doGetWaitingFeedbacksOperationCompleted == null)) {
                this.doGetWaitingFeedbacksOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetWaitingFeedbacksOperationCompleted);
            }
            this.InvokeAsync("doGetWaitingFeedbacks", new object[] {
                        sessionhandle,
                        offset,
                        packagesize}, this.doGetWaitingFeedbacksOperationCompleted, userState);
        }
        
        private void OndoGetWaitingFeedbacksOperationCompleted(object arg) {
            if ((this.doGetWaitingFeedbacksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetWaitingFeedbacksCompleted(this, new doGetWaitingFeedbacksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetwaitingfeedbackscount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("feedback-count")]
        public int doGetWaitingFeedbacksCount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
            object[] results = this.Invoke("doGetWaitingFeedbacksCount", new object[] {
                        sessionhandle});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doGetWaitingFeedbacksCountAsync(string sessionhandle) {
            this.doGetWaitingFeedbacksCountAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doGetWaitingFeedbacksCountAsync(string sessionhandle, object userState) {
            if ((this.doGetWaitingFeedbacksCountOperationCompleted == null)) {
                this.doGetWaitingFeedbacksCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetWaitingFeedbacksCountOperationCompleted);
            }
            this.InvokeAsync("doGetWaitingFeedbacksCount", new object[] {
                        sessionhandle}, this.doGetWaitingFeedbacksCountOperationCompleted, userState);
        }
        
        private void OndoGetWaitingFeedbacksCountOperationCompleted(object arg) {
            if ((this.doGetWaitingFeedbacksCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetWaitingFeedbacksCountCompleted(this, new doGetWaitingFeedbacksCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dologin", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
        public string doLogin([System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-password")] string userpassword, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("user-id")] out long userid, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
            object[] results = this.Invoke("doLogin", new object[] {
                        userlogin,
                        userpassword,
                        countrycode,
                        webapikey,
                        localversion});
            userid = ((long)(results[1]));
            servertime = ((long)(results[2]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doLoginAsync(string userlogin, string userpassword, int countrycode, string webapikey, long localversion) {
            this.doLoginAsync(userlogin, userpassword, countrycode, webapikey, localversion, null);
        }
        
        /// CodeRemarks
        public void doLoginAsync(string userlogin, string userpassword, int countrycode, string webapikey, long localversion, object userState) {
            if ((this.doLoginOperationCompleted == null)) {
                this.doLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginOperationCompleted);
            }
            this.InvokeAsync("doLogin", new object[] {
                        userlogin,
                        userpassword,
                        countrycode,
                        webapikey,
                        localversion}, this.doLoginOperationCompleted, userState);
        }
        
        private void OndoLoginOperationCompleted(object arg) {
            if ((this.doLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doLoginCompleted(this, new doLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dologinenc", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
        public string doLoginEnc([System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-hash-password")] string userhashpassword, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("user-id")] out long userid, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
            object[] results = this.Invoke("doLoginEnc", new object[] {
                        userlogin,
                        userhashpassword,
                        countrycode,
                        webapikey,
                        localversion});
            userid = ((long)(results[1]));
            servertime = ((long)(results[2]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doLoginEncAsync(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion) {
            this.doLoginEncAsync(userlogin, userhashpassword, countrycode, webapikey, localversion, null);
        }
        
        /// CodeRemarks
        public void doLoginEncAsync(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion, object userState) {
            if ((this.doLoginEncOperationCompleted == null)) {
                this.doLoginEncOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginEncOperationCompleted);
            }
            this.InvokeAsync("doLoginEnc", new object[] {
                        userlogin,
                        userhashpassword,
                        countrycode,
                        webapikey,
                        localversion}, this.doLoginEncOperationCompleted, userState);
        }
        
        private void OndoLoginEncOperationCompleted(object arg) {
            if ((this.doLoginEncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doLoginEncCompleted(this, new doLoginEncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dologinwithaccesstoken", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
        public string doLoginWithAccessToken([System.Xml.Serialization.SoapElementAttribute("access-token")] string accesstoken, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] out long userid, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
            object[] results = this.Invoke("doLoginWithAccessToken", new object[] {
                        accesstoken,
                        countrycode,
                        webapikey});
            userid = ((long)(results[1]));
            servertime = ((long)(results[2]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doLoginWithAccessTokenAsync(string accesstoken, int countrycode, string webapikey) {
            this.doLoginWithAccessTokenAsync(accesstoken, countrycode, webapikey, null);
        }
        
        /// CodeRemarks
        public void doLoginWithAccessTokenAsync(string accesstoken, int countrycode, string webapikey, object userState) {
            if ((this.doLoginWithAccessTokenOperationCompleted == null)) {
                this.doLoginWithAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginWithAccessTokenOperationCompleted);
            }
            this.InvokeAsync("doLoginWithAccessToken", new object[] {
                        accesstoken,
                        countrycode,
                        webapikey}, this.doLoginWithAccessTokenOperationCompleted, userState);
        }
        
        private void OndoLoginWithAccessTokenOperationCompleted(object arg) {
            if ((this.doLoginWithAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doLoginWithAccessTokenCompleted(this, new doLoginWithAccessTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domyaccount2", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("myaccount-list")]
        public MyAccountStruct2[] doMyAccount2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, int offset, [System.Xml.Serialization.SoapElementAttribute("items-array")] long[] itemsarray, int limit) {
            object[] results = this.Invoke("doMyAccount2", new object[] {
                        sessionhandle,
                        accounttype,
                        offset,
                        itemsarray,
                        limit});
            return ((MyAccountStruct2[])(results[0]));
        }
        
        /// CodeRemarks
        public void doMyAccount2Async(string sessionhandle, string accounttype, int offset, long[] itemsarray, int limit) {
            this.doMyAccount2Async(sessionhandle, accounttype, offset, itemsarray, limit, null);
        }
        
        /// CodeRemarks
        public void doMyAccount2Async(string sessionhandle, string accounttype, int offset, long[] itemsarray, int limit, object userState) {
            if ((this.doMyAccount2OperationCompleted == null)) {
                this.doMyAccount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccount2OperationCompleted);
            }
            this.InvokeAsync("doMyAccount2", new object[] {
                        sessionhandle,
                        accounttype,
                        offset,
                        itemsarray,
                        limit}, this.doMyAccount2OperationCompleted, userState);
        }
        
        private void OndoMyAccount2OperationCompleted(object arg) {
            if ((this.doMyAccount2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyAccount2Completed(this, new doMyAccount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domyaccountitemscount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("myaccount-items-count")]
        public int doMyAccountItemsCount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, [System.Xml.Serialization.SoapElementAttribute("items-array")] long[] itemsarray) {
            object[] results = this.Invoke("doMyAccountItemsCount", new object[] {
                        sessionhandle,
                        accounttype,
                        itemsarray});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doMyAccountItemsCountAsync(string sessionhandle, string accounttype, long[] itemsarray) {
            this.doMyAccountItemsCountAsync(sessionhandle, accounttype, itemsarray, null);
        }
        
        /// CodeRemarks
        public void doMyAccountItemsCountAsync(string sessionhandle, string accounttype, long[] itemsarray, object userState) {
            if ((this.doMyAccountItemsCountOperationCompleted == null)) {
                this.doMyAccountItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccountItemsCountOperationCompleted);
            }
            this.InvokeAsync("doMyAccountItemsCount", new object[] {
                        sessionhandle,
                        accounttype,
                        itemsarray}, this.doMyAccountItemsCountOperationCompleted, userState);
        }
        
        private void OndoMyAccountItemsCountOperationCompleted(object arg) {
            if ((this.doMyAccountItemsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyAccountItemsCountCompleted(this, new doMyAccountItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domybilling", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("my-billing")]
        public string doMyBilling([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
            object[] results = this.Invoke("doMyBilling", new object[] {
                        sessionhandle});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doMyBillingAsync(string sessionhandle) {
            this.doMyBillingAsync(sessionhandle, null);
        }
        
        /// CodeRemarks
        public void doMyBillingAsync(string sessionhandle, object userState) {
            if ((this.doMyBillingOperationCompleted == null)) {
                this.doMyBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyBillingOperationCompleted);
            }
            this.InvokeAsync("doMyBilling", new object[] {
                        sessionhandle}, this.doMyBillingOperationCompleted, userState);
        }
        
        private void OndoMyBillingOperationCompleted(object arg) {
            if ((this.doMyBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyBillingCompleted(this, new doMyBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domybillingitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("entry-fees")]
        public ItemBilling[] doMyBillingItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, string option, [System.Xml.Serialization.SoapElementAttribute("ending-fees")] out ItemBilling[] endingfees) {
            object[] results = this.Invoke("doMyBillingItem", new object[] {
                        sessionhandle,
                        itemid,
                        option});
            endingfees = ((ItemBilling[])(results[1]));
            return ((ItemBilling[])(results[0]));
        }
        
        /// CodeRemarks
        public void doMyBillingItemAsync(string sessionhandle, long itemid, string option) {
            this.doMyBillingItemAsync(sessionhandle, itemid, option, null);
        }
        
        /// CodeRemarks
        public void doMyBillingItemAsync(string sessionhandle, long itemid, string option, object userState) {
            if ((this.doMyBillingItemOperationCompleted == null)) {
                this.doMyBillingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyBillingItemOperationCompleted);
            }
            this.InvokeAsync("doMyBillingItem", new object[] {
                        sessionhandle,
                        itemid,
                        option}, this.doMyBillingItemOperationCompleted, userState);
        }
        
        private void OndoMyBillingItemOperationCompleted(object arg) {
            if ((this.doMyBillingItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyBillingItemCompleted(this, new doMyBillingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domycontact", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("mycontact-list")]
        public MyContactList[] doMyContact([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("auction-id-list")] long[] auctionidlist, int offset, int desc) {
            object[] results = this.Invoke("doMyContact", new object[] {
                        sessionhandle,
                        auctionidlist,
                        offset,
                        desc});
            return ((MyContactList[])(results[0]));
        }
        
        /// CodeRemarks
        public void doMyContactAsync(string sessionhandle, long[] auctionidlist, int offset, int desc) {
            this.doMyContactAsync(sessionhandle, auctionidlist, offset, desc, null);
        }
        
        /// CodeRemarks
        public void doMyContactAsync(string sessionhandle, long[] auctionidlist, int offset, int desc, object userState) {
            if ((this.doMyContactOperationCompleted == null)) {
                this.doMyContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyContactOperationCompleted);
            }
            this.InvokeAsync("doMyContact", new object[] {
                        sessionhandle,
                        auctionidlist,
                        offset,
                        desc}, this.doMyContactOperationCompleted, userState);
        }
        
        private void OndoMyContactOperationCompleted(object arg) {
            if ((this.doMyContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyContactCompleted(this, new doMyContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domyfeedback2", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
        public MyFeedbackListStruct2[] doMyFeedback2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, int offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] long[] itemsarray) {
            object[] results = this.Invoke("doMyFeedback2", new object[] {
                        sessionhandle,
                        feedbacktype,
                        offset,
                        desc,
                        itemsarray});
            return ((MyFeedbackListStruct2[])(results[0]));
        }
        
        /// CodeRemarks
        public void doMyFeedback2Async(string sessionhandle, string feedbacktype, int offset, int desc, long[] itemsarray) {
            this.doMyFeedback2Async(sessionhandle, feedbacktype, offset, desc, itemsarray, null);
        }
        
        /// CodeRemarks
        public void doMyFeedback2Async(string sessionhandle, string feedbacktype, int offset, int desc, long[] itemsarray, object userState) {
            if ((this.doMyFeedback2OperationCompleted == null)) {
                this.doMyFeedback2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedback2OperationCompleted);
            }
            this.InvokeAsync("doMyFeedback2", new object[] {
                        sessionhandle,
                        feedbacktype,
                        offset,
                        desc,
                        itemsarray}, this.doMyFeedback2OperationCompleted, userState);
        }
        
        private void OndoMyFeedback2OperationCompleted(object arg) {
            if ((this.doMyFeedback2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyFeedback2Completed(this, new doMyFeedback2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#domyfeedback2limit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
        public MyFeedbackListStruct2[] doMyFeedback2Limit([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, int offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] long[] itemsarray, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement) {
            object[] results = this.Invoke("doMyFeedback2Limit", new object[] {
                        sessionhandle,
                        feedbacktype,
                        offset,
                        desc,
                        itemsarray,
                        packageelement});
            return ((MyFeedbackListStruct2[])(results[0]));
        }
        
        /// CodeRemarks
        public void doMyFeedback2LimitAsync(string sessionhandle, string feedbacktype, int offset, int desc, long[] itemsarray, int packageelement) {
            this.doMyFeedback2LimitAsync(sessionhandle, feedbacktype, offset, desc, itemsarray, packageelement, null);
        }
        
        /// CodeRemarks
        public void doMyFeedback2LimitAsync(string sessionhandle, string feedbacktype, int offset, int desc, long[] itemsarray, int packageelement, object userState) {
            if ((this.doMyFeedback2LimitOperationCompleted == null)) {
                this.doMyFeedback2LimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedback2LimitOperationCompleted);
            }
            this.InvokeAsync("doMyFeedback2Limit", new object[] {
                        sessionhandle,
                        feedbacktype,
                        offset,
                        desc,
                        itemsarray,
                        packageelement}, this.doMyFeedback2LimitOperationCompleted, userState);
        }
        
        private void OndoMyFeedback2LimitOperationCompleted(object arg) {
            if ((this.doMyFeedback2LimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doMyFeedback2LimitCompleted(this, new doMyFeedback2LimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#donewauctionext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long doNewAuctionExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, [System.Xml.Serialization.SoapElementAttribute("item-template-id")] int itemtemplateid, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-template-create")] ItemTemplateCreateStruct itemtemplatecreate, VariantStruct[] variants, TagNameStruct[] tags, [System.Xml.Serialization.SoapElementAttribute("item-info")] out string iteminfo, [System.Xml.Serialization.SoapElementAttribute("item-is-allegro-standard")] out int itemisallegrostandard) {
            object[] results = this.Invoke("doNewAuctionExt", new object[] {
                        sessionhandle,
                        fields,
                        itemtemplateid,
                        localid,
                        itemtemplatecreate,
                        variants,
                        tags});
            iteminfo = ((string)(results[1]));
            itemisallegrostandard = ((int)(results[2]));
            return ((long)(results[0]));
        }
        
        /// CodeRemarks
        public void doNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, int itemtemplateid, int localid, ItemTemplateCreateStruct itemtemplatecreate, VariantStruct[] variants, TagNameStruct[] tags) {
            this.doNewAuctionExtAsync(sessionhandle, fields, itemtemplateid, localid, itemtemplatecreate, variants, tags, null);
        }
        
        /// CodeRemarks
        public void doNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, int itemtemplateid, int localid, ItemTemplateCreateStruct itemtemplatecreate, VariantStruct[] variants, TagNameStruct[] tags, object userState) {
            if ((this.doNewAuctionExtOperationCompleted == null)) {
                this.doNewAuctionExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoNewAuctionExtOperationCompleted);
            }
            this.InvokeAsync("doNewAuctionExt", new object[] {
                        sessionhandle,
                        fields,
                        itemtemplateid,
                        localid,
                        itemtemplatecreate,
                        variants,
                        tags}, this.doNewAuctionExtOperationCompleted, userState);
        }
        
        private void OndoNewAuctionExtOperationCompleted(object arg) {
            if ((this.doNewAuctionExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doNewAuctionExtCompleted(this, new doNewAuctionExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doqueryallsysstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("sys-country-status")]
        public SysStatusType[] doQueryAllSysStatus([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
            object[] results = this.Invoke("doQueryAllSysStatus", new object[] {
                        countryid,
                        webapikey});
            return ((SysStatusType[])(results[0]));
        }
        
        /// CodeRemarks
        public void doQueryAllSysStatusAsync(int countryid, string webapikey) {
            this.doQueryAllSysStatusAsync(countryid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doQueryAllSysStatusAsync(int countryid, string webapikey, object userState) {
            if ((this.doQueryAllSysStatusOperationCompleted == null)) {
                this.doQueryAllSysStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQueryAllSysStatusOperationCompleted);
            }
            this.InvokeAsync("doQueryAllSysStatus", new object[] {
                        countryid,
                        webapikey}, this.doQueryAllSysStatusOperationCompleted, userState);
        }
        
        private void OndoQueryAllSysStatusOperationCompleted(object arg) {
            if ((this.doQueryAllSysStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doQueryAllSysStatusCompleted(this, new doQueryAllSysStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doquerysysstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public string doQuerySysStatus(int sysvar, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey) {
            object[] results = this.Invoke("doQuerySysStatus", new object[] {
                        sysvar,
                        countryid,
                        webapikey});
            verkey = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doQuerySysStatusAsync(int sysvar, int countryid, string webapikey) {
            this.doQuerySysStatusAsync(sysvar, countryid, webapikey, null);
        }
        
        /// CodeRemarks
        public void doQuerySysStatusAsync(int sysvar, int countryid, string webapikey, object userState) {
            if ((this.doQuerySysStatusOperationCompleted == null)) {
                this.doQuerySysStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQuerySysStatusOperationCompleted);
            }
            this.InvokeAsync("doQuerySysStatus", new object[] {
                        sysvar,
                        countryid,
                        webapikey}, this.doQuerySysStatusOperationCompleted, userState);
        }
        
        private void OndoQuerySysStatusOperationCompleted(object arg) {
            if ((this.doQuerySysStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doQuerySysStatusCompleted(this, new doQuerySysStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doremovefromblacklist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("black-list-result")]
        public BlackListResStruct[] doRemoveFromBlackList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("users-id-array")] long[] usersidarray) {
            object[] results = this.Invoke("doRemoveFromBlackList", new object[] {
                        sessionhandle,
                        usersidarray});
            return ((BlackListResStruct[])(results[0]));
        }
        
        /// CodeRemarks
        public void doRemoveFromBlackListAsync(string sessionhandle, long[] usersidarray) {
            this.doRemoveFromBlackListAsync(sessionhandle, usersidarray, null);
        }
        
        /// CodeRemarks
        public void doRemoveFromBlackListAsync(string sessionhandle, long[] usersidarray, object userState) {
            if ((this.doRemoveFromBlackListOperationCompleted == null)) {
                this.doRemoveFromBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRemoveFromBlackListOperationCompleted);
            }
            this.InvokeAsync("doRemoveFromBlackList", new object[] {
                        sessionhandle,
                        usersidarray}, this.doRemoveFromBlackListOperationCompleted, userState);
        }
        
        private void OndoRemoveFromBlackListOperationCompleted(object arg) {
            if ((this.doRemoveFromBlackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRemoveFromBlackListCompleted(this, new doRemoveFromBlackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doremoveitemtemplates", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("removed-item-templates")]
        public RemovedItemTemplatesStruct doRemoveItemTemplates([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("item-template-ids")] int[] itemtemplateids) {
            object[] results = this.Invoke("doRemoveItemTemplates", new object[] {
                        sessionid,
                        itemtemplateids});
            return ((RemovedItemTemplatesStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doRemoveItemTemplatesAsync(string sessionid, int[] itemtemplateids) {
            this.doRemoveItemTemplatesAsync(sessionid, itemtemplateids, null);
        }
        
        /// CodeRemarks
        public void doRemoveItemTemplatesAsync(string sessionid, int[] itemtemplateids, object userState) {
            if ((this.doRemoveItemTemplatesOperationCompleted == null)) {
                this.doRemoveItemTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRemoveItemTemplatesOperationCompleted);
            }
            this.InvokeAsync("doRemoveItemTemplates", new object[] {
                        sessionid,
                        itemtemplateids}, this.doRemoveItemTemplatesOperationCompleted, userState);
        }
        
        private void OndoRemoveItemTemplatesOperationCompleted(object arg) {
            if ((this.doRemoveItemTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRemoveItemTemplatesCompleted(this, new doRemoveItemTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dorequestcancelbid", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("request-value")]
        public int doRequestCancelBid([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("request-item-id")] long requestitemid, [System.Xml.Serialization.SoapElementAttribute("request-cancel-reason")] string requestcancelreason) {
            object[] results = this.Invoke("doRequestCancelBid", new object[] {
                        sessionhandle,
                        requestitemid,
                        requestcancelreason});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doRequestCancelBidAsync(string sessionhandle, long requestitemid, string requestcancelreason) {
            this.doRequestCancelBidAsync(sessionhandle, requestitemid, requestcancelreason, null);
        }
        
        /// CodeRemarks
        public void doRequestCancelBidAsync(string sessionhandle, long requestitemid, string requestcancelreason, object userState) {
            if ((this.doRequestCancelBidOperationCompleted == null)) {
                this.doRequestCancelBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRequestCancelBidOperationCompleted);
            }
            this.InvokeAsync("doRequestCancelBid", new object[] {
                        sessionhandle,
                        requestitemid,
                        requestcancelreason}, this.doRequestCancelBidOperationCompleted, userState);
        }
        
        private void OndoRequestCancelBidOperationCompleted(object arg) {
            if ((this.doRequestCancelBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRequestCancelBidCompleted(this, new doRequestCancelBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dorequestpayout", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("request-payout")]
        public RequestPayoutStruct doRequestPayout([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid) {
            object[] results = this.Invoke("doRequestPayout", new object[] {
                        sessionid});
            return ((RequestPayoutStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doRequestPayoutAsync(string sessionid) {
            this.doRequestPayoutAsync(sessionid, null);
        }
        
        /// CodeRemarks
        public void doRequestPayoutAsync(string sessionid, object userState) {
            if ((this.doRequestPayoutOperationCompleted == null)) {
                this.doRequestPayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRequestPayoutOperationCompleted);
            }
            this.InvokeAsync("doRequestPayout", new object[] {
                        sessionid}, this.doRequestPayoutOperationCompleted, userState);
        }
        
        private void OndoRequestPayoutOperationCompleted(object arg) {
            if ((this.doRequestPayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRequestPayoutCompleted(this, new doRequestPayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dorequestsurcharge", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("surcharge-result")]
        public int doRequestSurcharge([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("transaction-id")] long transactionid, [System.Xml.Serialization.SoapElementAttribute("surcharge-value")] float surchargevalue, [System.Xml.Serialization.SoapElementAttribute("surcharge-message-to-buyer")] string surchargemessagetobuyer) {
            object[] results = this.Invoke("doRequestSurcharge", new object[] {
                        sessionhandle,
                        transactionid,
                        surchargevalue,
                        surchargemessagetobuyer});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doRequestSurchargeAsync(string sessionhandle, long transactionid, float surchargevalue, string surchargemessagetobuyer) {
            this.doRequestSurchargeAsync(sessionhandle, transactionid, surchargevalue, surchargemessagetobuyer, null);
        }
        
        /// CodeRemarks
        public void doRequestSurchargeAsync(string sessionhandle, long transactionid, float surchargevalue, string surchargemessagetobuyer, object userState) {
            if ((this.doRequestSurchargeOperationCompleted == null)) {
                this.doRequestSurchargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRequestSurchargeOperationCompleted);
            }
            this.InvokeAsync("doRequestSurcharge", new object[] {
                        sessionhandle,
                        transactionid,
                        surchargevalue,
                        surchargemessagetobuyer}, this.doRequestSurchargeOperationCompleted, userState);
        }
        
        private void OndoRequestSurchargeOperationCompleted(object arg) {
            if ((this.doRequestSurchargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRequestSurchargeCompleted(this, new doRequestSurchargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dosellsomeagain", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("items-sell-again")]
        public StructSellAgain[] doSellSomeAgain([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-items-array")] long[] sellitemsarray, [System.Xml.Serialization.SoapElementAttribute("sell-starting-time")] long sellstartingtime, [System.Xml.Serialization.SoapElementAttribute("sell-auction-duration")] int sellauctionduration, [System.Xml.Serialization.SoapElementAttribute("sell-options")] int selloptions, [System.Xml.Serialization.SoapElementAttribute("local-ids")] int[] localids, [System.Xml.Serialization.SoapElementAttribute("sell-prolong-options")] int sellprolongoptions, [System.Xml.Serialization.SoapElementAttribute("items-sell-failed")] out StructSellFailed[] itemssellfailed, [System.Xml.Serialization.SoapElementAttribute("items-sell-not-found")] out long[] itemssellnotfound) {
            object[] results = this.Invoke("doSellSomeAgain", new object[] {
                        sessionhandle,
                        sellitemsarray,
                        sellstartingtime,
                        sellauctionduration,
                        selloptions,
                        localids,
                        sellprolongoptions});
            itemssellfailed = ((StructSellFailed[])(results[1]));
            itemssellnotfound = ((long[])(results[2]));
            return ((StructSellAgain[])(results[0]));
        }
        
        /// CodeRemarks
        public void doSellSomeAgainAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions, int[] localids, int sellprolongoptions) {
            this.doSellSomeAgainAsync(sessionhandle, sellitemsarray, sellstartingtime, sellauctionduration, selloptions, localids, sellprolongoptions, null);
        }
        
        /// CodeRemarks
        public void doSellSomeAgainAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions, int[] localids, int sellprolongoptions, object userState) {
            if ((this.doSellSomeAgainOperationCompleted == null)) {
                this.doSellSomeAgainOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSellSomeAgainOperationCompleted);
            }
            this.InvokeAsync("doSellSomeAgain", new object[] {
                        sessionhandle,
                        sellitemsarray,
                        sellstartingtime,
                        sellauctionduration,
                        selloptions,
                        localids,
                        sellprolongoptions}, this.doSellSomeAgainOperationCompleted, userState);
        }
        
        private void OndoSellSomeAgainOperationCompleted(object arg) {
            if ((this.doSellSomeAgainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSellSomeAgainCompleted(this, new doSellSomeAgainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dosellsomeagaininshop", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("items-sell-again")]
        public StructSellAgain[] doSellSomeAgainInShop([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-items-array")] long[] sellitemsarray, [System.Xml.Serialization.SoapElementAttribute("sell-starting-time")] long sellstartingtime, [System.Xml.Serialization.SoapElementAttribute("sell-shop-duration")] int sellshopduration, [System.Xml.Serialization.SoapElementAttribute("sell-shop-options")] int sellshopoptions, [System.Xml.Serialization.SoapElementAttribute("sell-prolong-options")] int sellprolongoptions, [System.Xml.Serialization.SoapElementAttribute("sell-shop-category")] long sellshopcategory, [System.Xml.Serialization.SoapElementAttribute("local-ids")] int[] localids, [System.Xml.Serialization.SoapElementAttribute("items-sell-failed")] out StructSellFailed[] itemssellfailed, [System.Xml.Serialization.SoapElementAttribute("items-sell-not-found")] out long[] itemssellnotfound) {
            object[] results = this.Invoke("doSellSomeAgainInShop", new object[] {
                        sessionhandle,
                        sellitemsarray,
                        sellstartingtime,
                        sellshopduration,
                        sellshopoptions,
                        sellprolongoptions,
                        sellshopcategory,
                        localids});
            itemssellfailed = ((StructSellFailed[])(results[1]));
            itemssellnotfound = ((long[])(results[2]));
            return ((StructSellAgain[])(results[0]));
        }
        
        /// CodeRemarks
        public void doSellSomeAgainInShopAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory, int[] localids) {
            this.doSellSomeAgainInShopAsync(sessionhandle, sellitemsarray, sellstartingtime, sellshopduration, sellshopoptions, sellprolongoptions, sellshopcategory, localids, null);
        }
        
        /// CodeRemarks
        public void doSellSomeAgainInShopAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory, int[] localids, object userState) {
            if ((this.doSellSomeAgainInShopOperationCompleted == null)) {
                this.doSellSomeAgainInShopOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSellSomeAgainInShopOperationCompleted);
            }
            this.InvokeAsync("doSellSomeAgainInShop", new object[] {
                        sessionhandle,
                        sellitemsarray,
                        sellstartingtime,
                        sellshopduration,
                        sellshopoptions,
                        sellprolongoptions,
                        sellshopcategory,
                        localids}, this.doSellSomeAgainInShopOperationCompleted, userState);
        }
        
        private void OndoSellSomeAgainInShopOperationCompleted(object arg) {
            if ((this.doSellSomeAgainInShopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSellSomeAgainInShopCompleted(this, new doSellSomeAgainInShopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dosendemailtouser", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("mail-to-user-result")]
        public string doSendEmailToUser([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-item-id")] long mailtouseritemid, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-receiver-id")] ref long mailtouserreceiverid, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-subject-id")] int mailtousersubjectid, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-option")] int mailtouseroption, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-message")] string mailtousermessage) {
            object[] results = this.Invoke("doSendEmailToUser", new object[] {
                        sessionhandle,
                        mailtouseritemid,
                        mailtouserreceiverid,
                        mailtousersubjectid,
                        mailtouseroption,
                        mailtousermessage});
            mailtouserreceiverid = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void doSendEmailToUserAsync(string sessionhandle, long mailtouseritemid, long mailtouserreceiverid, int mailtousersubjectid, int mailtouseroption, string mailtousermessage) {
            this.doSendEmailToUserAsync(sessionhandle, mailtouseritemid, mailtouserreceiverid, mailtousersubjectid, mailtouseroption, mailtousermessage, null);
        }
        
        /// CodeRemarks
        public void doSendEmailToUserAsync(string sessionhandle, long mailtouseritemid, long mailtouserreceiverid, int mailtousersubjectid, int mailtouseroption, string mailtousermessage, object userState) {
            if ((this.doSendEmailToUserOperationCompleted == null)) {
                this.doSendEmailToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendEmailToUserOperationCompleted);
            }
            this.InvokeAsync("doSendEmailToUser", new object[] {
                        sessionhandle,
                        mailtouseritemid,
                        mailtouserreceiverid,
                        mailtousersubjectid,
                        mailtouseroption,
                        mailtousermessage}, this.doSendEmailToUserOperationCompleted, userState);
        }
        
        private void OndoSendEmailToUserOperationCompleted(object arg) {
            if ((this.doSendEmailToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSendEmailToUserCompleted(this, new doSendEmailToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dosendpostbuyform", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("post-buy-form")]
        public PostBuyFormStruct doSendPostBuyForm([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("new-post-buy-form-seller")] NewPostBuyFormSellerStruct[] newpostbuyformseller, [System.Xml.Serialization.SoapElementAttribute("new-post-buy-form-common")] NewPostBuyFormCommonStruct newpostbuyformcommon) {
            object[] results = this.Invoke("doSendPostBuyForm", new object[] {
                        sessionid,
                        newpostbuyformseller,
                        newpostbuyformcommon});
            return ((PostBuyFormStruct)(results[0]));
        }
        
        /// CodeRemarks
        public void doSendPostBuyFormAsync(string sessionid, NewPostBuyFormSellerStruct[] newpostbuyformseller, NewPostBuyFormCommonStruct newpostbuyformcommon) {
            this.doSendPostBuyFormAsync(sessionid, newpostbuyformseller, newpostbuyformcommon, null);
        }
        
        /// CodeRemarks
        public void doSendPostBuyFormAsync(string sessionid, NewPostBuyFormSellerStruct[] newpostbuyformseller, NewPostBuyFormCommonStruct newpostbuyformcommon, object userState) {
            if ((this.doSendPostBuyFormOperationCompleted == null)) {
                this.doSendPostBuyFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendPostBuyFormOperationCompleted);
            }
            this.InvokeAsync("doSendPostBuyForm", new object[] {
                        sessionid,
                        newpostbuyformseller,
                        newpostbuyformcommon}, this.doSendPostBuyFormOperationCompleted, userState);
        }
        
        private void OndoSendPostBuyFormOperationCompleted(object arg) {
            if ((this.doSendPostBuyFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSendPostBuyFormCompleted(this, new doSendPostBuyFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dosetshipmentpricetype", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("operation-result")]
        public int doSetShipmentPriceType([System.Xml.Serialization.SoapElementAttribute("session-id")] string sessionid, [System.Xml.Serialization.SoapElementAttribute("shipment-price-type-id")] int shipmentpricetypeid) {
            object[] results = this.Invoke("doSetShipmentPriceType", new object[] {
                        sessionid,
                        shipmentpricetypeid});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doSetShipmentPriceTypeAsync(string sessionid, int shipmentpricetypeid) {
            this.doSetShipmentPriceTypeAsync(sessionid, shipmentpricetypeid, null);
        }
        
        /// CodeRemarks
        public void doSetShipmentPriceTypeAsync(string sessionid, int shipmentpricetypeid, object userState) {
            if ((this.doSetShipmentPriceTypeOperationCompleted == null)) {
                this.doSetShipmentPriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSetShipmentPriceTypeOperationCompleted);
            }
            this.InvokeAsync("doSetShipmentPriceType", new object[] {
                        sessionid,
                        shipmentpricetypeid}, this.doSetShipmentPriceTypeOperationCompleted, userState);
        }
        
        private void OndoSetShipmentPriceTypeOperationCompleted(object arg) {
            if ((this.doSetShipmentPriceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSetShipmentPriceTypeCompleted(this, new doSetShipmentPriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dosetuserlicencedate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("set-date-value")]
        public int doSetUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("admin-session-handle")] string adminsessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-lic-login")] string userliclogin, [System.Xml.Serialization.SoapElementAttribute("user-lic-country")] int userliccountry, [System.Xml.Serialization.SoapElementAttribute("user-lic-date")] float userlicdate) {
            object[] results = this.Invoke("doSetUserLicenceDate", new object[] {
                        adminsessionhandle,
                        userliclogin,
                        userliccountry,
                        userlicdate});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doSetUserLicenceDateAsync(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate) {
            this.doSetUserLicenceDateAsync(adminsessionhandle, userliclogin, userliccountry, userlicdate, null);
        }
        
        /// CodeRemarks
        public void doSetUserLicenceDateAsync(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate, object userState) {
            if ((this.doSetUserLicenceDateOperationCompleted == null)) {
                this.doSetUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSetUserLicenceDateOperationCompleted);
            }
            this.InvokeAsync("doSetUserLicenceDate", new object[] {
                        adminsessionhandle,
                        userliclogin,
                        userliccountry,
                        userlicdate}, this.doSetUserLicenceDateOperationCompleted, userState);
        }
        
        private void OndoSetUserLicenceDateOperationCompleted(object arg) {
            if ((this.doSetUserLicenceDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSetUserLicenceDateCompleted(this, new doSetUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doshowiteminfoext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-list-info-ext")]
        public ItemInfoExt doShowItemInfoExt(
                    [System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, 
                    [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, 
                    [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, 
                    [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, 
                    [System.Xml.Serialization.SoapElementAttribute("get-attribs")] int getattribs, 
                    [System.Xml.Serialization.SoapElementAttribute("get-postage-options")] int getpostageoptions, 
                    [System.Xml.Serialization.SoapElementAttribute("get-company-info")] int getcompanyinfo, 
                    [System.Xml.Serialization.SoapElementAttribute("get-product-info")] int getproductinfo, 
                    [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, 
                    [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist, 
                    [System.Xml.Serialization.SoapElementAttribute("item-attrib-list")] out AttribStruct[] itemattriblist, 
                    [System.Xml.Serialization.SoapElementAttribute("item-postage-options")] out PostageStruct[] itempostageoptions, 
                    [System.Xml.Serialization.SoapElementAttribute("item-payment-options")] out ItemPaymentOptions itempaymentoptions, 
                    [System.Xml.Serialization.SoapElementAttribute("item-company-info")] out CompanyInfoStruct itemcompanyinfo, 
                    [System.Xml.Serialization.SoapElementAttribute("item-product-info")] out ProductStruct itemproductinfo, 
                    [System.Xml.Serialization.SoapElementAttribute("item-variants")] out ItemVariantStruct[] itemvariants) {
            object[] results = this.Invoke("doShowItemInfoExt", new object[] {
                        sessionhandle,
                        itemid,
                        getdesc,
                        getimageurl,
                        getattribs,
                        getpostageoptions,
                        getcompanyinfo,
                        getproductinfo});
            itemcatpath = ((ItemCatList[])(results[1]));
            itemimglist = ((ItemImageList[])(results[2]));
            itemattriblist = ((AttribStruct[])(results[3]));
            itempostageoptions = ((PostageStruct[])(results[4]));
            itempaymentoptions = ((ItemPaymentOptions)(results[5]));
            itemcompanyinfo = ((CompanyInfoStruct)(results[6]));
            itemproductinfo = ((ProductStruct)(results[7]));
            itemvariants = ((ItemVariantStruct[])(results[8]));
            return ((ItemInfoExt)(results[0]));
        }
        
        /// CodeRemarks
        public void doShowItemInfoExtAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, int getproductinfo) {
            this.doShowItemInfoExtAsync(sessionhandle, itemid, getdesc, getimageurl, getattribs, getpostageoptions, getcompanyinfo, getproductinfo, null);
        }
        
        /// CodeRemarks
        public void doShowItemInfoExtAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, int getproductinfo, object userState) {
            if ((this.doShowItemInfoExtOperationCompleted == null)) {
                this.doShowItemInfoExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowItemInfoExtOperationCompleted);
            }
            this.InvokeAsync("doShowItemInfoExt", new object[] {
                        sessionhandle,
                        itemid,
                        getdesc,
                        getimageurl,
                        getattribs,
                        getpostageoptions,
                        getcompanyinfo,
                        getproductinfo}, this.doShowItemInfoExtOperationCompleted, userState);
        }
        
        private void OndoShowItemInfoExtOperationCompleted(object arg) {
            if ((this.doShowItemInfoExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doShowItemInfoExtCompleted(this, new doShowItemInfoExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doshowuser", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("user-country")]
        public int doShowUser(
                    [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, 
                    [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, 
                    [System.Xml.Serialization.SoapElementAttribute("user-id")] ref long userid, 
                    [System.Xml.Serialization.SoapElementAttribute("user-login")] ref string userlogin, 
                    [System.Xml.Serialization.SoapElementAttribute("user-create-date")] out long usercreatedate, 
                    [System.Xml.Serialization.SoapElementAttribute("user-login-date")] out long userlogindate, 
                    [System.Xml.Serialization.SoapElementAttribute("user-rating")] out int userrating, 
                    [System.Xml.Serialization.SoapElementAttribute("user-is-new-user")] out int userisnewuser, 
                    [System.Xml.Serialization.SoapElementAttribute("user-not-activated")] out int usernotactivated, 
                    [System.Xml.Serialization.SoapElementAttribute("user-closed")] out int userclosed, 
                    [System.Xml.Serialization.SoapElementAttribute("user-blocked")] out int userblocked, 
                    [System.Xml.Serialization.SoapElementAttribute("user-terminated")] out int userterminated, 
                    [System.Xml.Serialization.SoapElementAttribute("user-has-page")] out int userhaspage, 
                    [System.Xml.Serialization.SoapElementAttribute("user-is-sseller")] out int userissseller, 
                    [System.Xml.Serialization.SoapElementAttribute("user-is-eco")] out int useriseco, 
                    [System.Xml.Serialization.SoapElementAttribute("user-positive-feedback")] out ShowUserFeedbacks userpositivefeedback, 
                    [System.Xml.Serialization.SoapElementAttribute("user-negative-feedback")] out ShowUserFeedbacks usernegativefeedback, 
                    [System.Xml.Serialization.SoapElementAttribute("user-neutral-feedback")] out ShowUserFeedbacks userneutralfeedback, 
                    [System.Xml.Serialization.SoapElementAttribute("user-junior-status")] out int userjuniorstatus, 
                    [System.Xml.Serialization.SoapElementAttribute("user-has-shop")] out int userhasshop, 
                    [System.Xml.Serialization.SoapElementAttribute("user-company-icon")] out int usercompanyicon, 
                    [System.Xml.Serialization.SoapElementAttribute("user-sell-rating-count")] out int usersellratingcount, 
                    [System.Xml.Serialization.SoapElementAttribute("user-sell-rating-average")] out SellRatingAverageStruct[] usersellratingaverage, 
                    [System.Xml.Serialization.SoapElementAttribute("user-is-allegro-standard")] out int userisallegrostandard, 
                    [System.Xml.Serialization.SoapElementAttribute("user-is-b2c-seller")] out int userisb2cseller) {
            object[] results = this.Invoke("doShowUser", new object[] {
                        webapikey,
                        countryid,
                        userid,
                        userlogin});
            userid = ((long)(results[1]));
            userlogin = ((string)(results[2]));
            usercreatedate = ((long)(results[3]));
            userlogindate = ((long)(results[4]));
            userrating = ((int)(results[5]));
            userisnewuser = ((int)(results[6]));
            usernotactivated = ((int)(results[7]));
            userclosed = ((int)(results[8]));
            userblocked = ((int)(results[9]));
            userterminated = ((int)(results[10]));
            userhaspage = ((int)(results[11]));
            userissseller = ((int)(results[12]));
            useriseco = ((int)(results[13]));
            userpositivefeedback = ((ShowUserFeedbacks)(results[14]));
            usernegativefeedback = ((ShowUserFeedbacks)(results[15]));
            userneutralfeedback = ((ShowUserFeedbacks)(results[16]));
            userjuniorstatus = ((int)(results[17]));
            userhasshop = ((int)(results[18]));
            usercompanyicon = ((int)(results[19]));
            usersellratingcount = ((int)(results[20]));
            usersellratingaverage = ((SellRatingAverageStruct[])(results[21]));
            userisallegrostandard = ((int)(results[22]));
            userisb2cseller = ((int)(results[23]));
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void doShowUserAsync(string webapikey, int countryid, long userid, string userlogin) {
            this.doShowUserAsync(webapikey, countryid, userid, userlogin, null);
        }
        
        /// CodeRemarks
        public void doShowUserAsync(string webapikey, int countryid, long userid, string userlogin, object userState) {
            if ((this.doShowUserOperationCompleted == null)) {
                this.doShowUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowUserOperationCompleted);
            }
            this.InvokeAsync("doShowUser", new object[] {
                        webapikey,
                        countryid,
                        userid,
                        userlogin}, this.doShowUserOperationCompleted, userState);
        }
        
        private void OndoShowUserOperationCompleted(object arg) {
            if ((this.doShowUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doShowUserCompleted(this, new doShowUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doverifyitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
        [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long doVerifyItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-listed")] out int itemlisted, [System.Xml.Serialization.SoapElementAttribute("item-starting-time")] out long itemstartingtime) {
            object[] results = this.Invoke("doVerifyItem", new object[] {
                        sessionhandle,
                        localid});
            itemlisted = ((int)(results[1]));
            itemstartingtime = ((long)(results[2]));
            return ((long)(results[0]));
        }
        
        /// CodeRemarks
        public void doVerifyItemAsync(string sessionhandle, int localid) {
            this.doVerifyItemAsync(sessionhandle, localid, null);
        }
        
        /// CodeRemarks
        public void doVerifyItemAsync(string sessionhandle, int localid, object userState) {
            if ((this.doVerifyItemOperationCompleted == null)) {
                this.doVerifyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoVerifyItemOperationCompleted);
            }
            this.InvokeAsync("doVerifyItem", new object[] {
                        sessionhandle,
                        localid}, this.doVerifyItemOperationCompleted, userState);
        }
        
        private void OndoVerifyItemOperationCompleted(object arg) {
            if ((this.doVerifyItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doVerifyItemCompleted(this, new doVerifyItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PackageInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("operator-id")]
        public int operatorid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("package-id")]
        public string packageid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ShowUserFeedbacks {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-f-last-week")]
        public int userflastweek;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-f-last-month")]
        public int userflastmonth;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-f-all")]
        public int userfall;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-f-sold-items")]
        public int userfsolditems;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-f-buy-items")]
        public int userfbuyitems;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemVariantAttributeStruct {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemVariantStruct {
        
        /// <remarks/>
        public string id;
        
        /// <remarks/>
        public int quantity;
        
        /// <remarks/>
        public ItemVariantAttributeStruct[] attributes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemInfoExt {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-id")]
        public long itid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-country")]
        public int itcountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-name")]
        public string itname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-price")]
        public float itprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
        public int itbidcount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
        public long itendingtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
        public long itsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-login")]
        public string itsellerlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-rating")]
        public int itsellerrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
        public long itstartingtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-starting-price")]
        public float itstartingprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-quantity")]
        public int itquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
        public int itfotocount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-reserve-price")]
        public float itreserveprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-location")]
        public string itlocation;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
        public float itbuynowprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-buy-now-active")]
        public int itbuynowactive;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-high-bidder")]
        public int ithighbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-high-bidder-login")]
        public string ithighbidderlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-description")]
        public string itdescription;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-options")]
        public int itoptions;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-state")]
        public int itstate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-wire-transfer")]
        public float itwiretransfer;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-post-delivery")]
        public float itpostdelivery;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-post-info")]
        public string itpostinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-quantity-type")]
        public int itquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-eco")]
        public int itiseco;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-hit-count")]
        public long ithitcount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-postcode")]
        public string itpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-vat-invoice")]
        public int itvatinvoice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-bank-account1")]
        public string itbankaccount1;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-bank-account2")]
        public string itbankaccount2;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-starting-quantity")]
        public int itstartingquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-for-guests")]
        public int itisforguests;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-has-product")]
        public int ithasproduct;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-order-fulfillment-time")]
        public int itorderfulfillmenttime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-ending-info")]
        public int itendinginfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-allegro-standard")]
        public int itisallegrostandard;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-new-used")]
        public int itisnewused;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-brand-zone")]
        public int itisbrandzone;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-fulfillment-time-active")]
        public int itisfulfillmenttimeactive;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ActionDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("action-key")]
        public string actionkey;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("action-value")]
        public string actionvalue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class TransactionPayByLinkStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("action-http-method")]
        public string actionhttpmethod;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("action-url")]
        public string actionurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("action-data")]
        public ActionDataStruct[] actiondata;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("transaction-id")]
        public long transactionid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("transaction-package-ids")]
        public long[] transactionpackageids;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("transaction-pay-by-link")]
        public TransactionPayByLinkStruct transactionpaybylink;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class InvoiceInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("invoice-address-type")]
        public int invoiceaddresstype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("invoice-address-data")]
        public AddressUserDataStruct invoiceaddressdata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("invoice-nip")]
        public string invoicenip;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class AddressUserDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-company")]
        public string usercompany;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-full-name")]
        public string userfullname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-address")]
        public string useraddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
        public string userpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-city")]
        public string usercity;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class NewPostBuyFormCommonStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payment-method-id")]
        public string paymentmethodid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-address-type")]
        public int shipmentaddresstype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-address-data")]
        public AddressUserDataStruct shipmentaddressdata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-phone")]
        public string contactphone;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("invoice-option")]
        public int invoiceoption;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("invoice-info")]
        public InvoiceInfoStruct invoiceinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class NewPostBuyFormSellerStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-id")]
        public int sellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-item-ids")]
        public long[] selleritemids;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-shipment-id")]
        public int sellershipmentid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-gd-id")]
        public int sellergdid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-shipment-amount")]
        public float sellershipmentamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-message-to")]
        public string sellermessageto;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class StructSellFailed {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-item-id")]
        public long sellitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-fault-code")]
        public string sellfaultcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-fault-string")]
        public string sellfaultstring;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class StructSellAgain {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-item-id")]
        public long sellitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-item-info")]
        public string selliteminfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-item-local-id")]
        public int sellitemlocalid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RequestPayoutStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-id")]
        public long payoutid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-amount")]
        public float payoutamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-time")]
        public long payouttime;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RemovedItemTemplatesStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-ids")]
        public int[] itemtemplateids;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-incorrect-ids")]
        public int[] itemtemplateincorrectids;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class BlackListResStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public long userid;
        
        /// <remarks/>
        public int result;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SysStatusType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("country-id")]
        public int countryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("program-version")]
        public string programversion;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cats-version")]
        public string catsversion;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("api-version")]
        public string apiversion;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("attrib-version")]
        public string attribversion;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("form-sell-version")]
        public string formsellversion;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("site-version")]
        public string siteversion;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("ver-key")]
        public long verkey;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemTemplateCreateStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-option")]
        public int itemtemplateoption;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-name")]
        public string itemtemplatename;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class MyFeedbackListStruct2 {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("feedback-array")]
        public string[] feedbackarray;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class MyContactList {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-user-id")]
        public int contactuserid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-nick")]
        public string contactnick;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-first-name")]
        public string contactfirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-last-name")]
        public string contactlastname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-company")]
        public string contactcompany;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-email")]
        public string contactemail;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-street")]
        public string contactstreet;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-postcode")]
        public string contactpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-city")]
        public string contactcity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-country")]
        public string contactcountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-phone")]
        public string contactphone;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-phone2")]
        public string contactphone2;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-rating")]
        public string contactrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("contact-blocked")]
        public string contactblocked;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemBilling {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("bi-name")]
        public string biname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("bi-value")]
        public string bivalue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class MyAccountStruct2 {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("my-account-array")]
        public string[] myaccountarray;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class WaitFeedbackStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
        public long feitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-item-name")]
        public string feitemname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")]
        public int fetouserid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-op")]
        public int feop;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-ans-comment-type")]
        public string feanscommenttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-possibility-to-add")]
        public int fepossibilitytoadd;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class StateInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("state-id")]
        public int stateid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("state-name")]
        public string statename;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SiteJournalInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("items-number")]
        public int itemsnumber;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("last-item-date")]
        public long lastitemdate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SiteJournalDealsInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-events-count")]
        public int dealeventscount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-last-event-time")]
        public long deallasteventtime;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SiteJournalDealsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-event-id")]
        public long dealeventid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-event-type")]
        public int dealeventtype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-event-time")]
        public long dealeventtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-id")]
        public long dealid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-transaction-id")]
        public long dealtransactionid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-seller-id")]
        public int dealsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-item-id")]
        public long dealitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-buyer-id")]
        public int dealbuyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-quantity")]
        public int dealquantity;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SiteJournal {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("row-id")]
        public long rowid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("change-type")]
        public string changetype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("change-date")]
        public long changedate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("current-price")]
        public float currentprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-seller-id")]
        public long itemsellerid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ShopsTagTypeStruct {
        
        /// <remarks/>
        public int id;
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ShipmentPriceTypeStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-price-type-id")]
        public int shipmentpricetypeid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-price-type-name")]
        public string shipmentpricetypename;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ShipmentPaymentInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-id")]
        public int shipmentid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-name")]
        public string shipmentname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-amount")]
        public float shipmentamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-payment-type")]
        public int shipmentpaymenttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-item-ids")]
        public long[] shipmentitemids;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellerPaymentInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-payment-info-pza")]
        public ShipmentPaymentInfoStruct[] shipmentpaymentinfopza;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-payment-info-non-pza")]
        public ShipmentPaymentInfoStruct[] shipmentpaymentinfononpza;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellerShipmentDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-id")]
        public int sellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-payment-info")]
        public SellerPaymentInfoStruct sellerpaymentinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-other-shipment-is-active")]
        public int sellerothershipmentisactive;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("general-delivery-payment-info")]
        public ShipmentPaymentInfoStruct[] generaldeliverypaymentinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RelatedItemsShipmentDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("seller-shipment-data")]
        public SellerShipmentDataStruct[] sellershipmentdata;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ShipmentTimeStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-time-from")]
        public int shipmenttimefrom;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-time-to")]
        public int shipmenttimeto;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ShipmentDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-id")]
        public int shipmentid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-name")]
        public string shipmentname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-type")]
        public int shipmenttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("shipment-time")]
        public ShipmentTimeStruct shipmenttime;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingReasonStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-id")]
        public int sellratingreasonid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-title")]
        public string sellratingreasontitle;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-id")]
        public int sellratinggroupid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
        public string sellratinggrouptitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reasons")]
        public SellRatingReasonStruct[] sellratingreasons;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellFormFieldsForCategoryStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-fields-list")]
        public SellFormType[] sellformfieldslist;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-fields-version-key")]
        public long sellformfieldsversionkey;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-fields-component-value")]
        public string sellformfieldscomponentvalue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellFormType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-id")]
        public int sellformid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-title")]
        public string sellformtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-cat")]
        public int sellformcat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-type")]
        public int sellformtype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-res-type")]
        public int sellformrestype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-def-value")]
        public int sellformdefvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-opt")]
        public int sellformopt;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-pos")]
        public int sellformpos;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-length")]
        public int sellformlength;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-min-value")]
        public string sellminvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-max-value")]
        public string sellmaxvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-desc")]
        public string sellformdesc;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-opts-values")]
        public string sellformoptsvalues;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-field-desc")]
        public string sellformfielddesc;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-param-id")]
        public int sellformparamid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-param-values")]
        public string sellformparamvalues;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-parent-id")]
        public int sellformparentid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-parent-value")]
        public string sellformparentvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-unit")]
        public string sellformunit;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-form-options")]
        public int sellformoptions;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RelatedItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail")]
        public string itemthumbnail;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public float itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bought-count")]
        public int itemboughtcount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-amount")]
        public float itemamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payment-type")]
        public int itempaymenttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-seller-id")]
        public long itemsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-seller-name")]
        public string itemsellername;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-invoice-info")]
        public int iteminvoiceinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RelatedItemsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("related-items-info")]
        public RelatedItemStruct[] relateditemsinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("related-items-amount")]
        public float relateditemsamount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RefundDetailsType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-id")]
        public int refundid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-status")]
        public string refundstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-quantity")]
        public int refundquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("created-date")]
        public System.DateTime createddate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("consider-date")]
        public System.DateTime considerdate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RefundListType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-id")]
        public long dealid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-date")]
        public System.DateTime dealdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
        public int buyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("buyer-login")]
        public string buyerlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("bids-count")]
        public int bidscount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("quantity-type")]
        public string quantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-details")]
        public RefundDetailsType refunddetails;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FilterRelationType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("relation-and")]
        public string[] relationand;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("relation-or")]
        public string[] relationor;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("relation-exclude")]
        public string[] relationexclude;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FilterValueType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-value-id")]
        public string filtervalueid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-value-name")]
        public string filtervaluename;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-value-count")]
        public int filtervaluecount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FiltersListType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-id")]
        public string filterid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-name")]
        public string filtername;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-type")]
        public string filtertype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-control-type")]
        public string filtercontroltype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-data-type")]
        public string filterdatatype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-is-range")]
        public bool filterisrange;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-array-size")]
        public int filterarraysize;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-values")]
        public FilterValueType[] filtervalues;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-relations")]
        public FilterRelationType filterrelations;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RefundsDealsListType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-id")]
        public long dealid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-date")]
        public System.DateTime dealdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("time-left")]
        public int timeleft;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
        public int buyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("buyer-login")]
        public string buyerlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("bids-count")]
        public int bidscount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("quantity-type")]
        public string quantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payment-status")]
        public string paymentstatus;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RangeValueType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("range-value-min")]
        public string rangevaluemin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("range-value-max")]
        public string rangevaluemax;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FilterOptionsType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-id")]
        public string filterid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-value-id")]
        public string[] filtervalueid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-value-range")]
        public RangeValueType filtervaluerange;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyItemInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-post-buy-form-info")]
        public int itempostbuyforminfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-id")]
        public long postbuyformid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-items")]
        public PostBuyFormItemStruct[] postbuyformitems;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-buyer-id")]
        public long postbuyformbuyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-amount")]
        public float postbuyformamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-postage-amount")]
        public float postbuyformpostageamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-invoice-option")]
        public int postbuyforminvoiceoption;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-msg-to-seller")]
        public string postbuyformmsgtoseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-invoice-data")]
        public PostBuyFormAddressStruct postbuyforminvoicedata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-address")]
        public PostBuyFormAddressStruct postbuyformshipmentaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-type")]
        public string postbuyformpaytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-id")]
        public long postbuyformpayid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-status")]
        public string postbuyformpaystatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-init")]
        public string postbuyformdateinit;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-recv")]
        public string postbuyformdaterecv;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-cancel")]
        public string postbuyformdatecancel;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-id")]
        public int postbuyformshipmentid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-gd-address")]
        public PostBuyFormAddressStruct postbuyformgdaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-tracking")]
        public PostBuyFormShipmentTrackingStruct[] postbuyformshipmenttracking;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-surcharges-list")]
        public long[] postbuyformsurchargeslist;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-gd-additional-info")]
        public string postbuyformgdadditionalinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-payment-amount")]
        public float postbuyformpaymentamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-sent-by-seller")]
        public int postbuyformsentbyseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-buyer-login")]
        public string postbuyformbuyerlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-buyer-email")]
        public string postbuyformbuyeremail;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-quantity")]
        public int postbuyformitquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-amount")]
        public float postbuyformitamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-id")]
        public long postbuyformitid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-title")]
        public string postbuyformittitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-country")]
        public int postbuyformitcountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-price")]
        public float postbuyformitprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-deals")]
        public PostBuyFormItemDealsStruct[] postbuyformitdeals;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormItemDealsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-id")]
        public long dealid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-final-price")]
        public float dealfinalprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-quantity")]
        public int dealquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-date")]
        public System.DateTime dealdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-was-discounted")]
        public bool dealwasdiscounted;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-variant")]
        public PostBuyFormItemDealsVariantStruct dealvariant;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormItemDealsVariantStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("variant-name")]
        public string variantname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("variant-value")]
        public string variantvalue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormAddressStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-country")]
        public int postbuyformadrcountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-street")]
        public string postbuyformadrstreet;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-postcode")]
        public string postbuyformadrpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-city")]
        public string postbuyformadrcity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-full-name")]
        public string postbuyformadrfullname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-company")]
        public string postbuyformadrcompany;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-phone")]
        public string postbuyformadrphone;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-nip")]
        public string postbuyformadrnip;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-created-date")]
        public string postbuyformcreateddate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-type")]
        public int postbuyformadrtype;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormShipmentTrackingStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-operator-id")]
        public int postbuyformoperatorid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-package-id")]
        public string postbuyformpackageid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-package-status")]
        public string postbuyformpackagestatus;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormSellersStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-seller-id")]
        public int postbuyformsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-seller-name")]
        public string postbuyformsellername;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-items")]
        public PostBuyFormItemStruct[] postbuyformitems;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-id")]
        public int postbuyformshipmentid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-postage-amount")]
        public float postbuyformpostageamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-msg-to-seller")]
        public string postbuyformmsgtoseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-amount")]
        public float postbuyformamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-surcharges-list")]
        public long[] postbuyformsurchargeslist;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-tracking")]
        public PostBuyFormShipmentTrackingStruct[] postbuyformshipmenttracking;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-gd-address")]
        public PostBuyFormAddressStruct postbuyformgdaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-gd-additional-info")]
        public string postbuyformgdadditionalinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-sent-by-seller")]
        public int postbuyformsentbyseller;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormForBuyersDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-id")]
        public long postbuyformid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-buyer-id")]
        public int postbuyformbuyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-sellers")]
        public PostBuyFormSellersStruct[] postbuyformsellers;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-total-amount")]
        public float postbuyformtotalamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-invoice-option")]
        public int postbuyforminvoiceoption;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-invoice-data")]
        public PostBuyFormAddressStruct postbuyforminvoicedata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-address")]
        public PostBuyFormAddressStruct postbuyformshipmentaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-type")]
        public string postbuyformpaytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-id")]
        public long postbuyformpayid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-status")]
        public string postbuyformpaystatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-init")]
        public string postbuyformdateinit;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-recv")]
        public string postbuyformdaterecv;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-cancel")]
        public string postbuyformdatecancel;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("post-buy-form-payment-amount")]
        public float postbuyformpaymentamount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserSentToDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public long userid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
        public string userfirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
        public string userlastname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-company")]
        public string usercompany;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
        public int usercountryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
        public string userpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-city")]
        public string usercity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-address")]
        public string useraddress;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserPostBuyDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-data")]
        public UserDataStruct userdata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-sent-to-data")]
        public UserSentToDataStruct usersenttodata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-bank-accounts")]
        public string[] userbankaccounts;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-second-address")]
        public CompanySecondAddressStruct companysecondaddress;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public long userid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-login")]
        public string userlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-rating")]
        public int userrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
        public string userfirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
        public string userlastname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-maiden-name")]
        public string usermaidenname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-company")]
        public string usercompany;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
        public int usercountryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-state-id")]
        public int userstateid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
        public string userpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-city")]
        public string usercity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-address")]
        public string useraddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-email")]
        public string useremail;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-phone")]
        public string userphone;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-phone2")]
        public string userphone2;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-ss-status")]
        public int userssstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("site-country-id")]
        public int sitecountryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-junior-status")]
        public int userjuniorstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-birth-date")]
        public long userbirthdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-has-shop")]
        public int userhasshop;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-company-icon")]
        public int usercompanyicon;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-is-allegro-standard")]
        public int userisallegrostandard;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CompanySecondAddressStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-worker-first-name")]
        public string companyworkerfirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-worker-last-name")]
        public string companyworkerlastname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-address")]
        public string companyaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-postcode")]
        public string companypostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-city")]
        public string companycity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-country-id")]
        public int companycountryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-state-id")]
        public int companystateid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemPostBuyDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("users-post-buy-data")]
        public UserPostBuyDataStruct[] userspostbuydata;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentMethodStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payment-method-id")]
        public string paymentmethodid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payment-method-name")]
        public string paymentmethodname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payment-method-image")]
        public string paymentmethodimage;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payment-method-usage")]
        public int paymentmethodusage;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class BillingDataType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-id")]
        public int billingid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-type")]
        public string billingtype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-fixperc")]
        public string billingfixperc;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-name")]
        public string billingname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-range-from")]
        public string billingrangefrom;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-range-to")]
        public string billingrangeto;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-cat")]
        public string billingcat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-rate")]
        public string billingrate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("billing-auction-type")]
        public int billingauctiontype;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class WonItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bought-quantity")]
        public int itemboughtquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-left-quantity")]
        public int itemleftquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time")]
        public long itemendtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time-left")]
        public string itemendtimeleft;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-seller")]
        public UserInfoStruct itemseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bidders-counter")]
        public int itembidderscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-views-counter")]
        public int itemviewscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemPriceStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("price-type")]
        public int pricetype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("price-value")]
        public float pricevalue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public int userid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-login")]
        public string userlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-rating")]
        public int userrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-icons")]
        public int usericons;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-country")]
        public int usercountry;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SoldItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-quantity")]
        public int itemstartquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-sold-quantity")]
        public int itemsoldquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-time")]
        public long itemstarttime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time")]
        public long itemendtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time-left")]
        public string itemendtimeleft;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bidders-counter")]
        public int itembidderscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-highest-bidder")]
        public UserInfoStruct itemhighestbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-watchers-counter")]
        public int itemwatcherscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-views-counter")]
        public int itemviewscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-duration-info")]
        public DurationInfoStruct itemdurationinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class DurationInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("duration-type")]
        public int durationtype;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SoldFilterOptionsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-format")]
        public int filterformat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-from-end")]
        public int filterfromend;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-auto-listing")]
        public int filterautolisting;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-price")]
        public FilterPriceStruct filterprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-duration-type")]
        public int filterdurationtype;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FilterPriceStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-price-from")]
        public float filterpricefrom;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-price-to")]
        public float filterpriceto;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingStatsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
        public string sellratinggrouptitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-stats")]
        public string sellratinggroupstats;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingAveragePerMonthStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-month")]
        public string sellratingmonth;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-average-values")]
        public SellRatingStatsStruct[] sellratingaveragevalues;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingReasonSumStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-title")]
        public string sellratingreasontitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-count")]
        public int sellratingreasoncount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingDetailStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
        public string sellratinggrouptitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reasons-summary")]
        public SellRatingReasonSumStruct[] sellratingreasonssummary;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingAverageStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
        public string sellratinggrouptitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-average")]
        public float sellratinggroupaverage;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-quantity")]
        public int itemstartquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-sold-quantity")]
        public int itemsoldquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-time")]
        public long itemstarttime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time")]
        public long itemendtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time-left")]
        public string itemendtimeleft;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bidders-counter")]
        public int itembidderscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-highest-bidder")]
        public UserInfoStruct itemhighestbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-watchers-counter")]
        public int itemwatcherscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-views-counter")]
        public int itemviewscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-duration-info")]
        public DurationInfoStruct itemdurationinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellFilterOptionsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-format")]
        public int filterformat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-bids")]
        public int filterbids;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-to-end")]
        public int filtertoend;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-from-start")]
        public int filterfromstart;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-auto-listing")]
        public int filterautolisting;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-price")]
        public FilterPriceStruct filterprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-duration-type")]
        public int filterdurationtype;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PayoutRefundToStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("tranasction-id")]
        public long tranasctionid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-id")]
        public long refundid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-reason")]
        public string refundreason;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("to-user-id")]
        public long touserid;
        
        /// <remarks/>
        public float amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("paid-date")]
        public string paiddate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PayoutRefundFromStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("tranasction-id")]
        public long tranasctionid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-id")]
        public long refundid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("refund-reason")]
        public string refundreason;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("from-user-id")]
        public long fromuserid;
        
        /// <remarks/>
        public float amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("paid-date")]
        public string paiddate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PayoutPaymentsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("tranasction-id")]
        public long tranasctionid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-name")]
        public string username;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public long userid;
        
        /// <remarks/>
        public float amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("transport-amount")]
        public float transportamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("total-amount")]
        public float totalamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("paid-date")]
        public string paiddate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserPayoutStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-id")]
        public long paytransid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-status")]
        public string paytransstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-amount")]
        public float paytransamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-create-date")]
        public long paytranscreatedate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-recv-date")]
        public long paytransrecvdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-cancel-date")]
        public long paytranscanceldate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-report")]
        public string paytransreport;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserPaymentRefundsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-trans-id")]
        public long payrefundtransid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-it-id")]
        public long payrefunditid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-seller-id")]
        public int payrefundsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-value")]
        public float payrefundvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-reason")]
        public string payrefundreason;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-date")]
        public long payrefunddate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PayoutAutoFrequencyStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("frequency-type")]
        public short frequencytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("frequency-week-value")]
        public short frequencyweekvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("frequency-month-value")]
        public short frequencymonthvalue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PayoutAutoSettingsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-auto-amount")]
        public float payoutautoamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-auto-frequency")]
        public PayoutAutoFrequencyStruct payoutautofrequency;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentsPayoutStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-type")]
        public int payouttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payout-auto-settings")]
        public PayoutAutoSettingsStruct payoutautosettings;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentsUserDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-full-name")]
        public string userfullname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-address")]
        public string useraddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
        public string userpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-city")]
        public string usercity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-country")]
        public int usercountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-phone")]
        public string userphone;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentsInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payments-balance")]
        public float paymentsbalance;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payments-bank-account")]
        public string paymentsbankaccount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payments-user-data")]
        public PaymentsUserDataStruct paymentsuserdata;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payments-payout")]
        public PaymentsPayoutStruct paymentspayout;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("payments-notifications")]
        public int paymentsnotifications;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentItemsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-id")]
        public long paytransitid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-name")]
        public string paytransitname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-count")]
        public int paytransitcount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-price")]
        public float paytransitprice;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentSellersStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-seller-id")]
        public int paytranssellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-seller-name")]
        public string paytranssellername;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-items")]
        public PaymentItemsStruct[] paytransitems;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-seller-postage-amount")]
        public float paytranssellerpostageamount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserPaymentStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-id")]
        public long paytransid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-sellers")]
        public PaymentSellersStruct[] paytranssellers;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-type")]
        public string paytranstype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-status")]
        public string paytransstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-amount")]
        public float paytransamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-create-date")]
        public long paytranscreatedate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-price")]
        public float paytransprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-postage-amount")]
        public float paytranspostageamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-incomplete")]
        public int paytransincomplete;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class NotWonItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-left-quantity")]
        public int itemleftquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time")]
        public long itemendtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time-left")]
        public string itemendtimeleft;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-seller")]
        public UserInfoStruct itemseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bidders-counter")]
        public int itembidderscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-highest-bidder")]
        public UserInfoStruct itemhighestbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-views-counter")]
        public int itemviewscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class NotSoldItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-quantity")]
        public int itemstartquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-time")]
        public long itemstarttime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time")]
        public long itemendtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bidders-counter")]
        public int itembidderscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-highest-bidder")]
        public UserInfoStruct itemhighestbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-watchers-counter")]
        public int itemwatcherscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-views-counter")]
        public int itemviewscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class NotSoldFilterOptionsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-format")]
        public int filterformat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-from-end")]
        public int filterfromend;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-auto-listing")]
        public int filterautolisting;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-price")]
        public FilterPriceStruct filterprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-duration-type")]
        public int filterdurationtype;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserIncomingPaymentRefundsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-trans-id")]
        public long payrefundtransid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-it-id")]
        public long payrefunditid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-buyer-id")]
        public int payrefundbuyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-value")]
        public float payrefundvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-reason")]
        public string payrefundreason;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-refund-date")]
        public long payrefunddate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PaymentDetailsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-details-it-id")]
        public long paytransdetailsitid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-details-price")]
        public float paytransdetailsprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-details-count")]
        public int paytransdetailscount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserIncomingPaymentStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-id")]
        public long paytransid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-id")]
        public long paytransitid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-buyer-id")]
        public int paytransbuyerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-type")]
        public string paytranstype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-status")]
        public string paytransstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-amount")]
        public float paytransamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-create-date")]
        public long paytranscreatedate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-recv-date")]
        public long paytransrecvdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-price")]
        public float paytransprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-count")]
        public int paytranscount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-postage-amount")]
        public float paytranspostageamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-details")]
        public PaymentDetailsStruct[] paytransdetails;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-incomplete")]
        public int paytransincomplete;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-trans-main-id")]
        public long paytransmainid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FutureItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-quantity")]
        public int itemstartquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-start-time")]
        public long itemstarttime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-status")]
        public int itemstatus;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FutureFilterOptionsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("filter-format")]
        public int filterformat;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RelatedPersonsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("spouse-first-name")]
        public string spousefirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("spouse-last-name")]
        public string spouselastname;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class AlcoholDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-opening-date")]
        public string alcoholopeningdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-expiration-date")]
        public string alcoholexpirationdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-name")]
        public string alcoholshopname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-address")]
        public string alcoholshopaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-postcode")]
        public string alcoholshoppostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-city")]
        public string alcoholshopcity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-commune")]
        public string alcoholshopcommune;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-country-id")]
        public int alcoholshopcountryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-shop-state-id")]
        public int alcoholshopstateid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-permit-number")]
        public string alcoholpermitnumber;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-permit-authority")]
        public string alcoholpermitauthority;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("alcohol-permit-info")]
        public string alcoholpermitinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PharmacyDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-opening-date")]
        public string pharmacyopeningdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-expiration-date")]
        public string pharmacyexpirationdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-name")]
        public string pharmacyname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-pharmacist-full-name")]
        public string pharmacypharmacistfullname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-address")]
        public string pharmacyaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-postcode")]
        public string pharmacypostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-city")]
        public string pharmacycity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-commune")]
        public string pharmacycommune;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-country-id")]
        public int pharmacycountryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-state-id")]
        public int pharmacystateid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-permit-number")]
        public string pharmacypermitnumber;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pharmacy-permit-info")]
        public string pharmacypermitinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CompanyExtraDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-type")]
        public string companytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-nip")]
        public string companynip;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-regon")]
        public string companyregon;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-krs")]
        public string companykrs;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-activity-sort")]
        public string companyactivitysort;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class InvoiceDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-name")]
        public string companyname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-nip")]
        public string companynip;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class BidItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-title")]
        public string itemtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-thumbnail-url")]
        public string itemthumbnailurl;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-price")]
        public ItemPriceStruct[] itemprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bid-quantity")]
        public int itembidquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-left-quantity")]
        public int itemleftquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-quantity-type")]
        public int itemquantitytype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time")]
        public long itemendtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-end-time-left")]
        public string itemendtimeleft;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-seller")]
        public UserInfoStruct itemseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-bidders-counter")]
        public int itembidderscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-highest-bidder")]
        public UserInfoStruct itemhighestbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-category-id")]
        public int itemcategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-views-counter")]
        public int itemviewscounter;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-note")]
        public string itemnote;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-special-info")]
        public int itemspecialinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-shop-info")]
        public int itemshopinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public long itemproductinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payu-info")]
        public int itempayuinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SortOptionsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sort-type")]
        public int sorttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sort-order")]
        public int sortorder;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class AddressInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("address-type")]
        public int addresstype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("address-user-data")]
        public AddressUserDataStruct addressuserdata;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class MessageToBuyerStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("message-seller-id")]
        public int messagesellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("message-content")]
        public string messagecontent;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ProductParametersStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-parameter-name")]
        public string productparametername;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-parameter-values")]
        public string[] productparametervalues;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-parameter-description")]
        public string productparameterdescription;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ProductParametersGroupStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-parameters-group-name")]
        public string productparametersgroupname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-parameters-list")]
        public ProductParametersStruct[] productparameterslist;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ProductStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-id")]
        public long productid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-name")]
        public string productname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-description")]
        public string productdescription;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-images-list")]
        public string[] productimageslist;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("product-parameters-group-list")]
        public ProductParametersGroupStruct[] productparametersgrouplist;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CompanyInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-first-name")]
        public string companyfirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-last-name")]
        public string companylastname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-name")]
        public string companyname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-address")]
        public string companyaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-postcode")]
        public string companypostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-city")]
        public string companycity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("company-nip")]
        public string companynip;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemPaymentOptions {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-transfer")]
        public int payoptiontransfer;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-on-delivery")]
        public int payoptionondelivery;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-allegro-pay")]
        public int payoptionallegropay;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-see-desc")]
        public int payoptionseedesc;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-payu")]
        public int payoptionpayu;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-escrow")]
        public int payoptionescrow;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("pay-option-qiwi")]
        public int payoptionqiwi;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FulfillmentTimeStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fulfillment-time-from")]
        public int fulfillmenttimefrom;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fulfillment-time-to")]
        public int fulfillmenttimeto;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostageStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-amount")]
        public float postageamount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-amount-add")]
        public float postageamountadd;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-pack-size")]
        public int postagepacksize;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-id")]
        public int postageid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-free-shipping")]
        public int postagefreeshipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-free-return")]
        public int postagefreereturn;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("postage-fulfillment-time")]
        public FulfillmentTimeStruct postagefulfillmenttime;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class AttribStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("attrib-name")]
        public string attribname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("attrib-values")]
        public string[] attribvalues;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemCatList {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-level")]
        public int catlevel;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-id")]
        public long catid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-name")]
        public string catname;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-id")]
        public long itid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-country")]
        public int itcountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-name")]
        public string itname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-price")]
        public float itprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
        public int itbidcount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
        public long itendingtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
        public long itsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-login")]
        public string itsellerlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-rating")]
        public int itsellerrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
        public long itstartingtime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-starting-price")]
        public float itstartingprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-quantity")]
        public int itquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
        public int itfotocount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-reserve-price")]
        public float itreserveprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-location")]
        public string itlocation;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
        public float itbuynowprice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-buy-now-active")]
        public int itbuynowactive;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-high-bidder")]
        public int ithighbidder;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-high-bidder-login")]
        public string ithighbidderlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-description")]
        public string itdescription;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-options")]
        public int itoptions;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-state")]
        public int itstate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-eco")]
        public int itiseco;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-hit-count")]
        public long ithitcount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-postcode")]
        public string itpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-vat-invoice")]
        public int itvatinvoice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-bank-account1")]
        public string itbankaccount1;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-bank-account2")]
        public string itbankaccount2;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-starting-quantity")]
        public int itstartingquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-for-guests")]
        public int itisforguests;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-has-product")]
        public int ithasproduct;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-order-fulfillment-time")]
        public int itorderfulfillmenttime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-ending-info")]
        public int itendinginfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-allegro-standard")]
        public int itisallegrostandard;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-new-used")]
        public int itisnewused;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-brand-zone")]
        public int itisbrandzone;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-duration-info")]
        public DurationInfoStruct itdurationinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-is-fulfillment-time-active")]
        public int itisfulfillmenttimeactive;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-info")]
        public ItemInfo iteminfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-cats")]
        public ItemCatList[] itemcats;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-images")]
        public ItemImageList[] itemimages;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-attribs")]
        public AttribStruct[] itemattribs;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-postage-options")]
        public PostageStruct[] itempostageoptions;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-payment-options")]
        public ItemPaymentOptions itempaymentoptions;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-company-info")]
        public CompanyInfoStruct itemcompanyinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-product-info")]
        public ProductStruct itemproductinfo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemImageList {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("image-type")]
        public int imagetype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("image-url")]
        public string imageurl;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemImagesStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-images")]
        public ItemImageList[] itemimages;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemGetImage {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-id")]
        public long itid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
        public long itsellerid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
        public int itfotocount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemTemplateListStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-id")]
        public int itemtemplateid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-name")]
        public string itemtemplatename;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-fields")]
        public FieldsValue[] itemtemplatefields;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FieldsValue {
        
        /// <remarks/>
        public int fid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-string")]
        public string fvaluestring;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-int")]
        public int fvalueint;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-float")]
        public float fvaluefloat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-image", DataType="base64Binary")]
        public byte[] fvalueimage;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-datetime")]
        public float fvaluedatetime;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-date")]
        public string fvaluedate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-int")]
        public RangeIntValueStruct fvaluerangeint;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-float")]
        public RangeFloatValueStruct fvaluerangefloat;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-date")]
        public RangeDateValueStruct fvaluerangedate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RangeIntValueStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-int-min")]
        public int fvaluerangeintmin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-int-max")]
        public int fvaluerangeintmax;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RangeFloatValueStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-float-min")]
        public float fvaluerangefloatmin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-float-max")]
        public float fvaluerangefloatmax;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class RangeDateValueStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-date-min")]
        public string fvaluerangedatemin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fvalue-range-date-max")]
        public string fvaluerangedatemax;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemTemplatesStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-list")]
        public ItemTemplateListStruct[] itemtemplatelist;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-incorrect-ids")]
        public int[] itemtemplateincorrectids;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FilledPostBuyFormsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("transaction-ids")]
        public long[] transactionids;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FeedbackList {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-id")]
        public int fid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-item-id")]
        public long fitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-from-id")]
        public int ffromid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-to-id")]
        public int ftoid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-date")]
        public long fdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-type")]
        public string ftype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-desc")]
        public string fdesc;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-correct-date")]
        public long fcorrectdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-correct-text")]
        public string fcorrecttext;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-receiver-type")]
        public string freceivertype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-user-login")]
        public string fuserlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-user-rating")]
        public string fuserrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-user-country")]
        public string fusercountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-user-blocked")]
        public int fuserblocked;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-user-sseller")]
        public int fusersseller;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("f-cancelled")]
        public long fcancelled;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FavouritesSellersStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-fav-user-id")]
        public int sfavuserid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-subscription-status")]
        public int ssubscriptionstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-position")]
        public int sposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-buy-now-only")]
        public int sbuynowonly;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FavouritesCategoriesStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-category-id")]
        public int scategoryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-subscription-status")]
        public int ssubscriptionstatus;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-position")]
        public int sposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("s-buy-now-only")]
        public int sbuynowonly;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class DealsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-id")]
        public long dealid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-date")]
        public long dealdate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-quantity")]
        public int dealquantity;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-amount-original")]
        public float dealamountoriginal;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("deal-amount-discounted")]
        public float dealamountdiscounted;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CountryInfoType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("country-id")]
        public int countryid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("country-name")]
        public string countryname;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CatInfoType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-id")]
        public int catid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-name")]
        public string catname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-parent")]
        public int catparent;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-position")]
        public int catposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-is-product-catalogue-enabled")]
        public int catisproductcatalogueenabled;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CategoryData {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-id")]
        public int catid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-parent")]
        public int catparent;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-country")]
        public int catcountry;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-level")]
        public int catlevel;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-is-leaf")]
        public int catisleaf;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-name")]
        public string catname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("cat-options")]
        public int catoptions;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class BlackListStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public long userid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-login")]
        public string userlogin;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-rating")]
        public int userrating;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-country")]
        public int usercountry;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class BidListStruct2 {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("bids-array")]
        public string[] bidsarray;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FinishFailureStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("finish-item-id")]
        public long finishitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("finish-error-code")]
        public string finisherrorcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("finish-error-message")]
        public string finisherrormessage;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FinishItemsStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("finish-item-id")]
        public long finishitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("finish-cancel-all-bids")]
        public int finishcancelallbids;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("finish-cancel-reason")]
        public string finishcancelreason;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FeedbackResultStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
        public long feitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-id")]
        public int feid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-fault-code")]
        public string fefaultcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-fault-desc")]
        public string fefaultdesc;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class FeedbackManyStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
        public long feitemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-use-comment-template")]
        public int feusecommenttemplate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")]
        public int fetouserid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-comment")]
        public string fecomment;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-comment-type")]
        public string fecommenttype;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-op")]
        public int feop;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("fe-rating")]
        public SellRatingEstimationStruct[] ferating;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class SellRatingEstimationStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-id")]
        public int sellratinggroupid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-estimation")]
        public int sellratinggroupestimation;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-id")]
        public int sellratingreasonid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class CreatedItemTemplateStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-template-id")]
        public int itemtemplateid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemDescriptionStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("description-result")]
        public string descriptionresult;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class AmountStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("amount-value")]
        public float amountvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("amount-currency-sign")]
        public string amountcurrencysign;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ItemSurchargeStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("surcharge-description")]
        public string surchargedescription;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("surcharge-amount")]
        public AmountStruct surchargeamount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class ChangedItemStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-id")]
        public long itemid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-fields")]
        public FieldsValue[] itemfields;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("item-surcharge")]
        public ItemSurchargeStruct[] itemsurcharge;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class TagNameStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("tag-name")]
        public string tagname;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class VariantQuantityStruct {
        
        /// <remarks/>
        public int mask;
        
        /// <remarks/>
        public int quantity;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class VariantStruct {
        
        /// <remarks/>
        public int fid;
        
        /// <remarks/>
        public VariantQuantityStruct[] quantities;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PharmacyRecipientDataStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("recipient-first-name")]
        public string recipientfirstname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("recipient-last-name")]
        public string recipientlastname;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("recipient-address")]
        public string recipientaddress;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("recipient-postcode")]
        public string recipientpostcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("recipient-city")]
        public string recipientcity;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserBlackListAddResultStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public int userid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("add-to-black-list-result")]
        public int addtoblacklistresult;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("add-to-black-list-err-code")]
        public string addtoblacklisterrcode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("add-to-black-list-err-msg")]
        public string addtoblacklisterrmsg;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class UserBlackListStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-id")]
        public int userid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("user-black-list-note")]
        public string userblacklistnote;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
    public partial class PostBuyFormPackageInfoStruct {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("package-ids-added")]
        public string[] packageidsadded;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("package-ids-not-added-incorrect-operator-id")]
        public string[] packageidsnotaddedincorrectoperatorid;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("package-ids-not-added-incorrect-package-id")]
        public string[] packageidsnotaddedincorrectpackageid;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doAddDescToItemsCompletedEventHandler(object sender, doAddDescToItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAddDescToItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doAddDescToItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long[] arrayitemsdesctolong {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long[] arrayitemsnotfound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doAddPackageInfoToPostBuyFormCompletedEventHandler(object sender, doAddPackageInfoToPostBuyFormCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAddPackageInfoToPostBuyFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doAddPackageInfoToPostBuyFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PostBuyFormPackageInfoStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostBuyFormPackageInfoStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doAddToBlackListCompletedEventHandler(object sender, doAddToBlackListCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAddToBlackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doAddToBlackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserBlackListAddResultStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserBlackListAddResultStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doBidItemCompletedEventHandler(object sender, doBidItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doCancelBidItemCompletedEventHandler(object sender, doCancelBidItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCancelBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCancelBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public int[] cancelledbids {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public int[] notcancelledbids {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doCancelTransactionCompletedEventHandler(object sender, doCancelTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCancelTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCancelTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doChangeItemFieldsCompletedEventHandler(object sender, doChangeItemFieldsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doChangeItemFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doChangeItemFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ChangedItemStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangedItemStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doChangePriceItemCompletedEventHandler(object sender, doChangePriceItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doChangePriceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doChangePriceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long itemid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doChangeQuantityItemCompletedEventHandler(object sender, doChangeQuantityItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doChangeQuantityItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doChangeQuantityItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long itemid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public int itemquantityleft {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public int itemquantitysold {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doCheckItemDescriptionCompletedEventHandler(object sender, doCheckItemDescriptionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCheckItemDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCheckItemDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemDescriptionStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemDescriptionStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doCheckNewAuctionExtCompletedEventHandler(object sender, doCheckNewAuctionExtCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCheckNewAuctionExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCheckNewAuctionExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public string itempricedesc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public int itemisallegrostandard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doCreateItemTemplateCompletedEventHandler(object sender, doCreateItemTemplateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCreateItemTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCreateItemTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CreatedItemTemplateStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreatedItemTemplateStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doFeedbackCompletedEventHandler(object sender, doFeedbackCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doFeedbackManyCompletedEventHandler(object sender, doFeedbackManyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doFeedbackManyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doFeedbackManyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FeedbackResultStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedbackResultStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doFinishItemCompletedEventHandler(object sender, doFinishItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doFinishItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doFinishItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doFinishItemsCompletedEventHandler(object sender, doFinishItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doFinishItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doFinishItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public FinishFailureStruct[] finishitemsfailed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FinishFailureStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetAdminUserLicenceDateCompletedEventHandler(object sender, doGetAdminUserLicenceDateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetAdminUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetAdminUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetBidItem2CompletedEventHandler(object sender, doGetBidItem2CompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetBidItem2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetBidItem2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BidListStruct2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BidListStruct2[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetBlackListUsersCompletedEventHandler(object sender, doGetBlackListUsersCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetBlackListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetBlackListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BlackListStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BlackListStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetCategoryPathCompletedEventHandler(object sender, doGetCategoryPathCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetCategoryPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetCategoryPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CategoryData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryData[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetCatsDataCompletedEventHandler(object sender, doGetCatsDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetCatsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetCatsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CatInfoType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatInfoType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetCatsDataCountCompletedEventHandler(object sender, doGetCatsDataCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetCatsDataCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetCatsDataCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetCatsDataLimitCompletedEventHandler(object sender, doGetCatsDataLimitCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetCatsDataLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetCatsDataLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CatInfoType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatInfoType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetCountriesCompletedEventHandler(object sender, doGetCountriesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CountryInfoType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryInfoType[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetDealsCompletedEventHandler(object sender, doGetDealsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetDealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetDealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public DealsStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DealsStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetFavouriteCategoriesCompletedEventHandler(object sender, doGetFavouriteCategoriesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetFavouriteCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetFavouriteCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FavouritesCategoriesStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FavouritesCategoriesStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetFavouriteSellersCompletedEventHandler(object sender, doGetFavouriteSellersCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetFavouriteSellersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetFavouriteSellersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FavouritesSellersStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FavouritesSellersStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetFeedbackCompletedEventHandler(object sender, doGetFeedbackCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FeedbackList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedbackList[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public int feedbackcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetFilledPostBuyFormsCompletedEventHandler(object sender, doGetFilledPostBuyFormsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetFilledPostBuyFormsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetFilledPostBuyFormsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FilledPostBuyFormsStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilledPostBuyFormsStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetItemFieldsCompletedEventHandler(object sender, doGetItemFieldsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetItemFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetItemFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FieldsValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldsValue[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetItemTemplatesCompletedEventHandler(object sender, doGetItemTemplatesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetItemTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetItemTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemTemplatesStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemTemplatesStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetItemsImagesCompletedEventHandler(object sender, doGetItemsImagesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetItemsImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetItemsImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemImagesStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemImagesStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetItemsInfoCompletedEventHandler(object sender, doGetItemsInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetItemsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetItemsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemInfoStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemInfoStruct[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long[] arrayitemsnotfound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long[] arrayitemsadminkilled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMessageToBuyerCompletedEventHandler(object sender, doGetMessageToBuyerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMessageToBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMessageToBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public MessageToBuyerStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageToBuyerStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyAddressesCompletedEventHandler(object sender, doGetMyAddressesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressInfoStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressInfoStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyBidItemsCompletedEventHandler(object sender, doGetMyBidItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyBidItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyBidItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public BidItemStruct[] biditemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BidItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyCurrentShipmentPriceTypeCompletedEventHandler(object sender, doGetMyCurrentShipmentPriceTypeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyCurrentShipmentPriceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyCurrentShipmentPriceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyDataCompletedEventHandler(object sender, doGetMyDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserDataStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDataStruct)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public InvoiceDataStruct invoicedata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InvoiceDataStruct)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public CompanyExtraDataStruct companyextradata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyExtraDataStruct)(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public CompanySecondAddressStruct companysecondaddress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanySecondAddressStruct)(this.results[3]));
            }
        }
        
        /// CodeRemarks
        public PharmacyDataStruct pharmacydata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDataStruct)(this.results[4]));
            }
        }
        
        /// CodeRemarks
        public AlcoholDataStruct alcoholdata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcoholDataStruct)(this.results[5]));
            }
        }
        
        /// CodeRemarks
        public RelatedPersonsStruct relatedpersons {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelatedPersonsStruct)(this.results[6]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyFutureItemsCompletedEventHandler(object sender, doGetMyFutureItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyFutureItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyFutureItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public FutureItemStruct[] futureitemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FutureItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyIncomingPaymentsCompletedEventHandler(object sender, doGetMyIncomingPaymentsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyIncomingPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyIncomingPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserIncomingPaymentStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserIncomingPaymentStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyIncomingPaymentsRefundsCompletedEventHandler(object sender, doGetMyIncomingPaymentsRefundsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyIncomingPaymentsRefundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyIncomingPaymentsRefundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserIncomingPaymentRefundsStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserIncomingPaymentRefundsStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyNotSoldItemsCompletedEventHandler(object sender, doGetMyNotSoldItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyNotSoldItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyNotSoldItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public NotSoldItemStruct[] notsolditemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotSoldItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyNotWonItemsCompletedEventHandler(object sender, doGetMyNotWonItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyNotWonItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyNotWonItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public NotWonItemStruct[] notwonitemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotWonItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyPaymentsCompletedEventHandler(object sender, doGetMyPaymentsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserPaymentStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPaymentStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyPaymentsInfoCompletedEventHandler(object sender, doGetMyPaymentsInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyPaymentsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyPaymentsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PaymentsInfoStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentsInfoStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyPaymentsRefundsCompletedEventHandler(object sender, doGetMyPaymentsRefundsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyPaymentsRefundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyPaymentsRefundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserPaymentRefundsStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPaymentRefundsStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyPayoutsCompletedEventHandler(object sender, doGetMyPayoutsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyPayoutsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyPayoutsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public UserPayoutStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPayoutStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyPayoutsDetailsCompletedEventHandler(object sender, doGetMyPayoutsDetailsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyPayoutsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyPayoutsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public PayoutPaymentsStruct[] payments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PayoutPaymentsStruct[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public int refundsfromcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public PayoutRefundFromStruct[] refundfrom {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PayoutRefundFromStruct[])(this.results[3]));
            }
        }
        
        /// CodeRemarks
        public int refundstocount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// CodeRemarks
        public PayoutRefundToStruct[] refundto {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PayoutRefundToStruct[])(this.results[5]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMySellItemsCompletedEventHandler(object sender, doGetMySellItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMySellItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMySellItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public SellItemStruct[] sellitemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMySellRatingCompletedEventHandler(object sender, doGetMySellRatingCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMySellRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMySellRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public SellRatingAverageStruct[] sellratingaverage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellRatingAverageStruct[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public SellRatingDetailStruct[] sellratingdetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellRatingDetailStruct[])(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public SellRatingAveragePerMonthStruct[] sellratingstatspermonth {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellRatingAveragePerMonthStruct[])(this.results[3]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMySoldItemsCompletedEventHandler(object sender, doGetMySoldItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMySoldItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMySoldItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public SoldItemStruct[] solditemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoldItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetMyWonItemsCompletedEventHandler(object sender, doGetMyWonItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetMyWonItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetMyWonItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public WonItemStruct[] wonitemslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WonItemStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetPaymentDataCompletedEventHandler(object sender, doGetPaymentDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetPaymentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetPaymentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BillingDataType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillingDataType[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetPaymentMethodsCompletedEventHandler(object sender, doGetPaymentMethodsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetPaymentMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetPaymentMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PaymentMethodStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethodStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetPostBuyDataCompletedEventHandler(object sender, doGetPostBuyDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetPostBuyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetPostBuyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemPostBuyDataStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemPostBuyDataStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetPostBuyFormsDataForBuyersCompletedEventHandler(object sender, doGetPostBuyFormsDataForBuyersCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetPostBuyFormsDataForBuyersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetPostBuyFormsDataForBuyersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PostBuyFormForBuyersDataStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostBuyFormForBuyersDataStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetPostBuyFormsDataForSellersCompletedEventHandler(object sender, doGetPostBuyFormsDataForSellersCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetPostBuyFormsDataForSellersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetPostBuyFormsDataForSellersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PostBuyFormDataStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostBuyFormDataStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetPostBuyItemInfoCompletedEventHandler(object sender, doGetPostBuyItemInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetPostBuyItemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetPostBuyItemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PostBuyItemInfoStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostBuyItemInfoStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetRefundsDealsCompletedEventHandler(object sender, doGetRefundsDealsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetRefundsDealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetRefundsDealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public RefundsDealsListType[] dealslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefundsDealsListType[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public FiltersListType[] filterslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FiltersListType[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetRefundsListCompletedEventHandler(object sender, doGetRefundsListCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetRefundsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetRefundsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public RefundListType[] refundslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefundListType[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public FiltersListType[] filterslist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FiltersListType[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetRelatedItemsCompletedEventHandler(object sender, doGetRelatedItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetRelatedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetRelatedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public RelatedItemsStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelatedItemsStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellFormAttribsCompletedEventHandler(object sender, doGetSellFormAttribsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellFormAttribsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellFormAttribsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellFormType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellFormType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellFormFieldsCompletedEventHandler(object sender, doGetSellFormFieldsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellFormFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellFormFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellFormType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellFormType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellFormFieldsExtCompletedEventHandler(object sender, doGetSellFormFieldsExtCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellFormFieldsExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellFormFieldsExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellFormType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellFormType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellFormFieldsExtLimitCompletedEventHandler(object sender, doGetSellFormFieldsExtLimitCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellFormFieldsExtLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellFormFieldsExtLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellFormType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellFormType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public int formfieldscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellFormFieldsForCategoryCompletedEventHandler(object sender, doGetSellFormFieldsForCategoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellFormFieldsForCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellFormFieldsForCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellFormFieldsForCategoryStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellFormFieldsForCategoryStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellFormFieldsLimitCompletedEventHandler(object sender, doGetSellFormFieldsLimitCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellFormFieldsLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellFormFieldsLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellFormType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellFormType[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string verstr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public int formfieldscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSellRatingReasonsCompletedEventHandler(object sender, doGetSellRatingReasonsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSellRatingReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSellRatingReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SellRatingInfoStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellRatingInfoStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSessionHandleForWidgetCompletedEventHandler(object sender, doGetSessionHandleForWidgetCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSessionHandleForWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSessionHandleForWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long servertime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetShipmentDataCompletedEventHandler(object sender, doGetShipmentDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetShipmentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetShipmentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ShipmentDataStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipmentDataStruct[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long localversion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetShipmentDataForRelatedItemsCompletedEventHandler(object sender, doGetShipmentDataForRelatedItemsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetShipmentDataForRelatedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetShipmentDataForRelatedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public RelatedItemsShipmentDataStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelatedItemsShipmentDataStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetShipmentPriceTypesCompletedEventHandler(object sender, doGetShipmentPriceTypesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetShipmentPriceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetShipmentPriceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ShipmentPriceTypeStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipmentPriceTypeStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetShopsTagsCompletedEventHandler(object sender, doGetShopsTagsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetShopsTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetShopsTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public ShopsTagTypeStruct[] shopstags {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShopsTagTypeStruct[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSiteJournalCompletedEventHandler(object sender, doGetSiteJournalCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSiteJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSiteJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SiteJournal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteJournal[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSiteJournalDealsCompletedEventHandler(object sender, doGetSiteJournalDealsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSiteJournalDealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSiteJournalDealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SiteJournalDealsStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteJournalDealsStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSiteJournalDealsInfoCompletedEventHandler(object sender, doGetSiteJournalDealsInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSiteJournalDealsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSiteJournalDealsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SiteJournalDealsInfoStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteJournalDealsInfoStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSiteJournalInfoCompletedEventHandler(object sender, doGetSiteJournalInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSiteJournalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSiteJournalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SiteJournalInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteJournalInfo)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetStatesInfoCompletedEventHandler(object sender, doGetStatesInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetStatesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetStatesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public StateInfoStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateInfoStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetSystemTimeCompletedEventHandler(object sender, doGetSystemTimeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetSystemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetSystemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetTransactionsIDsCompletedEventHandler(object sender, doGetTransactionsIDsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetTransactionsIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetTransactionsIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetUserIDCompletedEventHandler(object sender, doGetUserIDCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetUserLicenceDateCompletedEventHandler(object sender, doGetUserLicenceDateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetUserLoginCompletedEventHandler(object sender, doGetUserLoginCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetWaitingFeedbacksCompletedEventHandler(object sender, doGetWaitingFeedbacksCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetWaitingFeedbacksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetWaitingFeedbacksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public WaitFeedbackStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WaitFeedbackStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doGetWaitingFeedbacksCountCompletedEventHandler(object sender, doGetWaitingFeedbacksCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetWaitingFeedbacksCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetWaitingFeedbacksCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doLoginCompletedEventHandler(object sender, doLoginCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long userid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long servertime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doLoginEncCompletedEventHandler(object sender, doLoginEncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doLoginEncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doLoginEncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long userid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long servertime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doLoginWithAccessTokenCompletedEventHandler(object sender, doLoginWithAccessTokenCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doLoginWithAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doLoginWithAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long userid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long servertime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyAccount2CompletedEventHandler(object sender, doMyAccount2CompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyAccount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyAccount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public MyAccountStruct2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyAccountStruct2[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyAccountItemsCountCompletedEventHandler(object sender, doMyAccountItemsCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyAccountItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyAccountItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyBillingCompletedEventHandler(object sender, doMyBillingCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyBillingItemCompletedEventHandler(object sender, doMyBillingItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyBillingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyBillingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemBilling[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemBilling[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public ItemBilling[] endingfees {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemBilling[])(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyContactCompletedEventHandler(object sender, doMyContactCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public MyContactList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyContactList[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyFeedback2CompletedEventHandler(object sender, doMyFeedback2CompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyFeedback2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyFeedback2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public MyFeedbackListStruct2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyFeedbackListStruct2[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doMyFeedback2LimitCompletedEventHandler(object sender, doMyFeedback2LimitCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doMyFeedback2LimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doMyFeedback2LimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public MyFeedbackListStruct2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyFeedbackListStruct2[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doNewAuctionExtCompletedEventHandler(object sender, doNewAuctionExtCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doNewAuctionExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doNewAuctionExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public string iteminfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public int itemisallegrostandard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doQueryAllSysStatusCompletedEventHandler(object sender, doQueryAllSysStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doQueryAllSysStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doQueryAllSysStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SysStatusType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SysStatusType[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doQuerySysStatusCompletedEventHandler(object sender, doQuerySysStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doQuerySysStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doQuerySysStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long verkey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doRemoveFromBlackListCompletedEventHandler(object sender, doRemoveFromBlackListCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRemoveFromBlackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRemoveFromBlackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BlackListResStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BlackListResStruct[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doRemoveItemTemplatesCompletedEventHandler(object sender, doRemoveItemTemplatesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRemoveItemTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRemoveItemTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public RemovedItemTemplatesStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemovedItemTemplatesStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doRequestCancelBidCompletedEventHandler(object sender, doRequestCancelBidCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRequestCancelBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRequestCancelBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doRequestPayoutCompletedEventHandler(object sender, doRequestPayoutCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRequestPayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRequestPayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public RequestPayoutStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequestPayoutStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doRequestSurchargeCompletedEventHandler(object sender, doRequestSurchargeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRequestSurchargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRequestSurchargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doSellSomeAgainCompletedEventHandler(object sender, doSellSomeAgainCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSellSomeAgainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSellSomeAgainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public StructSellAgain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StructSellAgain[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public StructSellFailed[] itemssellfailed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StructSellFailed[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long[] itemssellnotfound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doSellSomeAgainInShopCompletedEventHandler(object sender, doSellSomeAgainInShopCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSellSomeAgainInShopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSellSomeAgainInShopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public StructSellAgain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StructSellAgain[])(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public StructSellFailed[] itemssellfailed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StructSellFailed[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long[] itemssellnotfound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[2]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doSendEmailToUserCompletedEventHandler(object sender, doSendEmailToUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSendEmailToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSendEmailToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long mailtouserreceiverid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doSendPostBuyFormCompletedEventHandler(object sender, doSendPostBuyFormCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSendPostBuyFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSendPostBuyFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PostBuyFormStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostBuyFormStruct)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doSetShipmentPriceTypeCompletedEventHandler(object sender, doSetShipmentPriceTypeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSetShipmentPriceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSetShipmentPriceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doSetUserLicenceDateCompletedEventHandler(object sender, doSetUserLicenceDateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSetUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSetUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doShowItemInfoExtCompletedEventHandler(object sender, doShowItemInfoExtCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doShowItemInfoExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doShowItemInfoExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ItemInfoExt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemInfoExt)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public ItemCatList[] itemcatpath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemCatList[])(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public ItemImageList[] itemimglist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemImageList[])(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public AttribStruct[] itemattriblist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttribStruct[])(this.results[3]));
            }
        }
        
        /// CodeRemarks
        public PostageStruct[] itempostageoptions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostageStruct[])(this.results[4]));
            }
        }
        
        /// CodeRemarks
        public ItemPaymentOptions itempaymentoptions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemPaymentOptions)(this.results[5]));
            }
        }
        
        /// CodeRemarks
        public CompanyInfoStruct itemcompanyinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyInfoStruct)(this.results[6]));
            }
        }
        
        /// CodeRemarks
        public ProductStruct itemproductinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductStruct)(this.results[7]));
            }
        }
        
        /// CodeRemarks
        public ItemVariantStruct[] itemvariants {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemVariantStruct[])(this.results[8]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doShowUserCompletedEventHandler(object sender, doShowUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doShowUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doShowUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public long userid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public string userlogin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// CodeRemarks
        public long usercreatedate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// CodeRemarks
        public long userlogindate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[4]));
            }
        }
        
        /// CodeRemarks
        public int userrating {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// CodeRemarks
        public int userisnewuser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
        
        /// CodeRemarks
        public int usernotactivated {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }
        
        /// CodeRemarks
        public int userclosed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[8]));
            }
        }
        
        /// CodeRemarks
        public int userblocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[9]));
            }
        }
        
        /// CodeRemarks
        public int userterminated {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[10]));
            }
        }
        
        /// CodeRemarks
        public int userhaspage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[11]));
            }
        }
        
        /// CodeRemarks
        public int userissseller {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[12]));
            }
        }
        
        /// CodeRemarks
        public int useriseco {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[13]));
            }
        }
        
        /// CodeRemarks
        public ShowUserFeedbacks userpositivefeedback {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowUserFeedbacks)(this.results[14]));
            }
        }
        
        /// CodeRemarks
        public ShowUserFeedbacks usernegativefeedback {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowUserFeedbacks)(this.results[15]));
            }
        }
        
        /// CodeRemarks
        public ShowUserFeedbacks userneutralfeedback {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowUserFeedbacks)(this.results[16]));
            }
        }
        
        /// CodeRemarks
        public int userjuniorstatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[17]));
            }
        }
        
        /// CodeRemarks
        public int userhasshop {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[18]));
            }
        }
        
        /// CodeRemarks
        public int usercompanyicon {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[19]));
            }
        }
        
        /// CodeRemarks
        public int usersellratingcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[20]));
            }
        }
        
        /// CodeRemarks
        public SellRatingAverageStruct[] usersellratingaverage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SellRatingAverageStruct[])(this.results[21]));
            }
        }
        
        /// CodeRemarks
        public int userisallegrostandard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[22]));
            }
        }
        
        /// CodeRemarks
        public int userisb2cseller {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[23]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void doVerifyItemCompletedEventHandler(object sender, doVerifyItemCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doVerifyItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doVerifyItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public int itemlisted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// CodeRemarks
        public long itemstartingtime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
}
